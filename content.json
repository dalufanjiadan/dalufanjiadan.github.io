{"pages":[{"title":"About","text":"","link":"/about/index.html"},{"title":"Project","text":"","link":"/project/index.html"},{"title":"Tags","text":"","link":"/tags/index.html"}],"posts":[{"title":"hexo blog分类方法","text":"Java 注解用于为 Java 代码提供元数据。作为元数据，注解不直接影响你的代码执行，但也有一些类型的注解实际上可以用于这一目的。Java 注解是从 Java5 开始添加到 Java 的。同 classs 和 interface 一样，注解也属于一种类型。它是在 Java SE 5.0 版本中开始引入的概念。 注解的定义注解通过@interface关键字进行定义 12public @interface TestAnnotation {} 注解的应用123@TestAnnotationpublic class Test {} 元注解元注解是可以注解到注解上的注解，或者说元注解是一种基本注解，但是它能够应用到其它的注解上面。有 @Retention、@Documented、@Target、@Inherited、@Repeatable 5 种。 @Retention:说明了这个注解的的存活时间,取值有 RetentionPolicy.SOURCE，RetentionPolicy.CLASS，RetentionPolicy.RUNTIME，分别表示注解保留到源代码阶段，编译阶段，以及运行阶段。 @Documented:将注解中的元素包含到 Javadoc 中去。 @Target:限定运用的场景。@Target 有下面的取值 ElementType.ANNOTATION_TYPE 可以给一个注解进行注解 ElementType.CONSTRUCTOR 可以给构造方法进行注解 ElementType.FIELD 可以给属性进行注解 ElementType.LOCAL_VARIABLE 可以给局部变量进行注解 ElementType.METHOD 可以给方法进行注解 ElementType.PACKAGE 可以给一个包进行注解 ElementType.PARAMETER 可以给一个方法内的参数进行注解 ElementType.TYPE 可以给一个类型进行注解，比如类、接口、枚举 @Inherited:Inherited 是继承的意思，但是它并不是说注解本身可以继承，而是说如果一个超类被 @Inherited 注解过的注解进行注解的话，那么如果它的子类没有被任何注解应用的话，那么这个子类就继承了超类的注解。 @Repeatable:注解的值可以同时取多个。 代码示例： 12345678910111213141516171819202122232425262728293031// @Retention@TestAnnotation@Retention(RetentionPolicy.RUNTIME)public @interface TestAnnotation {}// @Inherited@Inherited@Retention(RetentionPolicy.RUNTIME)@interface Test {}@Testpublic class A {}public class B extends A {}// @Repeatable@interface Persons {Person[] value();}@Repeatable(Persons.class)@interface Person{String role default \"\";}@Person(role=\"artist\")@Person(role=\"coder\")@Person(role=\"PM\")public class SuperMan{} 注解的属性注解的属性也叫做成员变量。注解只有成员变量，没有方法。注解的成员变量在注解的定义中以“无形参的方法”形式来声明，其方法名定义了该成员变量的名字，其返回值定义了该成员变量的类型。注解中定义属性时它的类型必须是 8 种基本数据类型外加 类、接口、注解及它们的数组。 123456789101112131415161718192021222324@TestAnnotation@Target(ElementType.TYPE)@Retention(RetentionPolicy.RUNTIME)public @interface TestAnnotation {int id();String msg();}// 这个注解中拥有 id 和 msg 两个属性。在使用的时候赋值@TestAnnotation(id=3,msg=\"hello annotation\")public class Test {}// 注解中属性可以有默认值，默认值需要用 default 关键值指定@Target(ElementType.TYPE)@Retention(RetentionPolicy.RUNTIME)public @interface TestAnnotation {public int id() default -1;public String msg() default \"Hi\";}// 使用@TestAnnotation()public class Test {} 如果一个注解内仅仅只有一个名字为 value 的属性时，应用这个注解时可以直接接属性值填写到括号内。 123public @interface Check {String value();} Java 预制的注解 @Deprecated:告诉开发者正在调用一个过时的元素比如过时的方法、过时的类、过时的成员变量。 @Override:复写父类中被 @Override 修饰的方法。 @SuppressWarnings:阻止警告。 @FunctionalInterface:函数式接口注解。 函数式接口可以很容易转换为 Lambda 表达式。 注解的提取注解通过反射获取。（反射 (Reflection) 是 Java 的特征之一，它允许运行中的 Java 程序获取自身的信息，并且可以操作类或对象的内部属性。） 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101// 首先可以通过 Class 对象的 isAnnotationPresent() 方法判断它是否应用了某个注解// boolean isAnnotationPresent(Class&lt;? extends Annotation&gt; annotationClass) {}// 然后通过 getAnnotation() 方法来获取 Annotation 对象// public &lt;A extends Annotation&gt; A getAnnotation(Class&lt;A&gt; annotationClass) {}// 或者是 getAnnotations() 方法// public Annotation[] getAnnotations() {}// 如果获取到的 Annotation 如果不为 null，则就可以调用它们的属性方法import java.lang.annotation.Annotation;import java.lang.annotation.Retention;import java.lang.annotation.RetentionPolicy;import java.lang.reflect.Field;import java.lang.reflect.Method;import java.util.Arrays;import java.lang.annotation.Target;import java.lang.annotation.ElementType;@Target(ElementType.TYPE)@Retention(RetentionPolicy.RUNTIME)@interface TestAnnotation { public int id() default -1; public String msg() default \"Hi\";}@Retention(RetentionPolicy.RUNTIME)@interface Check { String value();}@Retention(RetentionPolicy.RUNTIME)@interface Perform {}class Hero { public void say() { System.out.println(\"say from hero\"); } public void speak() { System.out.println(\"speak from hero\"); }}@TestAnnotation(msg = \"hello\")public class Main { @Check(value = \"hi\") int a; @Perform public void testMethod() { } @SuppressWarnings(\"deprecation\") public void test1() { Hero hero = new Hero(); hero.say(); hero.speak(); } public static void main(String[] args) { boolean hasAnnotation = Main.class.isAnnotationPresent(TestAnnotation.class); if (hasAnnotation) { TestAnnotation testAnnotation = Main.class.getAnnotation(TestAnnotation.class); // 获取类的注解 System.out.println(\"id:\" + testAnnotation.id()); System.out.println(\"msg:\" + testAnnotation.msg()); } try { Field a = Main.class.getDeclaredField(\"a\"); a.setAccessible(true); // 获取一个成员变量上的注解 Check check = a.getAnnotation(Check.class); if (check != null) { System.out.println(\"check value:\" + check.value()); } Method testMethod = Main.class.getDeclaredMethod(\"testMethod\"); if (testMethod != null) { // 获取方法中的注解 Annotation[] ans = testMethod.getAnnotations(); for (int i = 0; i &lt; ans.length; i++) { System.out.println(\"method testMethod annotation:\" + ans[i].annotationType().getSimpleName()); } } } catch (NoSuchFieldException e) { e.printStackTrace(); System.out.println(e.getMessage()); } catch (SecurityException e) { e.printStackTrace(); System.out.println(e.getMessage()); } catch (NoSuchMethodException e) { e.printStackTrace(); System.out.println(e.getMessage()); } }} 需要注意的是，如果一个注解要在运行时被成功提取，那么 @Retention(RetentionPolicy.RUNTIME) 是必须的。 注解的使用场景注解是一系列元数据，它提供数据用来解释程序代码，但是注解并非是所解释的代码本身的一部分。注解对于代码的运行效果没有直接影响。 注解有许多用处，主要如下： 提供信息给编译器： 编译器可以利用注解来探测错误和警告信息 编译阶段时的处理： 软件工具可以用来利用注解信息来生成代码、Html 文档或者做其它相应处理。 运行时的处理： 某些注解可以在程序运行的时候接受代码的提取 文章参考","link":"/2019/09/06/2019-09-06/"},{"title":"cmder","text":"cmder基础配置、及常用快捷键。 配置环境变量 系统变量path中添加cmder的根目录。 添加到右键菜单 管理员进入cmd。 Cmder.exe /REGISTER ALL bash 路径配置 setting-&gt;startup-&gt;task-&gt;bash，更改配置。 12345*cmd /c \"\"%ConEmuDir%\\..\\git-for-windows\\bin\\bash\" --login -i\"====替换为====set \"PATH=D:\\Git\\usr\\bin;%PATH%\" &amp; D:\\Git\\git-cmd.exe --no-cd --command=%ConEmuBaseDirShort%\\conemu-msys2-64.exe /usr/bin/bash.exe -l -i -new_console:p 管理员权限 勾选上run as admintrator 常用快捷键 全局召唤：ctrl + ` 新建终端：ctrl + t 关闭终端：ctrl + w 切换终端：ctrl + num 全屏：alt + enter 左右分屏：ctrl + shift + e 上下分屏：ctrl + shift + o 设置：win + alt + p","link":"/2019/09/09/2019-09-09/"},{"title":"springboot cookie","text":"spring boot cookie 相关操作 设置cookie1234Cookie cookie = new Cookie(\"JSESSIONID\", JSESSIONID);cookie.setPath(\"/\");response.addCookie(cookie); 获取cookie12345678Cookie[] cookies = request.getCookies();String cookieValue=null;for (Cookie cookie : cookies) { if (cookie.getName().equals(\"JSESSIONID\")) { cookieValue=cookie.getValue(); break; }}","link":"/2019/09/11/2019-09-11/"},{"title":"WebClient","text":"WebClient 简介及常用操作。 简介WebClient是从Spring WebFlux 5.0版本开始提供的一个非阻塞的基于响应式编程的进行Http请求的客户端工具。它的响应式编程的基于Reactor的。WebClient中提供了标准Http请求方式对应的get、post、put、delete等方法，可以用来发起相应的请求。 pom依赖123456789&lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-webflux&lt;/artifactId&gt;&lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;org.projectreactor&lt;/groupId&gt; &lt;artifactId&gt;reactor-spring&lt;/artifactId&gt; &lt;version&gt;1.0.1.RELEASE&lt;/version&gt;&lt;/dependency&gt; 请求流程 创建实例 发起请求 处理相应 创建实例 使用create() 12345WebClient webClient = WebClient.create();// 如果是调用特定服务的API，可以在初始化webclient 时使用，baseUrlWebClient webClient = WebClient.create(\"https://api.github.com\"); 使用WebClient builder 123456// buidler 可以使用自定义选项WebClient webClient = WebClient.builder() .baseUrl(\"https://api.github.com\") .defaultHeader(HttpHeaders.CONTENT_TYPE, \"application/vnd.github.v3+json\") .defaultHeader(HttpHeaders.USER_AGENT, \"Spring 5 WebClient\") .build(); 发起请求GET请求示例12345678public Flux&lt;GithubRepo&gt; listGithubRepositories(String username, String token) { return webClient.get() .uri(\"/user/repos\") .header(\"Authorization\", \"Basic \" + Base64Utils .encodeToString((username + \":\" + token).getBytes(UTF_8))) .retrieve() .bodyToFlux(GithubRepo.class);} 在uri中使用参数123456789public Flux&lt;GithubRepo&gt; listGithubRepositories(String username, String token) { return webClient.get() .uri(\"/user/repos?sort={sortField}&amp;direction={sortDirection}\", \"updated\", \"desc\") .header(\"Authorization\", \"Basic \" + Base64Utils .encodeToString((username + \":\" + token).getBytes(UTF_8))) .retrieve() .bodyToFlux(GithubRepo.class);} 使用URIBuilder1234567891011public Flux&lt;GithubRepo&gt; listGithubRepositories(String username, String token) { return webClient.get() .uri(uriBuilder -&gt; uriBuilder.path(\"/user/repos\") .queryParam(\"sort\", \"updated\") .queryParam(\"direction\", \"desc\") .build()) .header(\"Authorization\", \"Basic \" + Base64Utils .encodeToString((username + \":\" + token).getBytes(UTF_8))) .retrieve() .bodyToFlux(GithubRepo.class);} POST请求body方法参数为Mono/Flux 12345678910public Mono&lt;GithubRepo&gt; createGithubRepository(String username, String token, RepoRequest createRepoRequest) { return webClient.post() .uri(\"/user/repos\") .body(Mono.just(createRepoRequest), RepoRequest.class) .header(\"Authorization\", \"Basic \" + Base64Utils .encodeToString((username + \":\" + token).getBytes(UTF_8))) .retrieve() .bodyToMono(GithubRepo.class);} 使用syncBody快捷方式 12345678910public Mono&lt;GithubRepo&gt; createGithubRepository(String username, String token, RepoRequest createRepoRequest) { return webClient.post() .uri(\"/user/repos\") .syncBody(createRepoRequest) .header(\"Authorization\", \"Basic \" + Base64Utils .encodeToString((username + \":\" + token).getBytes(UTF_8))) .retrieve() .bodyToMono(GithubRepo.class);} 可以使用BodyInserters类提供的各种工厂方法来构造BodyInserter对象并将其传递给body方法。BodyInserters类包含从Object，Publisher，Resource，FormData，MultipartData等创建BodyInserter的方法。 12345678910public Mono&lt;GithubRepo&gt; createGithubRepository(String username, String token, RepoRequest createRepoRequest) { return webClient.post() .uri(\"/user/repos\") .body(BodyInserters.fromObject(createRepoRequest)) .header(\"Authorization\", \"Basic \" + Base64Utils .encodeToString((username + \":\" + token).getBytes(UTF_8))) .retrieve() .bodyToMono(GithubRepo.class);} 处理返回结果retrieve方法是获取响应body的最简单方法。但是，如果需要响应的头信息、Cookie等，可以使用exchange方法，该方法可以访问整个ClientResponse。 12345678public Flux&lt;GithubRepo&gt; listGithubRepositories(String username, String token) { return webClient.get() .uri(\"/user/repos\") .header(\"Authorization\", \"Basic \" + Base64Utils .encodeToString((username + \":\" + token).getBytes(UTF_8))) .exchange() .flatMapMany(clientResponse -&gt; clientResponse.bodyToFlux(GithubRepo.class));} 将response body 转换为对象/集合 bodyToMono 如果返回结果是一个Object，WebClient将接收到响应后把JSON字符串转换为对应的对象。 bodyToFlux 如果响应的结果是一个集合，则不能继续使用bodyToMono()，应该改用bodyToFlux()，然后依次处理每一个元素。 过滤器WebClient支持使用ExchangeFilterFunction进行请求过滤。可以使用过滤器功能以任何方式拦截和修改请求。例如，可以使用过滤器函数为每个请求添加Authorization标头，或记录每个请求的详细信息。 ExchangeFilterFunction有两个参数: ClientRequest 过滤器链中的下一个ExchangeFilterFunction 增加基本身份验证123456WebClient webClient = WebClient.builder() .baseUrl(GITHUB_API_BASE_URL) .defaultHeader(HttpHeaders.CONTENT_TYPE, GITHUB_V3_MIME_TYPE) .filter(ExchangeFilterFunctions .basicAuthentication(username, token)) .build(); 使用过滤器记录日志1234567891011121314151617WebClient webClient = WebClient.builder() .baseUrl(GITHUB_API_BASE_URL) .defaultHeader(HttpHeaders.CONTENT_TYPE, GITHUB_V3_MIME_TYPE) .filter(ExchangeFilterFunctions .basicAuthentication(username, token)) .filter(logRequest()) .build();private ExchangeFilterFunction logRequest() { return (clientRequest, next) -&gt; { logger.info(\"Request: {} {}\", clientRequest.method(), clientRequest.url()); clientRequest.headers() .forEach((name, values) -&gt; values.forEach(value -&gt; logger.info(\"{}={}\", name, value))); return next.exchange(clientRequest); };} 使用工厂方法来创建过滤器 ofRequestProcessor ofResponseProcessor 12345678private ExchangeFilterFunction logRequest() { ExchangeFilterFunction.ofRequestProcessor(clientRequest -&gt; { logger.info(\"Request: {} {}\", clientRequest.method(), clientRequest.url()); clientRequest.headers() .forEach((name, values) -&gt; values.forEach(value -&gt; logger.info(\"{}={}\", name, value))); return Mono.just(clientRequest); });} 使用过滤器拦截response 123456private ExchangeFilterFunction logResposneStatus() { return ExchangeFilterFunction.ofResponseProcessor(clientResponse -&gt; { logger.info(\"Response Status {}\", clientResponse.statusCode()); return Mono.just(clientResponse); });} 处理WebClient异常只要收到状态代码为4xx或5xx的响应，WebClient中的retrieve方法就会抛出WebClientResponseException。 12345678910111213public Flux&lt;GithubRepo&gt; listGithubRepositories() { return webClient.get() .uri(\"/user/repos?sort={sortField}&amp;direction={sortDirection}\", \"updated\", \"desc\") .retrieve() .onStatus(HttpStatus::is4xxClientError, clientResponse -&gt; Mono.error(new MyCustomClientException()) ) .onStatus(HttpStatus::is5xxServerError, clientResponse -&gt; Mono.error(new MyCustomServerException()) ) .bodyToFlux(GithubRepo.class);} 注意，与retrieve方法不同，exchange方法在4xx或5xx响应的情况下不会抛出异常。需要自己检查状态代码并按照希望的方式处理它们。 可以在控制器中使用@ExceptionHandler来处理WebClientResponseException。 12345@ExceptionHandler(WebClientResponseException.class)public ResponseEntity&lt;String&gt; handleWebClientResponseException(WebClientResponseException ex) { logger.error(\"Error from WebClient - Status {}, Body {}\", ex.getRawStatusCode(), ex.getResponseBodyAsString(), ex); return ResponseEntity.status(ex.getRawStatusCode()).body(ex.getResponseBodyAsString());}","link":"/2019/09/10/2019-09-10/"},{"title":"vscode","text":"配置、快捷键、插件 配置1234567891011{ // 调整窗口的缩放级别 \"window.zoomLevel\": 3, // 更改terminal \"terminal.integrated.shell.windows\": \"D:\\\\Git\\\\bin\\\\bash.exe\", // 控制树缩进(以像素为单位) \"workbench.tree.indent\": 15, // 指定的控制台用于启动Java程序 \"java.debug.settings.console\": \"internalConsole\"} 配置Java debug console 插件 TabOut cdnjs Code Runner Live Server GitLens Bookmarks vscode-icons Bracket Pair Colorizer 主题 Ayu 快捷键123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323// 将键绑定放入此文件中以覆盖默认值[ { \"key\": \"ctrl+alt+oem_4\", \"command\": \"editor.foldAll\", \"when\": \"editorTextFocus\" }, { \"key\": \"ctrl+k ctrl+0\", \"command\": \"-editor.foldAll\", \"when\": \"editorTextFocus\" }, { \"key\": \"ctrl+alt+oem_6\", \"command\": \"editor.unfoldAll\", \"when\": \"editorTextFocus\" }, { \"key\": \"ctrl+k ctrl+j\", \"command\": \"-editor.unfoldAll\", \"when\": \"editorTextFocus\" }, { \"key\": \"ctrl+shift+oem_2\", \"command\": \"editor.action.blockComment\", \"when\": \"editorTextFocus &amp;&amp; !editorReadonly\" }, { \"key\": \"shift+alt+a\", \"command\": \"-editor.action.blockComment\", \"when\": \"editorTextFocus &amp;&amp; !editorReadonly\" }, { \"key\": \"ctrl+l\", \"command\": \"editor.action.deleteLines\", \"when\": \"textInputFocus &amp;&amp; !editorReadonly\" }, { \"key\": \"ctrl+shift+k\", \"command\": \"-editor.action.deleteLines\", \"when\": \"textInputFocus &amp;&amp; !editorReadonly\" }, { \"key\": \"ctrl+shift+d\", \"command\": \"-extension.disconnect\", \"when\": \"editorTextFocus &amp;&amp; editorLangId == 'sql'\" }, { \"key\": \"ctrl+shift+d\", \"command\": \"-workbench.view.debug\" }, { \"key\": \"ctrl+shift+d\", \"command\": \"editor.action.addSelectionToPreviousFindMatch\" }, { \"key\": \"ctrl+u\", \"command\": \"-cursorUndo\", \"when\": \"textInputFocus\" }, { \"key\": \"ctrl+u\", \"command\": \"editor.action.transformToUppercase\" }, { \"key\": \"ctrl+shift+u\", \"command\": \"editor.action.transformToLowercase\" }, { \"key\": \"ctrl+shift+u\", \"command\": \"-workbench.action.output.toggleOutput\" }, { \"key\": \"ctrl+m\", \"command\": \"-markdown.extension.editing.toggleMath\", \"when\": \"editorTextFocus &amp;&amp; !editorReadonly &amp;&amp; editorLangId == 'markdown'\" }, { \"key\": \"ctrl+m\", \"command\": \"-editor.action.toggleTabFocusMode\" }, { \"key\": \"ctrl+alt+k\", \"command\": \"-code-runner.runCustomCommand\" }, { \"key\": \"ctrl+alt+j\", \"command\": \"-code-runner.runByLanguage\" }, { \"key\": \"ctrl+r r\", \"command\": \"-npm-script.rerun-last-script\" }, { \"key\": \"ctrl+r shift+r\", \"command\": \"-npm-script.run\" }, { \"key\": \"ctrl+r t\", \"command\": \"-npm-script.test\" }, { \"key\": \"ctrl+r l\", \"command\": \"-npm-script.showOutput\" }, { \"key\": \"ctrl+r shift+x\", \"command\": \"-npm-script.terminate-script\" }, { \"key\": \"shift+alt+r\", \"command\": \"revealFileInOS\" }, { \"key\": \"shift+alt+r\", \"command\": \"-revealFileInOS\", \"when\": \"!editorFocus\" }, { \"key\": \"ctrl+shift+oem_5\", \"command\": \"-editor.action.jumpToBracket\", \"when\": \"editorTextFocus\" }, { \"key\": \"ctrl+oem_5\", \"command\": \"workbench.action.terminal.splitInActiveWorkspace\", \"when\": \"terminalFocus\" }, { \"key\": \"ctrl+w\", \"command\": \"workbench.action.terminal.kill\", \"when\": \"terminalFocus\" }, { \"key\": \"ctrl+1\", \"command\": \"workbench.action.terminal.focusAtIndex1\", // 打开终端1 \"when\": \"terminalFocus\" }, { \"key\": \"ctrl+2\", \"command\": \"workbench.action.terminal.focusAtIndex2\", // 打开终端2 \"when\": \"terminalFocus\" }, { \"key\": \"ctrl+3\", \"command\": \"workbench.action.terminal.focusAtIndex3\", // 打开终端2 \"when\": \"terminalFocus\" }, { \"key\": \"ctrl+shift+g g\", \"command\": \"-workbench.view.scm\", \"when\": \"gitlens:enabled &amp;&amp; config.gitlens.keymap == 'chorded'\" }, { \"key\": \"ctrl+shift+g shift+b\", \"command\": \"-gitlens.toggleCodeLens\", \"when\": \"editorTextFocus &amp;&amp; gitlens:canToggleCodeLens &amp;&amp; gitlens:enabled &amp;&amp; config.gitlens.keymap == 'chorded'\" }, { \"key\": \"ctrl+shift+g s\", \"command\": \"-gitlens.showQuickRepoStatus\", \"when\": \"gitlens:enabled &amp;&amp; config.gitlens.keymap == 'chorded'\" }, { \"key\": \"ctrl+shift+g b\", \"command\": \"-gitlens.toggleFileBlame\", \"when\": \"editorTextFocus &amp;&amp; config.gitlens.keymap == 'chorded' &amp;&amp; gitlens:activeFileStatus =~ /blameable/\" }, { \"key\": \"ctrl+shift+g h\", \"command\": \"-gitlens.showQuickFileHistory\", \"when\": \"gitlens:enabled &amp;&amp; config.gitlens.keymap == 'chorded'\" }, { \"key\": \"ctrl+shift+g oem_minus\", \"command\": \"-gitlens.showLastQuickPick\", \"when\": \"gitlens:enabled &amp;&amp; config.gitlens.keymap == 'chorded'\" }, { \"key\": \"ctrl+shift+g shift+h\", \"command\": \"-gitlens.showQuickRepoHistory\", \"when\": \"gitlens:enabled &amp;&amp; config.gitlens.keymap == 'chorded'\" }, { \"key\": \"ctrl+shift+g oem_2\", \"command\": \"-gitlens.showCommitSearch\", \"when\": \"gitlens:enabled &amp;&amp; config.gitlens.keymap == 'chorded'\" }, { \"key\": \"ctrl+shift+g c\", \"command\": \"-gitlens.showQuickCommitFileDetails\", \"when\": \"editorTextFocus &amp;&amp; gitlens:enabled &amp;&amp; config.gitlens.keymap == 'chorded'\" }, { \"key\": \"ctrl+shift+g w\", \"command\": \"-gitlens.diffLineWithWorking\", \"when\": \"editorTextFocus &amp;&amp; config.gitlens.keymap == 'chorded' &amp;&amp; gitlens:activeFileStatus =~ /tracked/\" }, { \"key\": \"ctrl+shift+g shift+oem_comma\", \"command\": \"-gitlens.diffLineWithPrevious\", \"when\": \"editorTextFocus &amp;&amp; config.gitlens.keymap == 'chorded' &amp;&amp; gitlens:activeFileStatus =~ /tracked/\" }, { \"key\": \"ctrl+shift+g shift+oem_period\", \"command\": \"-gitlens.diffWithWorking\", \"when\": \"editorTextFocus &amp;&amp; config.gitlens.keymap == 'chorded' &amp;&amp; gitlens:activeFileStatus =~ /revision/\" }, { \"key\": \"ctrl+shift+g oem_comma\", \"command\": \"-gitlens.diffWithPreviousInDiffRight\", \"when\": \"editorTextFocus &amp;&amp; isInDiffRightEditor &amp;&amp; config.gitlens.keymap == 'chorded' &amp;&amp; gitlens:activeFileStatus =~ /tracked/\" }, { \"key\": \"ctrl+shift+g oem_comma\", \"command\": \"-gitlens.diffWithPrevious\", \"when\": \"editorTextFocus &amp;&amp; !isInDiffEditor &amp;&amp; config.gitlens.keymap == 'chorded' &amp;&amp; gitlens:activeFileStatus =~ /tracked/\" }, { \"key\": \"ctrl+shift+g oem_comma\", \"command\": \"-gitlens.diffWithPrevious\", \"when\": \"editorTextFocus &amp;&amp; isInDiffLeftEditor &amp;&amp; config.gitlens.keymap == 'chorded' &amp;&amp; gitlens:activeFileStatus =~ /tracked/\" }, { \"key\": \"ctrl+shift+g oem_period\", \"command\": \"-gitlens.diffWithNextInDiffLeft\", \"when\": \"editorTextFocus &amp;&amp; isInDiffLeftEditor &amp;&amp; config.gitlens.keymap == 'chorded' &amp;&amp; gitlens:activeFileStatus =~ /revision/ &amp;&amp; gitlens:activeFileStatus =~ /revision/\" }, { \"key\": \"ctrl+shift+g oem_period\", \"command\": \"-gitlens.diffWithNext\", \"when\": \"editorTextFocus &amp;&amp; isInDiffRightEditor &amp;&amp; config.gitlens.keymap == 'chorded' &amp;&amp; gitlens:activeFileStatus =~ /revision/ &amp;&amp; gitlens:activeFileStatus =~ /revision/\" }, { \"key\": \"ctrl+shift+g oem_period\", \"command\": \"-gitlens.diffWithNext\", \"when\": \"editorTextFocus &amp;&amp; !isInDiffEditor &amp;&amp; config.gitlens.keymap == 'chorded' &amp;&amp; gitlens:activeFileStatus =~ /revision/ &amp;&amp; gitlens:activeFileStatus =~ /revision/\" }, { \"key\": \"ctrl+shift+alt+g\", \"command\": \"workbench.view.extension.gitlens\" }, { \"key\": \"alt+i\", \"command\": \"cursorUp\", \"when\": \"textInputFocus\" }, { \"key\": \"alt+k\", \"command\": \"cursorDown\", \"when\": \"textInputFocus\" }, { \"key\": \"alt+j\", \"command\": \"cursorLeft\", \"when\": \"textInputFocus\" }, { \"key\": \"alt+l\", \"command\": \"cursorRight\", \"when\": \"textInputFocus\" }, { \"key\": \"ctrl+alt+j\", \"command\": \"cursorWordStartLeft\", \"when\": \"textInputFocus\" }, { \"key\": \"ctrl+alt+l\", \"command\": \"cursorWordStartRight\", \"when\": \"textInputFocus\" }, { \"key\": \"ctrl+alt+shift+i\", \"command\": \"cursorUpSelect\", \"when\": \"textInputFocus\" }, { \"key\": \"ctrl+alt+shift+k\", \"command\": \"cursorDownSelect\", \"when\": \"textInputFocus\" }, { \"key\": \"ctrl+alt+shift+j\", \"command\": \"cursorWordStartLeftSelect\", \"when\": \"textInputFocus\" }, { \"key\": \"ctrl+alt+shift+l\", \"command\": \"cursorWordStartRightSelect\", \"when\": \"textInputFocus\" }, { \"key\": \"ctrl+i\", \"command\": \"scrollLineDown\", \"when\": \"textInputFocus\" }, { \"key\": \"ctrl+shift+i\", \"command\": \"-workbench.action.toggleDevTools\", \"when\": \"isDevelopment\" }, { \"key\": \"ctrl+shift+i\", \"command\": \"scrollLineUp\", \"when\": \"textInputFocus\" }, { \"key\": \"ctrl+m\", \"command\": \"deleteLeft\", \"when\": \"textInputFocus &amp;&amp; !editorReadonly\" }, { \"key\": \"ctrl+shift+m\", \"command\": \"deleteRight\", \"when\": \"textInputFocus &amp;&amp; !editorReadonly\" }, { \"key\": \"ctrl+w\", \"command\": \"-editor.action.smartSelect.grow\", \"when\": \"editorTextFocus\" }] usersetting123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051{ \"window.zoomLevel\": 3, \"editor.suggestSelection\": \"first\", \"vsintellicode.modify.editor.suggestSelection\": \"automaticallyOverrodeDefaultValue\", \"files.exclude\": { \"**/.classpath\": true, \"**/.project\": true, \"**/.settings\": true, \"**/.factorypath\": true }, \"code-runner.runInTerminal\": true, \"editor.detectIndentation\": false, \"editor.tabSize\": 4, // \"terminal.integrated.shell.windows\": \"C:\\\\Windows\\\\System32\\\\WindowsPowerShell\\\\v1.0\\\\powershell.exe\", \"terminal.integrated.shell.windows\": \"D:\\\\Git\\\\bin\\\\bash.exe\", \"explorer.confirmDelete\": false, \"explorer.confirmDragAndDrop\": false, \"git.autofetch\": true, \"[yaml]\": { \"editor.insertSpaces\": true, \"editor.tabSize\": 4, \"editor.quickSuggestions\": { \"other\": true, \"comments\": false, \"strings\": true }, \"editor.autoIndent\": false }, \"python.jediEnabled\": false, \"python.formatting.provider\": \"yapf\", \"files.associations\": { \"*.html\": \"html\" }, // \"workbench.statusBar.visible\": false, \"workbench.tree.indent\": 15, \"java.jdt.ls.vmargs\": \"-noverify -Xmx1G -XX:+UseG1GC -XX:+UseStringDeduplication -javaagent:\\\"C:\\\\Users\\\\gech\\\\.vscode\\\\extensions\\\\gabrielbb.vscode-lombok-0.9.9/server/lombok.jar\\\"\", \"git.confirmSync\": false, \"java.debug.settings.console\": \"internalConsole\", \"remote.SSH.showLoginTerminal\": true, // \"workbench.tree.renderIndentGuides\":\"always\", // \"editor.snippetSuggestions\": \"bottom\" // \"workbench.startupEditor\": \"newUntitledFile\", \"editor.fontLigatures\": true, \"terminal.integrated.inheritEnv\": false, \"breadcrumbs.enabled\": true, \"editor.renderWhitespace\": \"none\", \"editor.renderControlCharacters\": false , \"workbench.iconTheme\": \"vscode-icons\" }","link":"/2019/09/14/2019-09-14-02/"},{"title":"mybatis cheat sheet","text":"- maven 依赖123456789&lt;dependency&gt; &lt;groupId&gt;mysql&lt;/groupId&gt; &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt; &lt;scope&gt;runtime&lt;/scope&gt;&lt;dependency&gt; &lt;groupId&gt;org.mybatis.spring.boot&lt;/groupId&gt; &lt;artifactId&gt;mybatis-spring-boot-starter&lt;/artifactId&gt; &lt;version&gt;2.1.2&lt;/version&gt;&lt;/dependency&gt; 配置12345678spring: datasource: username: root password: 123456url: jdbc:mysql://127.0.0.1:3306/testmybatis: mapperLocations: classpath:mapper/**/*.xml 基本用法123456@Mapperpublic interface TestMapper { // @Select(\"select * from todo limit 2\") List&lt;Map&lt;String,Object&gt;&gt; findTodos();} 123456789101112131415&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"&gt;&lt;mapper namespace=\"com.justdoit.springboottest.mapper.TestMapper\"&gt; &lt;!-- 开启基于redis的二级缓存 --&gt; &lt;!-- &lt;cache type=\"com.justdoit.springboottest.config.MybatisCacheConfig\" /&gt; --&gt; &lt;select id=\"findTodos\" resultType=\"java.util.Map\"&gt; SELECT * FROM todo limit 3 &lt;/select&gt;&lt;/mapper&gt; 最佳实践多个参数12@Update(\"update role set role_name = #{role.roleName}, role_name_zh = #{role.roleNameZh} where id = #{id}\")public void update(int id, RoleParam role); 分页PageHelper 依赖 配置 startPage pageInfo 12345&lt;dependency&gt; &lt;groupId&gt;com.github.pagehelper&lt;/groupId&gt; &lt;artifactId&gt;pagehelper-spring-boot-starter&lt;/artifactId&gt; &lt;version&gt;1.3.0&lt;/version&gt;&lt;/dependency&gt; 123456789101112// 第几页int currentPage = 2;// 每页数量int pageSize = 5;// 排序String orderBy = \"id desc\";PageHelper.startPage(currentPage, pageSize, orderBy);List&lt;Map&lt;String, Object&gt;&gt; todos = testMapper.findTodos();PageInfo&lt;Map&lt;String, Object&gt;&gt; pageInfo = new PageInfo&lt;&gt;(todos);log.info(pageInfo.toString());return todos; like 模糊查询 在代码中加上% 1List&lt;User&gt; test = userMapper.findUserByLikeName2(\"%\" +name+\"%\"); 123&lt;select id=\"findUserByLikeName2\" parameterType=\"java.lang.String\" resultMap=\"user\"&gt; select * from t_user where name like #{name,jdbcType=VARCHAR}&lt;/select&gt; 动态 SQLif1234567891011121314&lt;select id=\"findActiveBlogWithTitleLike\" resultType=\"Blog\"&gt; SELECT * FROM BLOG WHERE state = ‘ACTIVE’ &lt;if test=\"title != null\"&gt; AND title like #{title} &lt;/if&gt; &lt;if test=\"author != null and author.name != null\"&gt; AND author_name like #{author.name} &lt;/if&gt;&lt;/select&gt; choose、when、otherwise从多个条件中选择一个使用 1234567891011121314&lt;select id=\"findActiveBlogLike\" resultType=\"Blog\"&gt; SELECT * FROM BLOG WHERE state = ‘ACTIVE’ &lt;choose&gt; &lt;when test=\"title != null\"&gt; AND title like #{title} &lt;/when&gt; &lt;when test=\"author != null and author.name != null\"&gt; AND author_name like #{author.name} &lt;/when&gt; &lt;otherwise&gt; AND featured = 1 &lt;/otherwise&gt; &lt;/choose&gt;&lt;/select&gt; where1234567891011121314&lt;select id=\"findActiveBlogLike\" resultType=\"Blog\"&gt; SELECT * FROM BLOG &lt;where&gt; &lt;if test=\"state != null\"&gt; state = #{state} &lt;/if&gt; &lt;if test=\"title != null\"&gt; AND title like #{title} &lt;/if&gt; &lt;if test=\"author != null and author.name != null\"&gt; AND author_name like #{author.name} &lt;/if&gt; &lt;/where&gt;&lt;/select&gt; set12345678910&lt;update id=\"updateAuthorIfNecessary\"&gt; update Author &lt;set&gt; &lt;if test=\"username != null\"&gt;username=#{username},&lt;/if&gt; &lt;if test=\"password != null\"&gt;password=#{password},&lt;/if&gt; &lt;if test=\"email != null\"&gt;email=#{email},&lt;/if&gt; &lt;if test=\"bio != null\"&gt;bio=#{bio}&lt;/if&gt; &lt;/set&gt; where id=#{id}&lt;/update&gt; foreach item：集合中元素迭代时的别名，该参数为必选。 index：在 list 和数组中,index 是元素的序号，在 map 中，index 是元素的 key，该参数可选 open：foreach 代码的开始符号，一般是(和 close=”)”合用。常用在 in(),values()时。该参数可选 separator：元素之间的分隔符，例如在 in()的时候，separator=”,”会自动在元素中间用“,“隔开，避免手动输入逗号导致 sql 错误，如 in(1,2,)这样。该参数可选。 close: foreach 代码的关闭符号，一般是)和 open=”(“合用。常用在 in(),values()时。该参数可选。 collection: 要做 foreach 的对象，作为入参时，List 对象默认用”list”代替作为键，数组对象有”array”代替作为键，Map 对象没有默认的键。当然在作为入参时可以使用@Param(“keyName”)来设置键，设置 keyName 后，list,array 将会失效。 除了入参这种情况外，还有一种作为参数对象的某个字段的时候。举个例子：如果 User 有属性 List ids。入参是 User 对象，那么这个 collection = “ids”.如果 User 有属性 Ids ids;其中 Ids 是个对象，Ids 有个属性 List id;入参是 User 对象，那么 collection = “ids.id” 如果传入的是单参数且参数类型是一个 List 的时候，collection 属性值为 list .如果传入的是单参数且参数类型是一个 array 数组的时候，collection 的属性值为 array .如果传入的参数是多个的时候，我们就需要把它们封装成一个 Map 了，当然单参数也可以封装成 map，实际上如果你在传入参数的时候，在 MyBatis 里面也是会把它封装成一个 Map 的，map 的 key 就是参数名，所以这个时候 collection 属性值就是传入的 List 或 array 对象在自己封装的 map 里面的 key. 12345678910&lt;select id=\"insertWeeklyCost\" parameterType=\"java.util.List\"&gt; insert into weekly_cost(game_id,date,epiboly_cost,publicity_cost) values &lt;foreach collection=\"list\" item=\"element\" index=\"index\" open=\"(\" separator=\"),(\" close=\")\"&gt; #{element.gameId}, #{element.date}, #{element.epiboly_cost}, #{element.publicity_cost} &lt;/foreach&gt;&lt;/select&gt; 一级缓存 二级缓存1&lt;cache type=\"com.justdoit.springboottest.config.MybatisCacheConfig\" /&gt;","link":"/2019/09/14/2019-09-14-03/"},{"title":"mysql cheat sheet","text":"- 数据类型整型 数据类型 字节数 带符号最小值 带符号最大值 不带符号最小值 不带符号最大值 TINYINT 1 -128 127 0 255 SMALLINT 2 -32768 32767 0 65535 MEDIUMINT 3 -8388608 8388607 0 16777215 INT 4 -2147483648 2147483647 0 4294967295 BIGINT 8 -9223372036854775808 9223372036854775807 0 18446744073709551616 整型（N）形式 无论 N 等于多少，int 永远占 4 个字节 N 表示的是显示宽度，不足的用 0 补足，超过的无视长度而直接显示整个数字，但这要整型设置了 unsigned zerofill 才有效 浮点型 数据类型 字节数 备注 float 4 单精度浮点型 double 8 双精度浮点型 定点型12345678910111213141516171819202122232425DROP TABLE IF EXISTS test_decimal;CREATE TABLE test_decimal ( float_num float(10, 2), double_num double(20, 2), decimal_num decimal(20, 2)) ENGINE = innodb CHARSET = utf8;INSERT INTO test_decimalVALUES ( 1234567.66, 1234567899000000.66, 1234567899000000.66 );INSERT INTO test_decimalVALUES ( 1234567.66, 12345678990000000.66, 12345678990000000.66 ); float/double 在 db 中存储的是近似值，而 decimal 则是以字符串形式进行保存的 decimal(M,D)的规则和 float/double 相同，但区别在 float/double 在不指定 M、D 时默认按照实际精度来处理而 decimal 在不指定 M、D 时默认为 decimal(10, 0) 日期类型 数据类型 字节数 格式 备注 date 3 yyyy-MM-dd 存储日期值 time 3 HH:mm:ss 存储时分秒 year 1 yyyy 存储年 datetime 8 yyyy-MM-dd HH:mm:ss 存储日期+ 时间 timestamp 4 yyyy-MM-dd HH:mm:ss 存储日期+ 时间，可作时间戳 1234567891011121314DROP TABLE IF EXISTS test_time;CREATE TABLE test_time ( date_value date, time_value time, year_value year, datetime_value datetime, timestamp_value timestamp) ENGINE = innodb CHARSET = utf8;INSERT INTO test_timeVALUES(NOW(), NOW(), NOW(), NOW(), NOW()); datetime 占 8 个字节，timestamp 占 4 个字节 由于大小的区别，datetime 与 timestamp 能存储的时间范围也不同，datetime 的存储范围为 1000-01-01 00:00:00——9999-12-31 23:59:59，timestamp 存储的时间范围为 19700101080001——20380119111407 datetime 默认值为空，当插入的值为 null 时，该列的值就是 null；timestamp 默认值不为空，当插入的值为 null 的时候，mysql 会取当前时间 datetime 存储的时间与时区无关，timestamp 存储的时间及显示的时间都依赖于当前时区 在实际工作中，一张表往往我们会有两个默认字段，一个记录创建时间而另一个记录最新一次的更新时间，这种时候可以使用 timestamp 类型来实现： 12create_at timestamp DEFAULT CURRENT_TIMESTAMP COMMENT \"创建时间\",update_at timestamp DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT \"修改时间\" 字符串类型char、varchar、text、blob 它们的存储方式和数据的检索方式都不一样.数据的检索效率是：char &gt; varchar &gt; text.空间占用方面，就要具体情况具体分析了。 char：存储定长数据很方便，CHAR 字段上的索引效率级高，必须在括号里定义长度，可以有默认值，比如定义 char(10)，那么不论你存储的数据是否达到了 10 个字符，都要占去 10 个字符的空间（自动用空格填充），且在检索的时候后面的空格会隐藏掉，所以检索出来的数据需要记得用什么 trim 之类的函数去过滤空格。 varchar：存储变长数据，但存储效率没有 CHAR 高，必须在括号里定义长度，可以有默认值。保存数据的时候，不进行空格自动填充，而且如果数据存在空格时，当值保存和检索时尾部的空格仍会保留。另外，varchar 类型的实际长度是它的值的实际长度+1，这一个字节用于保存实际使用了多大的长度。 text：存储可变长度的非 Unicode 数据，最大长度为 2^31-1 个字符。text 列不能有默认值，存储或检索过程中，不存在大小写转换，后面如果指定长度，不会报错误，但是这个长度是不起作用的，意思就是你插入数据的时候，超过你指定的长度还是可以正常插入。 关于存储空间： 在使用 UTF8 字符集的时候，手册上是这样描叙的： 基本拉丁字母、数字和标点符号使用一个字节； 大多数的欧洲和中东手写字母适合两个字节序列：扩展的拉丁字母（包括发音符号、长音符号、重音符号、低音符号和其它音符）、西里尔字母、希腊语、亚美尼亚语、希伯来语、阿拉伯语、叙利亚语和其它语言； 韩语、中文和日本象形文字使用三个字节序列。 结论： char(M),varchar(M) M 表示字符长度 经常变化的字段用 varchar； 知道固定长度的用 char； 尽量用 varchar； 超过 255 字节的只能用 varchar 或者 text； 能用 varchar 的地方不用 text； 能够用数字类型的字段尽量选择数字类型而不用字符串类型的（电话号码），这会降低查询和连接的性能，并会增加存储开销。这是因为引擎在处理查询和连接回逐个比较字符串中每一个字符，而对于数字型而言只需要比较一次就够了。 官网In the following table, M represents the declared column length in characters for nonbinary string types and bytes for binary string types. L represents the actual length in bytes of a given string value. Data Type Storage Required CHAR(M) The compact family of InnoDB row formats optimize storage for variable-length character sets. See COMPACT Row Format Storage Characteristics. Otherwise, M × w bytes, &lt;= M &lt;= 255, where w is the number of bytes required for the maximum-length character in the character set. BINARY(M) M bytes, 0 &lt;= M &lt;= 255 VARCHAR(M), VARBINARY(M) L + 1 bytes if column values require 0 − 255 bytes, L + 2 bytes if values may require more than 255 bytes TINYBLOB, TINYTEXT L + 1 bytes, where L &lt; 28 BLOB, TEXT L + 2 bytes, where L &lt; 216 MEDIUMBLOB, MEDIUMTEXT L + 3 bytes, where L &lt; 224 LONGBLOB, LONGTEXT L + 4 bytes, where L &lt; 232 ENUM(‘value1’,’value2’,…) 1 or 2 bytes, depending on the number of enumeration values (65,535 values maximum) SET(‘value1’,’value2’,…) 1, 2, 3, 4, or 8 bytes, depending on the number of set members (64 members maximum) 日期处理 SELECT now(); - 当前日期时间 SELECT CURDATE() - 当前日期 SELECT CURTIME() - 当前时间 日期时间选取函数 DATE('2017-05-15 10:37:14.123456') - 获取日期：2017-05-15 TIME('2017-05-15 10:37:14.123456') - 获取时间：10:37:14.123456 YEAR('2017-05-15 10:37:14.123456') - 获取年份 MONTH('2017-05-15 10:37:14.123456') - 获取月份 DAY('2017-05-15 10:37:14.123456') - 获取日 HOUR('2017-05-15 10:37:14.123456') - 获取时 MINUTE('2017-05-15 10:37:14.123456') - 获取分 SECOND('2017-05-15 10:37:14.123456') - 获取秒 MICROSECOND('2017-05-15 10:37:14.123456') - 获取毫秒 QUARTER('2017-05-15 10:37:14.123456') - 获取季度 WEEK('2017-05-15 10:37:14.123456') - 获取周 DAYOFYEAR('2017-05-15 10:37:14.123456') - 日期在年度中第几天 DAYOFMONTH('2017-05-15 10:37:14.123456') - 日期在月度中第几天 DAYOFWEEK('2017-05-15 10:37:14.123456') - 日期在周中第几天；周日为第一天 日期计算 SELECT LAST_DAY('2016-05-01') - 月份中最后一天：2016-05-31 DATE_ADD(date,INTERVAL expr type) - 从日期加上指定的时间间隔 DATE_SUB(date,INTERVAL expr type) - 从日期减去指定的时间间隔 12345678910111213141516171819202122232425262728293031323334353637SELECT DATE_ADD('2017-05-15 10:37:14.123456', INTERVAL 1 YEAR);-- 表示：2018-05-15 10:37:14.123456SELECT DATE_ADD('2017-05-15 10:37:14.123456', INTERVAL 1 QUARTER);-- 表示：2017-08-15 10:37:14.123456SELECT DATE_ADD('2017-05-15 10:37:14.123456', INTERVAL 1 MONTH);-- 表示：2017-06-15 10:37:14.123456SELECT DATE_ADD('2017-05-15 10:37:14.123456', INTERVAL 1 WEEK);-- 表示：2017-05-22 10:37:14.123456SELECT DATE_ADD('2017-05-15 10:37:14.123456', INTERVAL 1 DAY);-- 表示：2017-05-16 10:37:14.123456SELECT DATE_ADD('2017-05-15 10:37:14.123456', INTERVAL 1 HOUR);-- 表示：2017-05-15 11:37:14.123456SELECT DATE_ADD('2017-05-15 10:37:14.123456', INTERVAL 1 MINUTE);-- 表示：2017-05-15 10:38:14.123456SELECT DATE_ADD('2017-05-15 10:37:14.123456', INTERVAL 1 SECOND);-- 表示：2017-05-15 10:37:15.123456SELECT DATE_ADD( '2017-05-15 10:37:14.123456', INTERVAL 1 MICROSECOND ); 日期转换函数 TIME_TO_SEC(‘01:00:05’); - 3605 TO_DAYS(‘2017-06-05’); - 736850 STR_TO_DATE(‘06.05.2017 19:40:30’, ‘%m.%d.%Y %H:%i:%s’);- 2017-06-05 19:40:30 DATE_FORMAT(‘2017-05-12 17:03:51’, ‘%Y 年%m 月%d 日 %H 时%i 分%s 秒’);- 2017 年 05 月 12 日 17 时 03 分 51 秒(具体需要什么格式的数据根据实际情况来;小写 h 为 12 小时制;) 插入获取插入记录的自增长 ID1public void insert(Role role); sql123456&lt;insert id=\"insert\" useGeneratedKeys=\"true\" keyProperty=\"id\"&gt; INSERT INTO role(role_name, role_name_zh) VALUES (#{roleName}, #{roleNameZh}) &lt;/insert&gt; 获取自增插入记录后，传入的参数role中的相应的属性id已经被设置为该记录在数据库中的 id 了。因此直接使用role.getId()即可获取记录 id。 –bb 引擎 INNODB MYISAM 对比 InnoDB 支持事务，MyISAM 不支持事务。这是 MySQL 将默认存储引擎从 MyISAM 变成 InnoDB 的重要原因之一 InnoDB 支持外键，而 MyISAM 不支持。对一个包含外键的 InnoDB 表转为 MYISAM 会失败 InnoDB 是聚集索引，MyISAM 是非聚集索引。聚簇索引的文件存放在主键索引的叶子节点上，因此 InnoDB 必须要有主键，通过主键索引效率很高。但是辅助索引需要两次查询，先查询到主键，然后再通过主键查询到数据。因此，主键不应该过大，因为主键太大，其他索引也都会很大。而 MyISAM 是非聚集索引，数据文件是分离的，索引保存的是数据文件的指针。主键索引和辅助索引是独立的 InnoDB 不保存表的具体行数，执行 select count(*) from table 时需要全表扫描。而 MyISAM 用一个变量保存了整个表的行数，执行上述语句时只需要读出该变量即可，速度很快 InnoDB 最小的锁粒度是行锁，MyISAM 最小的锁粒度是表锁。一个更新语句会锁住整张表，导致其他查询和更新都会被阻塞，因此并发访问受限。这也是 MySQL 将默认存储引擎从 MyISAM 变成 InnoDB 的重要原因之一 如何选择 是否要支持事务，如果要请选择 InnoDB，如果不需要可以考虑 MyISAM 如果表中绝大多数都只是读查询，可以考虑 MyISAM，如果既有读写也挺频繁，请使用 InnoDB 系统奔溃后，MyISAM 恢复起来更困难，能否接受，不能接受就选 InnoDB MySQL5.5 版本开始 Innodb 已经成为 Mysql 的默认引擎(之前是 MyISAM)","link":"/2019/09/14/2019-09-14/"},{"title":"ubuntu","text":"ubuntu 常用命令 查看端口占用12netstat -ap | grep 8080kill -9 PID 运行jar包1nohup java -jar mba-0.0.1-SNAPSHOT.jar &gt; nohup.log &amp; 删除 删除文件 1rm -f test 删除文件夹 1rm -rf test","link":"/2019/09/16/2019-09-16-02/"},{"title":"git","text":"git 常用操作 回退本地回退到某个commit状态12git loggit reset --hard 1094a 查看信息 查看当前远程仓库信息 git remote -vv 查看当前详细分支信息（可看到当前分支与对应的远程追踪分支） git branch -vv 分支创建分支 创建本地分支：git branch gc 创建远程分支：git push origin gc:release/gc 切换到分支git checkout gc 创建分支并切换到该分支git checkout -b gc 列出所有的分支 git branch git branch --all 合并分支 当分支的功能开发完毕后，切换到master分支：git checkout master 然后合并分支：git merge gc 如果有冲突，需要解决冲突。 删除分支 删除本地分支：git branch -d gc 删除远程分支：git push origin --delete &lt;branchName&gt; 更新本地远程分支 git remote update origin –prune git remote update origin -p 标签删除标签 删除远程标签：git push origin --delete tag &lt;tagname&gt; 新建密钥使用自定义名称 在~/.ssh/中新建config配置文件 Host github.com HostName github.com User git IdentityFile ~/.ssh/github_rsa 重新尝试 ssh -T git@github.com 在远程某个分支上进行开发 克隆代码 git clone git@github.com:XX/dev.git 查看所有分支 git branch --all 新建本地分支并关联远程目标分支 git checkout -b dev origin/dev 从远程分支更新代码 git pull origin dev 将本地新建的分支同步到服务器 git push origin dev 本地分支和远程分支建立追踪 git branch --set-upstream-to=origin/newbranch newbranch 后退操作 放弃在commit之前的操作 git checkout . 在push之前已经push 用远程分支更新本地文件在本地分支被改的面目全非时，通过以下命令将本地更新为远程分支的状态。 git fetch --all git reset --hard origin/master (这里master要修改为对应的分支名) git pull 回退到某个版本本地回退 git reset --hard 1094a 后面是commit id 本地回退后强制更新远程分支 git push origin HEAD:feature/沐辰风-事件分析开发 -f git log 后退出 q .gitignore 无效/log //忽略根目录log目录下所有文件 *.log //忽略所有.log结尾的文件无效往往是因为 ignore 文件中的目录。已经被提交到仓库记录了，需要删除提交。","link":"/2019/09/16/2019-09-16/"},{"title":"jackson","text":"- string to jackson","link":"/2019/09/19/2019-09-19-02/"},{"title":"swagger","text":"swagger 使用技巧 pom.xml123456789101112&lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;io.springfox&lt;/groupId&gt; &lt;artifactId&gt;springfox-swagger2&lt;/artifactId&gt; &lt;version&gt;2.6.1&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;io.springfox&lt;/groupId&gt; &lt;artifactId&gt;springfox-swagger-ui&lt;/artifactId&gt; &lt;version&gt;2.6.1&lt;/version&gt; &lt;/dependency&gt;&lt;/dependencies&gt; SwaggerConfig1234567891011121314151617181920212223242526272829303132333435363738394041424344import com.google.common.base.Predicate;import com.google.common.base.Predicates;import org.springframework.context.annotation.Bean;import org.springframework.context.annotation.Configuration;import springfox.documentation.builders.ApiInfoBuilder;import springfox.documentation.builders.PathSelectors;import springfox.documentation.builders.RequestHandlerSelectors;import springfox.documentation.service.ApiInfo;import springfox.documentation.spi.DocumentationType;import springfox.documentation.spring.web.plugins.Docket;import springfox.documentation.swagger2.annotations.EnableSwagger2;@Configuration@EnableSwagger2public class SwaggerConfig { @Bean public Docket api() { return new Docket(DocumentationType.SWAGGER_2) .apiInfo(apiInfo()) .select() .apis(RequestHandlerSelectors.any()) .paths(paths()) .build(); } // Describe your apis private ApiInfo apiInfo() { return new ApiInfoBuilder() .title(\"Swagger Sample APIs\") .description(\"This page lists all the rest apis for Swagger Sample App.\") .version(\"1.0-SNAPSHOT\") .build(); } // Only select apis that matches the given Predicates. private Predicate&lt;String&gt; paths() { // Match all paths except /error return Predicates.and( PathSelectors.regex(\"/.*\"), Predicates.not(PathSelectors.regex(\"/error.*\")) ); }} 根据配置启用/关闭swagger 配置文件：swagger.enable: false swaggerconfig.java：@ConditionalOnProperty(name = &quot;swagger.enable&quot;, havingValue = &quot;true&quot;)","link":"/2019/09/19/2019-09-19/"},{"title":"win 常用命令","text":"- kill 占用端口的进程12netstat -aon | findstr 8080taskkill /f /t /im 20428","link":"/2019/09/20/2019-09-20/"},{"title":"resttemplate","text":"– 123456789RestTemplate restTemplate = new RestTemplate();UriComponentsBuilder builder = UriComponentsBuilder .fromHttpUrl(\"http://localhost:8088/ba/management-report/overview\") .queryParam(\"time_range\", \"month\");// OverviewVO[] data = restTemplate.getForObject(builder.build().encode().toUri(), OverviewVO[].class);return restTemplate.getForObject(builder.build().encode().toUri(), Map.class);","link":"/2019/10/08/2019-09-25/"},{"title":"策略模式","text":"策略模式定义了算法族，分别封装起来，让它们之间可以相互替换，此模式让算法的变化独立于使用算法的客户。 duck1234567891011121314151617@Datapublic abstract class Duck { FlyBehavior flyBehavior; public Duck() { } public void performFly() { flyBehavior.fly(); } public void swim() { System.out.println(\"All ducks float, even decoys!\"); } } 定义一组飞行行为飞行接口1234public interface FlyBehavior { public void fly();} FlyWithWings12345678public class FlyWithWings implements FlyBehavior { @Override public void fly() { System.out.println(\"I'm flying!!\"); }} FlyRocketPowered12345678public class FlyRocketPowered implements FlyBehavior { @Override public void fly() { System.out.println(\"I'm flying with a rocket!\"); }} 具体Duck 实现类1234567891011public class MallardDuck extends Duck { public MallardDuck() { flyBehavior = new FlyWithWings(); } public void display() { System.out.println(\"I'm a real Mallard duck\"); }} test123456789@GetMapping(\"/duck\")public RestResponse&lt;Object&gt; duck() { Duck duck=new MallardDuck(); duck.performFly(); duck.setFlyBehavior(new FlyRocketPowered()); duck.performFly(); return RestResponse.success();} 12I'm flying!!I'm flying with a rocket!","link":"/2019/10/08/2019-10-08/"},{"title":"观察者模式","text":"观察者模式定义了对象之间的一对多依赖关系，当对象改变状态，其他依赖者都会收到通知。 主题接口12345678public interface Subject { public void registerObserver(Observer o); public void removeObserver(Observer o); public void notifyObservers();} 观察者接口1234public interface Observer { public void update(float temp, float humidity, float pressure);} ConcreteSubject1234567891011121314151617181920212223242526272829303132333435363738394041424344@Datapublic class WeatherData implements Subject { private ArrayList&lt;Observer&gt; observers; private float temperature; private float humidity; private float pressure; public WeatherData() { observers = new ArrayList&lt;Observer&gt;(); } @Override public void registerObserver(Observer o) { observers.add(o); } @Override public void removeObserver(Observer o) { observers.remove(o); } @Override public void notifyObservers() { for (Observer o : observers) { o.update(temperature, humidity, pressure); } } public void measurementsChanged() { notifyObservers(); } public void setMeasurements(float temperature, float humidity, float pressure) { this.temperature = temperature; this.humidity = humidity; this.pressure = pressure; measurementsChanged(); }} ConcreteObserver12345678910111213141516171819202122public class ForecastDisplay implements Observer, DisplayElement { private float currentPressure = 29.92f; private float lastPressure; public void update(float temp, float humidity, float pressure) { lastPressure = currentPressure; currentPressure = pressure; display(); } public void display() { System.out.print(\"Forecast: \"); if (currentPressure &gt; lastPressure) { System.out.println(\"Improving weather on the way!\"); } else if (currentPressure == lastPressure) { System.out.println(\"More of the same\"); } else if (currentPressure &lt; lastPressure) { System.out.println(\"Watch out for cooler, rainy weather\"); } }} 1234567891011121314151617181920212223242526public class StatisticsDisplay implements Observer, DisplayElement { private float maxTemp = 0.0f; private float minTemp = 200; private float tempSum= 0.0f; private int numReadings; public void update(float temp, float humidity, float pressure) { tempSum += temp; numReadings++; if (temp &gt; maxTemp) { maxTemp = temp; } if (temp &lt; minTemp) { minTemp = temp; } display(); } public void display() { System.out.println(\"Avg/Max/Min temperature = \" + (tempSum / numReadings) + \"/\" + maxTemp + \"/\" + minTemp); }} Test12345678910111213141516171819@GetMapping(\"/observer\")public RestResponse&lt;Object&gt; observer() { // 主题 WeatherData weatherData=new WeatherData(); // 对象 Observer forecastDisplay=new ForecastDisplay(); Observer statisticsDisplay=new StatisticsDisplay(); // 注册观察者 weatherData.registerObserver(forecastDisplay); weatherData.registerObserver(statisticsDisplay); weatherData.setMeasurements(1, 2, 3); weatherData.setMeasurements(4, 5, 6); return RestResponse.success();} 1234Forecast: Watch out for cooler, rainy weatherAvg/Max/Min temperature = 1.0/1.0/1.0Forecast: Improving weather on the way!Avg/Max/Min temperature = 2.5/4.0/1.0","link":"/2019/10/09/2019-10-09/"},{"title":"docker cheat sheet","text":"- IntroductionThe key benefit of Docker is that it allows users to package an application with all of its dependencies into a standardized unit for software development. Check Version docker version ContainersLifecycle docker create - creates a container but does not start it. docker rename - allows the container to be renamed. docker run - creates and starts a container in one operation. -t - allocate a pseudo-TTY session -d - run container in background and print container ID --rm - will remove the container after it stops. -v - map a directory on the host to a docker container.docker run -v $HOSTDIR:$DOCKERDIR --name docker rm - deletes a container. -v - remove the volumes associated with the container docker update - updates a container’s resource limits. Starting and Stopping docker start - starts a container so it is running. docker stop - stops a running container. docker restart - stops and starts a container. docker pause - pauses a running container, “freezing” it in place. docker unpause - will unpause a running container. docker wait - blocks until running container stops. docker kill - sends a SIGKILL to a running container. docker attach - will connect to a running container. Info docker ps - shows running containers. -a - shows running and stopped containers. docker logs - gets logs from container. (You can use a custom log driver, but logs is only available for json-file and journald in 1.10). docker inspect - looks at all the info on a container (including IP address). docker events - gets events from container. docker port - shows public facing port of container. docker top - shows running processes in container. docker stats - shows containers’ resource usage statistics. docker diff - shows changed files in the container’s FS. Import / Export docker cp - copies files or folders between a container and the local filesystem. docker export - turns container filesystem into tarball archive stream to STDOUT. Executing Commands docker exec - execute a command in container.docker exec -it foo /bin/bash CPU ConstraintsMemory ConstraintsCapabilities ImagesLifecycle docker images - shows all images. docker import - creates an image from a tarball. docker build - creates image from Dockerfile. docker commit - creates image from a container, pausing it temporarily if it is running. docker rmi - removes an image. docker load - loads an image from a tar archive as STDIN, including images and tags (as of 0.7). docker save - saves an image to a tar archive stream to STDOUT with all parent layers, tags &amp; versions (as of 0.7). Info docker history - shows history of image. docker tag - tags an image to a name (local or registry). errorerror during connect: Get http://%2F%2F.%2Fpipe%2Fdocker_engine/v1.35/version: open //./pipe/docker_engine: The system cannot find the file specified. In the default daemon configuration on Windows, the docker client must be run elevated to connect. This error may also indicate that the docker daemon is not running.1net start com.docker.service","link":"/2019/10/19/2019-10-19/"},{"title":"Clone a List in Java","text":"– Using a Copy ConstructorArrayList cloned = new ArrayList(collection c);123456ArrayList&lt;Integer&gt; nums = new ArrayList&lt;&gt;(Arrays.asList(1, 2, 3, 4));ArrayList&lt;Integer&gt; nums2 = new ArrayList&lt;&gt;(nums);nums2.add(5);System.out.println(nums);System.out.println(nums2); Using the addAll() methodboolean addAll(Collection c);1234ArrayList&lt;Integer&gt; nums = new ArrayList&lt;&gt;(Arrays.asList(1, 2, 3, 4)); ArrayList&lt;Integer&gt; nums2 = new ArrayList&lt;&gt;(); nums2.addAll(nums); Using streams in Java 812ArrayList&lt;Integer&gt; nums = new ArrayList&lt;&gt;(Arrays.asList(1, 2, 3, 4));List&lt;Integer&gt; nums2 = nums.stream().collect(Collectors.toList()); Using the clone() method123// Creating an empty list ArrayList&lt;Integer&gt; nums = new ArrayList&lt;&gt;(Arrays.asList(1, 2, 3, 4));List&lt;Integer&gt; nums2 = (List&lt;Integer&gt;) nums.clone();","link":"/2019/10/22/2019-10-22-1/"},{"title":"Round a Number to N Decimal Places in Java","text":"– Formatting a Decimal Numberprint a decimal numbe12System.out.printf(\"Value with 3 digits after decimal point %.3f %n\", PI);// OUTPUTS: Value with 3 digits after decimal point 3.142 format the value with the DecimalFormat12DecimalFormat df = new DecimalFormat(\"###.###\");System.out.println(df.format(PI)); Rounding Doubles with BigDecimal1234567private static double round(double value, int places) { if (places &lt; 0) throw new IllegalArgumentException(); BigDecimal bd = new BigDecimal(Double.toString(value)); bd = bd.setScale(places, RoundingMode.HALF_UP); return bd.doubleValue();}","link":"/2019/10/22/2019-10-22-02/"},{"title":"ArrayList 初始化","text":"– Arrays.asList1ArrayList&lt;Integer&gt; nums = new ArrayList&lt;&gt;(Arrays.asList(1, 2, 3, 4)); 使用生成匿名内部类进行初始化12345678ArrayList&lt;Integer&gt; nums=new ArrayList&lt;Integer&gt;(){ { add(1); add(2); add(3); add(4); }}; 先new 再add123ArrayList&lt;T&gt; obj = new ArrayList&lt;T&gt;();obj.add(\"o1\");obj.add(\"o2\"); 复制一个ArrayList1234567891011121314ArrayList&lt;Integer&gt; nums=new ArrayList&lt;Integer&gt;(){ { add(1); add(2); add(3); add(4); }};ArrayList&lt;Integer&gt; nums2=new ArrayList&lt;&gt;(nums);nums2.add(5);System.out.println(nums);System.out.println(nums2);","link":"/2019/10/22/2019-10-22/"},{"title":"spring boot 设置 JAR名称","text":"– 修改pom.xml123456&lt;build&gt; &lt;finalName&gt;app-1.0-SNAPSHOT&lt;/finalName&gt;&lt;/build&gt;&lt;build&gt; &lt;finalName&gt;app-${project.version}&lt;/finalName&gt;&lt;/build&gt;","link":"/2019/10/23/2019-10-23/"},{"title":"demo","text":"– demo123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778public RestResponse&lt;Map&lt;String, Object&gt;&gt; trackTable(Map&lt;String, Object&gt; params) { Map&lt;String, Object&gt; result = new HashMap&lt;&gt;(); result.put(\"header\", getTableHeader()); List&lt;TrackRow&gt; rows = new ArrayList&lt;&gt;(); result.put(\"rows\", rows); String timeRange = params.get(\"time_range\").toString(); String dateStart = params.get(\"start_date\").toString(); String dateEnd; // 上个周期的日期 String dateStartPre; String dateEndPre; // 处理下日期 if (\"month\".equals(timeRange)) { dateEnd = DateUtil8.plusDays(DateUtil8.plusMonths(params.get(\"end_date\").toString(), 1), -1); dateStartPre = DateUtil8.plusMonths(dateStart, -1); dateEndPre = DateUtil8.plusDays(dateStart, -1); } else { dateEnd = params.get(\"end_date\").toString(); dateStartPre = DateUtil8.plusDays(dateStart, -7); dateEndPre = DateUtil8.plusDays(dateEnd, -7); } params.put(\"date_start\", dateStart); params.put(\"date_end\", dateEnd); prepareData(params); Map&lt;String, Map&lt;String, List&lt;Map&lt;String, Object&gt;&gt;&gt;&gt; dataRevenue = revenueGrouped.get(); for (String key : dataRevenue.keySet()) { // 临时保存国内/海外/GOT的子项 List&lt;TrackRow&gt; list = new ArrayList&lt;&gt;(); for (String key2 : dataRevenue.get(key).keySet()) { TrackRow row = new TrackRow(); if (\"0\".equals(key)) { // 国内 row.setTrackName(mrData.getGenre().get(key2).toString()); } else if (\"1\".equals(key)) { // 海外 row.setTrackName(mrData.getRegion().get(key2).toString()); } else if (\"2\".equals(key)) { // GOT row.setTrackName(\"GOT\"); } double revenue = mrService.calculateRevenue(dataRevenue.get(key).get(key2), dateStart, dateEnd); double revenuePre = mrService.calculateRevenue(dataRevenue.get(key).get(key2), dateStartPre, dateEndPre); row.setRevenue(revenue); row.setRevenueRatio(calRatio(revenue, revenuePre)); list.add(row); } // 子项按照流水排序 list = list.stream().sorted(Comparator.comparing(TrackRow::getRevenue).reversed()).collect(toList()); // 处理合计 list.add(getTotal(list)); if (\"2\".equals(key.toString())) { // GOT 放在前面 rows.addAll(0, list); } else { rows.addAll(list); } } // 处理总计 // 这里注意，rows已经包含了合计，需要在getTotal中过滤下 rows.add(getTotal(rows)); rows.get(rows.size() - 1).setTrackName(\"总计\"); return RestResponse.success(result);}","link":"/2019/10/28/2019-10-28/"},{"title":"同时使用github/gitlab","text":"– 配置 Git 用户名、邮箱12git config --global user.name 'dalufanjiadan' &amp;&amp; git config --global user.email 'dalufanjiadan@qq.com'git config --local user.name 'gech' &amp;&amp; git config --local user.email 'gech@yoozoo.com' 生成 ssh key12ssh-keygen -t rsa -f ~/.ssh/id_rsa.gitlab -C \"gech@yoozoo.com\"ssh-keygen -t rsa -C \"dalufanjiadan@qq.com\" 配置 ~/.ssh/config 文件123Host gitlab.uuzu.com IdentityFile C:\\Users\\gech\\.ssh\\id_rsa.gitlab User gech 上传public key 到 Github/Gitlab 验证12ssh -T gitlab.uuzu.comssh -T git@github.com","link":"/2019/10/31/2019-10-31/"},{"title":"mysql","text":"– 创建表12345678910111213141516CREATE TABLE `dmp_tag_collection` ( `id` int(11) NOT NULL AUTO_INCREMENT, `username` varchar(255) NOT NULL, `tag_id` int(11) NOT NULL, `tag_name` varchar(255) NOT NULL DEFAULT '', `tag_description` varchar(255) NOT NULL, `tag_operator` varchar(255) NOT NULL, `tag_value` varchar(255) NOT NULL, `data_url` varchar(255) NOT NULL, `data_count` int(11) NOT NULL, `data_updated_at` datetime(6) NOT NULL, `created_at` datetime(6) DEFAULT CURRENT_TIMESTAMP(6), `updated_at` datetime(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), `deleted_at` datetime(6) DEFAULT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8; 12345678create table department( id int(10) primary key not null auto_increment, name VARCHAR(20) not null, create_user varchar(20) not null, create_time datetime DEFAULT CURRENT_TIMESTAMP, modify_user varchar(20) not null, modify_time datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP); 增加列12345678910111213alter table weekly_release add column modify_time timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '修改时间';-- 在表的最后一列增加新的一列ALTER TABLE `tbname`ADD COLUMN `state` TINYINT(2) NOT NULL DEFAULT '0' COMMENT '0为添加1为编辑' -- 在指定的位置增加新的一列ALTER TABLE `tbname`ADD COLUMN `state` TINYINT(2) NOT NULL DEFAULT '0' COMMENT '0为添加1为编辑' AFTER `column_name`;-- 在第一列增加新的一列ALTER TABLE `tbname`ADD COLUMN `state` TINYINT(2) NOT NULL DEFAULT '0' COMMENT '0为添加1为编辑' FIRST; 从一个库到另一个库1CREATE TABLE weekly_release LIKE data_analyze.weekly_release; 日期转换1date_format(FROM_UNIXTIME(first_opentime/1000),'%Y%m%d') 在有数据时更新，没有数据时插入123REPLACE into table (id, name, age) values(1, \"A\", 19)INSERT INTO table (id,name,age) VALUES('1','Mohammad','21') ON DUPLICATE KEY UPDATE name='Mohammad',age='21' 删除1234DELETE FROM aaa_app_publishersWHERE country='' 插入1234INSERT INTO table_name ( field1, field2,...fieldN )VALUES ( value1, value2,...valueN ); 删除重复的数据并保留一行12345678910111213141516DELETE FROM aaa_app_publishers_old1 WHERE publisher_id IN ( SELECT publisher_id FROM (SELECT publisher_id, COUNT( * ) FROM aaa_app_publishers_old1 GROUP BY publisher_id HAVING COUNT( * ) &gt; 1 ) AS a ) LIMIT 1;","link":"/2019/11/01/2019-11-01/"},{"title":"httputil","text":"– demo12345678910111213141516171819202122232425262728293031323334353637383940414243444546package com.uuzu.newbasys.utils;import java.security.MessageDigest;import java.security.NoSuchAlgorithmException;import java.util.Map;import javax.xml.bind.DatatypeConverter;/** * HttpUtilN */public class HttpUtilN { /** * 获取时间戳 */ public static String getTimestamp() { return DateUtil8.getTimestamp(); } public static String getQueryString(Map&lt;String, Object&gt; params) { String result = params.entrySet().stream().map(entry -&gt; entry.getKey() + \"=\" + entry.getValue()) .reduce((s1, s2) -&gt; s1 + \"&amp;\" + s2).orElse(\"\"); return result; } /** * 生成签名 */ public static String generateSign(String str, String key) { String hash = null; try { MessageDigest md = MessageDigest.getInstance(\"MD5\"); md.update((str + key).getBytes()); byte[] digest = md.digest(); hash = DatatypeConverter.printHexBinary(digest).toLowerCase(); } catch (NoSuchAlgorithmException e) { e.printStackTrace(); } return hash; }}","link":"/2019/11/04/2019-11-04/"},{"title":"mysql 索引","text":"– 创建索引12345678CREATE [UNIQUE|FULLTEXT|SPATIAL] INDEX index_name[USING index_type]ON table_name (index_col_name,...)-- 示例CREATE UNIQUE INDEX index_testUSING BTREEON weekly (create_user,date,department_id) [UNIQUE|FULLTEXT|SPATIAL]中括号中的这三个关键字表示创建的索引类型，它们分别表示唯一索引、全文索引、空间索引三种不同的索引类型。如果不指定任何关键字，则默认为普通索引。 index_name 表示索引的名称，由用户自行定义，以便于以后对该索引进行修改等管理操作。 index_type 表示索引的具体实现方式，在 MySQL 中，有两种不同形式的索引——BTREE 索引和 HASH 索引。在存储引擎为 MyISAM 和 InnoDB 的表中只能使用 BTREE，其默认值就是 BTREE；在存储引擎为 MEMORY 或者 HEAP 的表中可以使用 HASH 和 BTREE 两种类型的索引，其默认值为 HASH。 index_col_name 表示需要创建索引的字段名称，还可以针对多个字段创建复合索引，只需要在多个字段名称之间以英文逗号隔开即可。 此外，对于 CHAR 或 VARCHAR 类型的字段，还可以只使用字段内容前面的一部分来创建索引，只需要在对应的字段名称后面加上形如(length)的指令即可，表示只需要使用字段内容前面的 length 个字符来创建索引。在这里，以 User 表的 username 字段(类型为 VARCHAR(50))为例，使用 username 字段的 6 个字符前缀来创建索引。 删除索引123456ALTER TABLE table_nameDROP INDEX index_name;-- 示例ALTER TABLE weeklyDROP INDEX index_test; 修改索引在 MySQL 中并没有提供修改索引的直接指令，一般情况下，需要先删除掉原索引，再根据需要创建一个同名的索引，从而变相地实现修改索引操作。 12345678-- 先删除ALTER TABLE weeklyDROP INDEX index_test;-- 再以修改后的内容创建同名索引CREATE UNIQUE INDEX index_testUSING BTREEON weekly (create_user,department_id); 查看索引12345--如果查看索引前，没有使用user db_name等命令指定具体的数据库，则必须加上FROM db_nameSHOW INDEX FROM table_name [FROM db_name]--如果查看索引前，没有使用user db_name等命令指定具体的数据库，则必须加上db_name.前缀SHOW INDEX FROM [db_name.]table_name","link":"/2019/11/06/2019-11-06/"},{"title":"java iterator","text":"– 遍历删除集合中的元素123456789101112131415public static void main(String[] args) { List&lt;Integer&gt; nums = new ArrayList&lt;&gt;(Arrays.asList(1, 2, 3, 4)); // java8 之前删除集合元素 Iterator&lt;Integer&gt; iterator = nums.iterator(); while (iterator.hasNext()) { int num = iterator.next(); if (num % 2 == 0) { iterator.remove(); } } System.out.println(nums);} java8 应该使用stream。 1nums = nums.stream().filter(num -&gt; num % 2 == 0).collect(toList());","link":"/2019/11/07/2019-11-07/"},{"title":"docker install mysql","text":"– 获取镜像 docker pull mysql:latest run docker run --name mysql -d -p 3306:3306 -v //e/docker/data/mysql:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456 mysql docker run --name mysql -d -p 3306:3306 -v /Users/gecheng/files/docker/data/mysql:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456 mysqlError response from daemon git-bash尝试补全造成的问题。在path前加/可以实现跳过path的书写转义规定。 进入/退出容器 docker exec -it mysql bash exit 进入/退出mysql mysql -u root -p exit navicat 连接Authentication plugin ‘caching_sha2_password’ cannot be loadedMysql5.6以上的版本修改了Password算法，这里需要更新密码算法 123mysql&gt; ALTER user 'root'@'%' IDENTIFIED BY '123456' PASSWORD EXPIRE NEVER;mysql&gt; ALTER user 'root'@'%' IDENTIFIED WITH mysql_native_password BY '123456';FLUSH PRIVILEGES;","link":"/2019/11/08/2019-11-08-02/"},{"title":"Binding external configurations to POJO classes","text":"– – 定义属性12345678910111213141516171819202122## Top level app propertiesapp.name=ConfigurationPropertiesDemoAppapp.description=${app.name} is a spring boot app that demonstrates how to use external configuration propertiesapp.upload-dir=/uploadsapp.connect-timeout=500msapp.read-timeout=10s## Nested Object Properties (security)app.security.username=callicoderapp.security.password=123456# List Propertyapp.security.roles=USER,ADMIN,PARTNERapp.security.enabled=true## Map Properties (permissions)app.security.permissions.CAN_VIEW_POSTS=trueapp.security.permissions.CAN_EDIT_POSTS=trueapp.security.permissions.CAN_DELETE_POSTS=falseapp.security.permissions.CAN_VIEW_USERS=trueapp.security.permissions.CAN_EDIT_USERS=trueapp.security.permissions.CAN_DELETE_USERS=false 将外部属性绑定到类12345678910111213141516171819202122232425262728293031323334package com.sanhaoxuesheng.demo.config;import org.springframework.boot.context.properties.ConfigurationProperties;import org.springframework.boot.convert.DurationUnit;import lombok.Data;import java.time.Duration;import java.time.temporal.ChronoUnit;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import java.util.Map;@Data@ConfigurationProperties(prefix = \"app\")public class AppProperties { private String name; private String description; private String uploadDir; private Duration connectTimeout = Duration.ofMillis(1000); @DurationUnit(ChronoUnit.SECONDS) private Duration readTimeout = Duration.ofSeconds(30); private final Security security = new Security(); @Data public static class Security { private String username; private String password; private List&lt;String&gt; roles = new ArrayList&lt;&gt;(); private boolean enabled; private Map&lt;String, String&gt; permissions = new HashMap&lt;&gt;(); }} 启用配置属性123456789@SpringBootApplication@EnableConfigurationProperties(AppProperties.class)public class DemoApplication { public static void main(String[] args) { SpringApplication.run(DemoApplication.class, args); }} 在Spring Bean中注入配置属性123456789@Autowired AppProperties appProperties; @GetMapping(\"/hello\") public String hello() { System.out.println(appProperties); return \"hello world\"; }","link":"/2019/11/08/2019-11-08/"},{"title":"spring boot 注解缓存","text":"– – 缓存到接口123456789101112131415/** * LiveMapper */@CacheConfig(cacheNames = \"live\")public interface LiveMapper { @Cacheable(key = \"#root.method.name\", unless = \"#result == null\") List&lt;Map&lt;String, Object&gt;&gt; test(); @Cacheable(key = \"#params.get('gameId')+#params.get('dateToday')\", unless = \"#result == null\") List&lt;Map&lt;String, Object&gt;&gt; getOps(Map&lt;String, Object&gt; params); List&lt;Map&lt;String, Object&gt;&gt; getServersByOpGameId(Map&lt;String, Object&gt; params);}","link":"/2019/12/25/2019-12-25/"},{"title":"double to long","text":"– double to long123456789101112131415161718192021222324252627public class DoubleToLong { public static void main(String args[]){ // first example - converting double to long using longValue() method double d = 102.9520; long l = (new Double(d)).longValue(); System.out.println(\"double value=\" + d + \", long=\" + l); // second example - rather simple just cast double to long double bill = 293.05; long myBill = (long) bill; System.out.println(\"double value=\" + bill + \", long=\" + myBill); // third example - rounding double value to long in Java double dbl = 3421.56; long rnd = Math.round(dbl); System.out.println(\"double value=\" + dbl + \", long=\" + rnd); }}// Output// double value=102.952, long=102// double value=293.05, long=293// double value=3421.56, long=3422","link":"/2019/12/30/2019-12-30-1/"},{"title":"GitHub does not provide shell access","text":"– GitHub does not provide shell access12345$ ssh -T git@github.comHi You've successfully authenticated, but GitHub does not provide shell access.# answergit remote set-url origin git@github.com:lut/EvolutionApp.git","link":"/2019/12/30/2019-12-30/"},{"title":"springboot 保存文件","text":"– 保存图片12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849@ResponseBody@RequestMapping(value = \"/img-upload\", method = RequestMethod.POST)private Map&lt;String, Object&gt; imgUpload(@RequestParam(\"files\") MultipartFile[] files, HttpServletRequest request) throws Exception { // 获得物理路径webapp所在路径 String pathRoot = request.getSession().getServletContext().getRealPath(\"\"); pathRoot = request.getSession().getServletContext().getRealPath(\"resources/upload/images/\"); File fileDir = new File(pathRoot); if (!fileDir.exists()) { // 递归生成文件夹 fileDir.mkdirs(); } String path = \"\"; List&lt;String&gt; imgs = new ArrayList&lt;&gt;(); if (files != null &amp;&amp; files.length &gt; 0) { for (int i = 0; i &lt; files.length; i++) { MultipartFile file = files[i]; // 生成uuid作为文件名称 String uuid = UUID.randomUUID().toString().replaceAll(\"-\", \"\"); // 获得文件类型（可以判断如果不是图片，禁止上传） String contentType = file.getContentType(); // 获得文件后缀名称 String imageName = contentType.substring(contentType.indexOf(\"/\") + 1); path = uuid + \".\" + imageName; file.transferTo(new File(pathRoot + path)); // 获取当前项目的完整url String requestURL = request.getRequestURL().toString(); // 获取当前项目的请求路径uri String requestURI = request.getRequestURI(); // 得到去掉了uri的路径 String url = requestURL.substring(0, requestURL.length()-requestURI.length() + 1); // 返回 // return url + newFileName; imgs.add(url+ \"upload/images/\" + path); } } Map&lt;String, Object&gt; result = new HashMap&lt;&gt;(); result.put(\"errno\", 0); result.put(\"data\", imgs); return result;}","link":"/2019/11/11/20191111/"},{"title":"spring boot + jpa","text":"– pom12345678&lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt;&lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;&lt;/dependency&gt; application.properties12345678910111213spring.datasource.url = jdbc:mysql://localhost:3306/test?useSSL=falsespring.datasource.username = rootspring.datasource.password = 123456## Hibernate Properties# The SQL dialect makes Hibernate generate better SQL for the chosen databasespring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect# Hibernate ddl auto (create, create-drop, validate, update)spring.jpa.hibernate.ddl-auto = updateserver.port=8001logging.level.root=warn model123456789101112131415161718192021222324252627282930313233343536373839404142package com.sanhaoxuesheng.demo.model;import com.fasterxml.jackson.annotation.JsonIgnoreProperties;import org.springframework.data.annotation.CreatedDate;import org.springframework.data.annotation.LastModifiedDate;import org.springframework.data.jpa.domain.support.AuditingEntityListener;import lombok.Data;import javax.persistence.*;import javax.validation.constraints.NotBlank;import java.io.Serializable;import java.util.Date;@Data@Entity@Table(name = \"notes\")@EntityListeners(AuditingEntityListener.class)@JsonIgnoreProperties(value = { \"createdAt\", \"updatedAt\" })public class Note implements Serializable { @Id @GeneratedValue(strategy = GenerationType.IDENTITY) private Long id; @NotBlank private String title; @NotBlank private String content; @Column(nullable = false, updatable = false) @Temporal(TemporalType.TIMESTAMP) @CreatedDate private Date createdAt; @Column(nullable = false) @Temporal(TemporalType.TIMESTAMP) @LastModifiedDate private Date updatedAt;} @EnableJpaAuditing123456789@EnableJpaAuditing@SpringBootApplicationpublic class DemoApplication { public static void main(String[] args) { SpringApplication.run(DemoApplication.class, args); }} repository1234567891011package com.sanhaoxuesheng.demo.repository;import com.sanhaoxuesheng.demo.model.Note;import org.springframework.data.jpa.repository.JpaRepository;import org.springframework.stereotype.Repository;@Repositorypublic interface NoteRepository extends JpaRepository&lt;Note, Long&gt; {} exception123456789101112131415161718192021package com.sanhaoxuesheng.demo.exception;import org.springframework.http.HttpStatus;import org.springframework.web.bind.annotation.ResponseStatus;import lombok.Data;@Data@ResponseStatus(value = HttpStatus.NOT_FOUND)public class ResourceNotFoundException extends RuntimeException { private String resourceName; private String fieldName; private Object fieldValue; public ResourceNotFoundException(String resourceName, String fieldName, Object fieldValue) { super(String.format(\"%s not found with %s : '%s'\", resourceName, fieldName, fieldValue)); this.resourceName = resourceName; this.fieldName = fieldName; this.fieldValue = fieldValue; }} controller1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465package com.sanhaoxuesheng.demo.controller;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.http.ResponseEntity;import org.springframework.web.bind.annotation.*;import javax.validation.Valid;import com.sanhaoxuesheng.demo.exception.ResourceNotFoundException;import com.sanhaoxuesheng.demo.model.Note;import com.sanhaoxuesheng.demo.repository.NoteRepository;import java.util.List;@RestController@RequestMapping(\"/api\")public class NoteController { @Autowired NoteRepository noteRepository; // Get All Notes @GetMapping(\"/notes\") public List&lt;Note&gt; getAllNotes() { return noteRepository.findAll(); } // Create a new Note @PostMapping(\"/notes\") public Note createNote(@Valid @RequestBody Note note) { return noteRepository.save(note); } // Get a Single Note @GetMapping(\"/notes/{id}\") public Note getNoteById(@PathVariable(value = \"id\") Long noteId) { return noteRepository.findById(noteId).orElseThrow(() -&gt; new ResourceNotFoundException(\"Note\", \"id\", noteId)); } // Update a Note @PutMapping(\"/notes/{id}\") public Note updateNote(@PathVariable(value = \"id\") Long noteId, @Valid @RequestBody Note noteDetails) { Note note = noteRepository.findById(noteId) .orElseThrow(() -&gt; new ResourceNotFoundException(\"Note\", \"id\", noteId)); note.setTitle(noteDetails.getTitle()); note.setContent(noteDetails.getContent()); Note updatedNote = noteRepository.save(note); return updatedNote; } // Delete a Note @DeleteMapping(\"/notes/{id}\") public ResponseEntity&lt;Object&gt; deleteNote(@PathVariable(value = \"id\") Long noteId) { Note note = noteRepository.findById(noteId) .orElseThrow(() -&gt; new ResourceNotFoundException(\"Note\", \"id\", noteId)); noteRepository.delete(note); return ResponseEntity.ok().build(); }}","link":"/2019/11/11/20191111_02/"},{"title":"使用gitlab作为图床","text":"– 保存图片12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758@ResponseBody@RequestMapping(value = \"/img-upload\", method = RequestMethod.POST)private Map&lt;String, Object&gt; imgUpload(@RequestParam(\"files\") MultipartFile[] files, HttpServletRequest request) throws Exception { // 获得物理路径webapp所在路径 String pathRoot = request.getSession().getServletContext().getRealPath(\"\"); pathRoot = request.getSession().getServletContext().getRealPath(\"resources/upload/images/\"); File fileDir = new File(pathRoot); if (!fileDir.exists()) { // 递归生成文件夹 fileDir.mkdirs(); } String path = \"\"; List&lt;String&gt; imgs = new ArrayList&lt;&gt;(); if (files != null &amp;&amp; files.length &gt; 0) { for (int i = 0; i &lt; files.length; i++) { MultipartFile file = files[i]; // 生成uuid作为文件名称 String uuid = UUID.randomUUID().toString().replaceAll(\"-\", \"\"); // 获得文件类型（可以判断如果不是图片，禁止上传） String contentType = file.getContentType(); // 获得文件后缀名称 String imageName = contentType.substring(contentType.indexOf(\"/\") + 1); path = uuid + \".\" + imageName; // 上传到gitlab HttpHeaders headers = new HttpHeaders(); headers.setContentType(MediaType.APPLICATION_JSON); headers.set(\"PRIVATE-TOKEN\", \"tvimWu7W6QhmuwHZ8cTe\"); JSONObject body = new JSONObject(); body.put(\"branch\", \"master\"); body.put(\"author_email\", \"gech@yoozoo.com\"); body.put(\"author_name\", \"gech\"); body.put(\"encoding\", \"base64\"); body.put(\"content\", Encodes.encodeBase64(file.getBytes())); body.put(\"commit_message\", \"upload image\"); HttpEntity&lt;String&gt; request1 = new HttpEntity&lt;String&gt;(body.toString(), headers); String responseString = restTemplate.postForObject( \"https://gitlab.uuzu.com/api/v4/projects/1766/repository/files/\" + path, request1, String.class); imgs.add(\"https://gitlab.uuzu.com/datacenter/images/raw/master/\" + path); } } Map&lt;String, Object&gt; result = new HashMap&lt;&gt;(); result.put(\"errno\", 0); result.put(\"data\", imgs); return result;}","link":"/2019/11/11/20191111_03/"},{"title":"日期处理","text":"- LocalDate &amp; LocalTime &amp; LocalDateTime创建实例 of from now parse 实例都是不可变对象。 读取值 getXXX get(TemporalField) 合并日期和时间 LocalDateTime.of date.atTime time.atDate 123456789101112131415161718192021public static void main(String[] args){ LocalDate ld = LocalDate.of(2020, 1, 2); LocalDate ldNow = LocalDate.now(); LocalDate ld2 = LocalDate.from(ld); LocalTime lt = LocalTime.parse(\"12:20:30\"); System.out.println(ld); System.out.println(ldNow); int year = ldNow.getYear(); int month = ldNow.get(ChronoField.MONTH_OF_YEAR); int day = ldNow.get(ChronoField.DAY_OF_MONTH); int hour = lt.getHour(); int minute = lt.get(ChronoField.MINUTE_OF_HOUR); System.out.println(year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minute); // 2020-01-02 // 2020-01-03 // 2020:1:3} 1234567891011121314151617181920212223242526272829public static void main(String[] args) { LocalDate date = LocalDate.now(); LocalTime time = LocalTime.now(); LocalDateTime ldt = LocalDateTime.of(2020, 1, 3, 11, 54, 20); LocalDateTime ldt2 = LocalDateTime.of(date, time); LocalDateTime ldt3 = date.atTime(time); LocalDateTime ldt4 = time.atDate(date); LocalDate date2 = ldt.toLocalDate(); LocalTime time2 = ldt.toLocalTime(); System.out.println(ldt); System.out.println(ldt2); System.out.println(ldt3); System.out.println(ldt4); System.out.println(date2); System.out.println(time2); // 2020-01-03T11:54:20 // 2020-01-03T11:58:00.987 // 2020-01-03T11:58:00.987 // 2020-01-03T11:58:00.987 // 2020-01-03 // 11:54:20} Instant以 Unix 元年时间（UTC 时区 1970 年 1 月 1 日午夜时分）到现在的秒数。 1234567891011121314Instant instant = Instant.now();long timeInSeconds = instant.getEpochSecond();Instant instant2 = Instant.ofEpochSecond(timeInSeconds);Instant instant3 = instant2.plus(10, ChronoUnit.SECONDS);System.out.println(instant);System.out.println(timeInSeconds);System.out.println(instant2);System.out.println(instant3);// 2020-01-03T06:45:00.782Z// 1578033900// 2020-01-03T06:45:00Z// 2020-01-03T06:45:10Z Duration &amp; Period以上所有的类都实现了Temporal接口，Temporal 接口定义了如何读取和操纵为时间建模的对象的值。Duration、Period 描述了两个 Temporal 对象之间的时间间隔。Duraion 主要用于以秒和纳秒衡量时间的长短。需要以年、月或者日的方式对时间单位建模则可使用 Period。 123456789101112131415161718192021LocalDate ld1 = LocalDate.of(2020, 1, 3);LocalDate ld2 = LocalDate.of(2020, 5, 4);Period period = Period.between(ld1, ld2);int days = period.getDays();System.out.println(ld1);System.out.println(ld2);System.out.println(period);System.out.println(days);period = period.plusDays(10);LocalDate ld3 = ld2.plus(period);System.out.println(ld3);// 2020-01-03// 2020-05-04// P4M1D// 1// 2020-09-15 12345678910111213141516171819202122232425LocalDateTime ldt1 = LocalDateTime.now();LocalDateTime ldt2 = ldt1.plusHours(1);Duration duration = Duration.between(ldt1, ldt2);duration = duration.plusHours(1);System.out.println(ldt1);System.out.println(ldt2);LocalDateTime ldt3 = ldt2.plus(duration);System.out.println(duration);System.out.println(ldt3);Instant instant1 = Instant.now();Instant instant2 = instant1.plusSeconds(10);Duration duration2 = Duration.between(instant1, instant2);System.out.println(duration2);// 2020-01-03T15:24:39.551// 2020-01-03T16:24:39.551// PT2H// 2020-01-03T18:24:39.551// PT10S 修改日期withAttributewithAttribute 会创建对象的一个副本。 123456789101112LocalDate ld = LocalDate.now();System.out.println(ld);LocalDate ld2 = ld.withYear(2021);LocalDate ld3 = ld.with(ChronoField.MONTH_OF_YEAR, 6);System.out.println(ld2);System.out.println(ld3);// 2020-01-03// 2021-01-03// 2020-06-03 plus minus1234567LocalDate ld1 = LocalDate.now();Period period = Period.ofDays(10);LocalDate ld2 = ld1.plus(period);System.out.println(ld1);System.out.println(period);System.out.println(ld2); TemporalAdjuster上面两种对日期的操作是比较直接的方式。如需要复杂操作，比如将日期调整到下个周日、或者本月最后一天，建议使用TemporalAdjusters，已经提供了许多常用的预定义的 TemporalAdjuster。当然，可以实现 TemporanAdjuster 接口自定义日期操作。 1234567LocalDate ld1 = LocalDate.now();System.out.println(ld1.with(TemporalAdjusters.firstDayOfMonth()));// 这个日期的当前月的第二个星期一的日期System.out.println(ld1.with(TemporalAdjusters.dayOfWeekInMonth(2, DayOfWeek.MONDAY)));System.out.println(ld1.with(TemporalAdjusters.next(DayOfWeek.FRIDAY)));System.out.println(ld1.with(TemporalAdjusters.nextOrSame(DayOfWeek.FRIDAY))); 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657import java.time.DayOfWeek;import java.time.Duration;import java.time.Instant;import java.time.LocalDate;import java.time.LocalDateTime;import java.time.Period;import java.time.temporal.TemporalUnit;import java.time.temporal.ChronoField;import java.time.temporal.ChronoUnit;import java.time.temporal.Temporal;import java.time.temporal.TemporalAdjuster;import java.time.temporal.TemporalAdjusters;class NextWorkingDay implements TemporalAdjuster { @Override public Temporal adjustInto(Temporal temporal) { DayOfWeek dow = DayOfWeek.of(temporal.get(ChronoField.DAY_OF_WEEK)); int dayToAdd = 1; if (dow == DayOfWeek.FRIDAY) { dayToAdd = 3; } else if (dow == DayOfWeek.SATURDAY) { dayToAdd = 2; } return temporal.plus(dayToAdd, ChronoUnit.DAYS); }}public class Test { public static void main(String[] args) { LocalDate ld1 = LocalDate.now(); System.out.println(ld1.with(new NextWorkingDay())); // 也可以使用lambda LocalDate ld2 = ld1.with(temporal -&gt; { DayOfWeek dow = DayOfWeek.of(temporal.get(ChronoField.DAY_OF_WEEK)); int dayToAdd = 1; if (dow == DayOfWeek.FRIDAY) { dayToAdd = 3; } else if (dow == DayOfWeek.SATURDAY) { dayToAdd = 2; } return temporal.plus(dayToAdd, ChronoUnit.DAYS); }); System.out.println(ld2); }} 打印解析日期 DateTimeFormatter 12345678910111213141516171819LocalDate ld = LocalDate.now();String s1 = ld.format(ISO_DATE);String s2 = ld.format(BASIC_ISO_DATE);System.out.println(ld);System.out.println(s1);System.out.println(s2);LocalDate date1 = LocalDate.parse(\"20191221\", DateTimeFormatter.BASIC_ISO_DATE);LocalDate date2 = LocalDate.parse(\"2020-12-21\", DateTimeFormatter.ISO_DATE);System.out.println(date1);System.out.println(date2);// 自定义格式器DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");String s3 = ld.format(formatter);System.out.println(s3); 时区 ZoneId时区是按照一定的规则将区域划分成标准时间相同的区间。表达时区两种方法。 ZoneId.of(&quot;Asia/Shanghai&quot;) 利用当前时区和 UTC/格林尼治的固定偏差ZoneOffset.of(&quot;-05:00&quot;) 123456789101112131415161718192021LocalDate ld = LocalDate.now();ZoneId shanghaiZone = ZoneId.of(\"Asia/Shanghai\");ZonedDateTime zdt = ld.atStartOfDay(shanghaiZone);System.out.println(ld);System.out.println(shanghaiZone);System.out.println(zdt);LocalDateTime ldt = LocalDateTime.now();ZonedDateTime zdt1 = ldt.atZone(shanghaiZone);System.out.println(ldt);System.out.println(zdt1);Instant instant = Instant.now();ZonedDateTime zdt2 = instant.atZone(shanghaiZone);System.out.println(zdt2);ZoneId zoneId = ZoneOffset.of(\"+08:00\");ZonedDateTime zdt3 = instant.atZone(zoneId);System.out.println(zdt3);","link":"/2020/01/03/20200103/"},{"title":"jpa 排序分页","text":"– repository12345@Repositorypublic interface UserRepository extends PagingAndSortingRepository&lt;User, Long&gt; { Page&lt;User&gt; findAll(Pageable pageable);} controller12345Page&lt;User&gt; users = userRepository.findAll(pageable);List&lt;UserProfile&gt; result = new ArrayList&lt;&gt;();for (User user : users) { result.add(new UserProfile(user));}","link":"/2019/12/22/20191222/"},{"title":"docker cheat sheet","text":"- 常用命令 拉取镜像 docker pull [IMAGE] 查看所有镜像 docker images 删除镜像 docker image rm [IMAGE] 删除所有镜像 docker rmi $(docker images -aq) Docker Commands, Help &amp; Tips Show commands &amp; management commands docker Docker version info docker version Show info like number of containers, etc docker info WORKING WITH CONTAINERS Create an run a container in foreground docker container run -it -p 80:80 nginx Create an run a container in background docker container run -d -p 80:80 nginx Naming Containers docker container run -d -p 80:80 --name nginx-server nginx List running containers docker container ls or docker ps List all containers (Even if not running) docker container ls -a Stop container docker container stop [ID] Stop all running containers docker stop $(docker ps -aq) Remove container (Can not remove running containers, must stop first) docker container rm [ID] To remove a running container use force(-f) docker container rm -f [ID] Remove multiple containers docker container rm [ID] [ID] [ID] Remove all containers docker rm $(docker ps -aq) Get logs (Use name or ID) docker container logs [NAME] List processes running in container docker container top [NAME] IMAGE COMMANDS List the images we have pulled docker image ls We can also just pull down images docker pull [IMAGE] Remove image docker image rm [IMAGE] Remove all images docker rmi $(docker images -a -q) Some sample container creation12345678# NGINX$ docker container run -d -p 80:80 --name nginx nginx (-p 80:80 is optional as it runs on 80 by default)# APACHE$ docker container run -d -p 8080:80 --name apache httpd# MONGODB$ docker container run -d -p 27017:27017 --name mongo mongo# MYSQL$ docker container run -d -p 3306:3306 --name mysql --env MYSQL_ROOT_PASSWORD=123456 mysql CONTAINER INFO123456# View info on container$ docker container inspect [NAME]# Specific property (--format)$ docker container inspect --format '{{ .NetworkSettings.IPAddress }}' [NAME]# Performance stats (cpu, mem, network, disk, etc)$ docker container stats [NAME] ACCESSING CONTAINERS1234567891011121314# Create new nginx container and bash into$ docker container run -it --name [NAME] nginx bash# For Git Bash, use \"winpty\"$ winpty docker container run -it --name [NAME] nginx bash# Run/Create Ubuntu container (no bash because ubuntu uses bash by default)$ docker container run -it --name ubuntu ubuntu# You can also make it so when you exit the container does not stay by using the -rm flag$ docker container run --rm -it --name [NAME] ubuntu# Access an already created container, start with -ai$ docker container start -ai ubuntu# Use exec to edit config, etc$ docker container exec -it mysql bash# Alpine is a very small Linux distro good for docker (use sh because it does not include bash) (alpine uses apk for its package manager - can install bash if you want)$ docker container run -it alpine sh i = interactive Keep STDIN open if not attached t = tty - Open prompt Limiting The Memory Usage For ContainersIn order to limit the amount of memory a docker container process can use, simply set the -m [memory amount] flag with the limit. To run a container with memory limited to 256 MBs: Example: docker run -name [name] -m [Memory (int)][memory unit (b, k, m or g)] -d (to run not to attach) -p (to set access and expose ports) [image ID] docker run -m 64m -d -p 8082:80 tutum/wordpress NETWORKING“bridge” or “docker0” is the default network Get port docker container port [NAME] List networks docker network ls Inspect network docker network inspect [NETWORK_NAME] Create network (“bridge” is default) docker network create [NETWORK_NAME] or docker network create –driver bridge [NETWORK_NAME] Link to container, add to network docker run -d –net=[NETWORK_NAME] –name mongodb mongo Create container on network docker container run -d –name [NAME] –network [NETWORK_NAME] nginx Connect existing container to network docker network connect [NETWORK_NAME] [CONTAINER_NAME] Disconnect container from network docker network disconnect [NETWORK_NAME] [CONTAINER_NAME] Detach network from container docker network disconnect Delete/Remove network docker network rm [NETWORK_NAME] [NETWORK_NAME] IMAGE TAGGING &amp; PUSHING TO DOCKERHUB tags are labels that point ot an image ID docker image ls Retag existing image docker image tag nginx btraversy/nginx Upload to dockerhub docker image push bradtraversy/nginx If denied, do docker login Add tag to new image docker image tag bradtraversy/nginx bradtraversy/nginx:testing DOCKERFILE PARTS FROM The os used. Common is alpine, debian, ubuntu ENV Environment variables WORKD Sets working directory (also could use ‘RUN cd /some/path’)IR COPY Copies files from host to container RUN Run commands/shell scripts, etc EXPOS Ports to exposeE CMD Final command run when you launch a new container from image demo 123FROM nginx:latest # Extends nginx so everything included in that image is included hereWORKDIR /usr/share/nginx/htmlCOPY index.html index.html 1234567# Build image from Dockerfile$ docker image build -t nginx-website# Running it$ docker container run -p 80:80 --rm nginx-website# Tag and push to Dockerhub$ docker image tag nginx-website:latest btraversy/nginx-website:latest$ docker image push bradtraversy/nginx-website VOLUMESVolume - Makes special location outside of container UFS. Used for databasesBind Mount -Link container path to host pathCheck volumes12\\$ docker volume ls Cleanup unused volumes12\\$ docker volume prune Pull down mysql image to test12\\$ docker pull mysql Inspect and see volume12\\$ docker image inspect mysql Run container12\\$ docker container run -d --name mysql -e MYSQL_ALLOW_EMPTY_PASSWORD=True mysql Inspect and see volume in container12\\$ docker container inspect mysql TIP: Mounts You will also see the volume under mounts Container gets its own uniqe location on the host to store that data Source: xxx is where it lives on the host Check volumes12\\$ docker volume ls There is no way to tell volumes apart for instance with 2 mysql containers, so we used named volumes Named volumes (Add -v command)(the name here is mysql-db which could be anything)12\\$ docker container run -d --name mysql -e MYSQL_ALLOW_EMPTY_PASSWORD=True -v mysql-db:/var/lib/mysql mysql Inspect new named volume1docker volume inspect mysql-db BIND MOUNTS Can not use in Dockerfile, specified at run time (uses -v as well) … run -v /Users/brad/stuff:/path/container (mac/linux) … run -v //c/Users/brad/stuff:/path/container (windows) TIP: Instead of typing out local path, for working directory use $(pwd):/path/container - On windows may not work unless you are in your users folder Run and be able to edit index.html file (local dir should have the Dockerfile and the index.html)1$ docker container run -p 80:80 -v $(pwd):/usr/share/nginx/html nginx Go into the container and check123$ docker container exec -it nginx bash$ cd /usr/share/nginx/html$ ls -al You could create a file in the container and it will exiost on the host as well1$ touch test.txt Link1$ docker run -d --name my-postgres postgres now Link it with dot net 1$ docker run -d -p 5000:5000 --link my-postgres:postgres btree/dotnet DOCKER COMPOSE Configure relationships between containers Save our docker container run settings in easy to read file 2 Parts: YAML File (docker.compose.yml) + CLI tool (docker-compose) 1. docker.compose.yml - Describes solutions for containers networks volumes 2. docker-compose CLI - used for local dev/test automation with YAML filesSample compose file (From Bret Fishers course)123456789101112version: &apos;2&apos;# same as# docker run -p 80:4000 -v $(pwd):/site bretfisher/jekyll-serveservices: jekyll: image: bretfisher/jekyll-serve volumes: - .:/site ports: - &apos;80:4000&apos; Example 2123456789101112131415version: &apos;3&apos;services: app: container_name: docker-node-mongo restart: always build: . ports: - &apos;80:3000&apos; links: - mongo mongo: container_name: mongo image: mongo ports: - &apos;27017:27017&apos; To run1docker-compose up You can run in background with1docker-compose up -d To cleanup1docker-compose down this has been taken from","link":"/2020/01/05/20200105/"},{"title":"拦截器","text":"- interceptor Before sending the request to the controller Before sending the response to the client 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849package com.yoozoo.mba.interceptor;import javax.servlet.http.Cookie;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import com.yoozoo.mba.config.AppConfig;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Component;import org.springframework.web.servlet.HandlerInterceptor;import org.springframework.web.servlet.ModelAndView;@Componentpublic class YoobiCookieInterceptor implements HandlerInterceptor { @Autowired AppConfig appConfig; @Override public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception { Cookie[] cookies = request.getCookies(); String cookieValue = null; if (cookies != null) { for (Cookie cookie : cookies) { if (cookie.getName().equals(\"JSESSIONID\")) { cookieValue = cookie.getValue(); break; } } } appConfig.setJSESSIONID(cookieValue); return true; } @Override public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView) throws Exception { } @Override public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception exception) throws Exception { }} register this Interceptor12345678910111213141516171819package com.yoozoo.mba.config;import com.yoozoo.mba.interceptor.YoobiCookieInterceptor;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Component;import org.springframework.web.servlet.config.annotation.InterceptorRegistry;import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;@Componentpublic class WebMvcConfig implements WebMvcConfigurer { @Autowired YoobiCookieInterceptor yoobiCookieInterceptor; @Override public void addInterceptors(InterceptorRegistry registry) { registry.addInterceptor(yoobiCookieInterceptor); }}","link":"/2020/01/06/20200106/"},{"title":"js cheat sheet","text":"- strict 模式未使用 var 申明变量就使用的，将导致运行错误。 启用 strict 模式的方法是在 JavaScript 代码的第一行写上：&quot;use strict&quot;; 数据类型NumberJavaScript 不区分整数和浮点数，统一用 Number 表示，以下都是合法的 Number 类型： 123456123; // 整数1230.456; // 浮点数0.4561.2345e3; // 科学计数法表示1.2345x1000，等同于1234.5-99; // 负数NaN; // NaN表示Not a Number，当无法计算结果时用NaN表示Infinity; // Infinity表示无限大，当数值超过了JavaScript的Number所能表示的最大值时，就表示为Infinity 字符串12345678910111213141516171819// 定义let a = \"hello\";let b = \"hello\";let c = `helloworld`;// 模板字符串let d = `${a},${b}`;// split and joina = a.split(\"\");a = a.join(\"-\");// indexlet a = \"hello world\";let b = \"world\";console.log(a.indexOf(b)); //6console.log(a.indexOf(\"aa\")); //-1 布尔值 true false nullnull 表示一个空的值。 undefinedundefined 表示值未定义。 数组12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576// let nums = new Array(1, 2, 3, 4, 5);let nums = [1, 2, 3, 4, 5];console.log(nums);// indexlet num = nums[0];// reversenums.reverse();console.log(nums); //[ 5, 4, 3, 2, 1 ]// push// append data to the end of an arraynums.push(6);console.log(nums); //[ 5, 4, 3, 2, 1, 6 ]// popnum = nums.pop();console.log(nums); //[ 5, 4, 3, 2, 1 ]console.log(num); //6// shift// removes the first element of an arraynum = nums.shift();console.log(nums); // [ 4, 3, 2, 1 ]console.log(num); // 5// unshiftnums.unshift(num);console.log(nums); //[ 5, 4, 3, 2, 1 ]// splice// first parameter is the index, the second indicates the number of elements to delete.let nums1 = nums.splice(2, 2);console.log(nums); //[ 5, 4, 1 ]console.log(nums1); //[ 3, 2 ]// the third parameter, represents one or more elements, let us add themnums.splice(2, 0, nums1);console.log(nums); //[ 5, 4, [ 3, 2 ], 1 ]// slice// Copies a given number of elements to a new array and leaves the original array untouchednums = [1, 2, 3, 4, 5];nums1 = nums.slice(1, 3);console.log(nums); // [ 1, 2, 3, 4, 5 ]console.log(nums1); // [ 2, 3 ]// indexlet index1 = nums.indexOf(5);let index2 = nums.indexOf(0);console.log(index1);console.log(index2);// includeslet b = nums.includes(3);console.log(b);// ES6 The Spread Operatorconsole.log(nums);let max = Math.max(...nums);console.log(max);// [...new Set(arr)] = unique value arraylet arr = [1, 2, 2, 3, 3, 4, 5, 5];let uniq = [...new Set(arr)];console.log(uniq); // [1,2,3,4,5]// Destructuring Arrays to Assign Variables[a, b] = [1, 2, 3, 4, 5, 6];console.log(a, b); // 1, 2// it can access any value by using commas to reach the desired index[a, b, , , c] = [1, 2, 3, 4, 5, 6];console.log(a, b, c); // 1, 2, 5// to collect the rest of the elements into a separate array.[a, b, ...arr] = [1, 2, 3, 4, 5, 7];console.log(a, b); // 1, 2console.log(arr); // [3, 4, 5, 7] 对象对象是一组由键-值组成的无序集合。 123456789101112131415161718192021222324252627282930313233343536373839404142434445let cat = { name: \"Whiskers\", legs: 4, tails: 1, enemies: [\"Water\", \"Dogs\"]};// Object.fromEntries: Object from Map// node&gt;12let obj1 = Object.fromEntries([ [\"a\", 1], [\"b\", 2], [\"c\", 3]]);console.log(obj1);obj = Object.fromEntries(map);// Accessing Objects Properties// Accessing with dot (.) notationlet name = cat.name;console.log(name); // Whiskers// Accessing with bracket ([]) notationlet legs = cat[\"legs\"];console.log(legs);// Accessing with variableslet tails = \"tails\";console.log(cat[tails]);// Creating an array from the keys of an objectlet arr = [];for (let key in cat) { arr.push(key);}console.log(arr);// Test Object Propertieslet b1 = cat.hasOwnProperty(\"legs\");let b2 = cat.hasOwnProperty(\"legs1\");console.log(b1); //trueconsole.log(b2); //false// Destructuring Variables from Objectsvar voxel = { x: 3.6, y: 7.4, z: 6.54 };const { x, y, z } = voxel; // x = 3.6, y = 7.4, z = 6.54 Map new Map() – creates the map. map.set(key, value) – stores the value by the key. map.get(key) – returns the value by the key, undefined if key doesn’t exist in map. map.has(key) – returns true if the key exists, false otherwise. map.delete(key) – removes the value by the key. map.clear() – removes everything from the map. map.size – returns the current element count. 123456789101112131415161718192021222324252627282930313233343536let map = new Map();// setmap.set(\"a\", 1);map.set(\"b\", 2);console.log(map);// getlet a = map.get(\"a\");console.log(a);// haslet bool = map.has(\"a\");console.log(bool);// deletemap.delete(\"a\");console.log(map);// clearmap.clear();// sizelet size = map.size;console.log(size);// use objects as keys.let john = { name: \"John\" };map.set(john, 1);console.log(map);// chainingmap.set(\"1\", \"str1\") .set(1, \"num1\") .set(true, \"bool1\");console.log(map); Iteration over Map map.keys() – returns an iterable for keys, map.values() – returns an iterable for values, map.entries() – returns an iterable for entries [key, value], it’s used by default in for..of. 12345678910111213141516171819202122232425262728293031323334353637383940414243let map = new Map();map.set(\"a\", 1) .set(\"b\", 2) .set(\"c\", 3);// When a Map is created, we can pass an array (or another iterable) with key/value pairs for initialization, like this:map = new Map([ [\"a\", 1], [\"b\", 2], [\"c\", 3]]);// Object.entries: Map from Objectlet obj = { a: 1, b: 2, c: 3};map = new Map(Object.entries(obj));console.log(map);// keyfor (let key of map.keys()) { // console.log(key);}let arr = [...map.keys()];// console.log(arr);// valuefor (let value of map.values()) { // console.log(value);}// entryfor (const entry of map) { // console.log(entry);}// The iteration goes in the same order as the values were inserted. Map preserves this order, unlike a regular Object.// forEachmap.forEach((value, key) =&gt; { // console.log(value, key);}); Set new Set(iterable) – creates the set, and if an iterable object is provided (usually an array), copies values from it into the set. set.add(value) – adds a value, returns the set itself. set.delete(value) – removes the value, returns true if value existed at the moment of the call, otherwise false. set.has(value) – returns true if the value exists in the set, otherwise false. set.clear() – removes everything from the set. set.size – is the elements count. 12345678910let set = new Set([1, 2, 3, 4, 5, 3, 5]);console.log(set);for (const num of set) { console.log(num);}set.forEach(element =&gt; { console.log(element);}); 声名变量 var let const let 的用法类似于 var，但是 let 只在所在的代码块内有效，所以一般使用 let 替代 var。而 const 用来声明常量。 运算符 operator Meaning == Equality === Strict Equality != Inequality !== Strict Inequality &gt; Greater Than &gt;= Greater or Equal Than &lt; Less Than &lt;= Less or Equal Than &amp;&amp; And | Or % 取余数 NaN 这个特殊的 Number 与所有其他值都不相等，包括它自己,唯一能判断 NaN 的方法是通过 isNaN()函数。 ==比较，它会自动转换数据类型再比较，很多时候，会得到非常诡异的结果===比较，它不会自动转换数据类型，如果数据类型不一致，返回 false，如果一致，再比较。由于 JavaScript 这个设计缺陷，不要使用==比较，始终坚持使用===比较 12console.log(NaN === NaN); //falseconsole.log(isNaN(NaN)); //true 循环1234567891011121314151617181920212223242526272829// whilelet i = 0;while (i &lt; 10) { console.log(i); i += 1;}// forfor (let i = 0; i &lt; 10; ++i) { console.log(i);}// for in 遍历对象let object = { a: 1, b: 2};for (const key in object) { if (object.hasOwnProperty(key)) { const element = object[key]; console.log(element); }}// ES6 for-of 遍历数组let nums = [1, 2, 3, 4, 5];for (const num of nums) { console.log(num);} 函数123456789101112131415161718192021222324252627282930313233343536373839404142434445function plusThree(num) { return num + 3;}var answer = plusThree(5);console.log(answer); // 8// Immediately Invoked Function Expression or IIFE(function() { console.log(\"A cozy nest is ready\");})();// ES6 Arrow Functionsconst myFunc1 = () =&gt; { const myVar = \"value\"; return myVar;};// and if there is no function body, and only a return valueconst myFunc2 = () =&gt; \"value\";// ES6 Higher Order Arrow Functionslet nums = [1, 2, 3, 4, 5, 6, 7];nums = nums.filter(num =&gt; num % 2 === 0);console.log(nums);// ES6 Declarative Functions within Objects// When defining functions within objects in ES5, we have to use the keyword functionconst person = { name: \"Taylor\", sayHello: function() { return `Hello! My name is ${this.name}.`; }};// With ES6, You can remove the function keyword and colonconst person = { name: \"Taylor\", sayHello() { return `Hello! My name is ${this.name}.`; }};function howMany(...args) { return \"You have passed \" + args.length + \" arguments.\";}console.log(howMany(0, 1, 2)); // You have passed 3 argumentsconsole.log(howMany(\"string\", null, [1, 2, 3], {})); // You have passed 4 arguments. 正则表达式 Character Description \\ Escapes a special character. | Search for multiple patterns. To match “yes” or “no”, the regex is /yes i This flag is used to ignore upper and lowercase. /ignorecase/i. g Search or extract a pattern more than once. . The wildcard character . will match any character except new lines. [] Allow you to define the characters to match. /b[au]g/ will match “bag”, “bug” but not “bog”. [a-z] Match all the characters between a and z. [1-9] Match all the numbers between 1 and 9. [a-z1-9] Match all the character between a and z, and the numbers between 1 and 9. [^] Match the characters not in the set. [^a-e] match all other characters except A, B, C, D, and E. + Match 1 or more occurrences of the previous character in a row. * Match 0 or more occurrences of the previous character. ? Match 0 or 1 occurrence of the previous character. Useful for Lazy matching. ^ Search for patterns at the beginning of strings. $ Search for patterns at the end of a string. \\w Equal to [A-Za-z0-9_]. Matches upper, lowercase, numbers the and underscore character (-). \\W Matches any nonword character. Equivalent to [^a-za-z0-9_]. \\d Equal to [0-9]. Match one digit. \\D Equal to [^0-9]. Match one non digit. \\s Match a whitespace. \\S Match everything except whitespace. a{2,5} Match the letter a between 3 and 5 times. a{2,} Specify only the lower number of matches. a{5} Specify the exact number of matches. (…) Specify a group that can be acceded with number (from 1) Regex Methods Method Description test() Returns true or false if the pattern match a string or not. match() Extract the actual matches found. replace() Search and replace text in a string . 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117// test method returns true or false if the pattern match a string or notlet myString = \"hello world\";let myRegex = /hello/;let result = myRegex.test(myString);// console.log(result);// extract the matches of a regex with the match methodlet extractStr = \"Extract the world 'coding' from this string\";let codingRegex = /coding/;result = extractStr.match(codingRegex);// console.log(result);// Search and replacelet wrongText = \"The sky is silver.\";let silverRegex = /silver/;wrongText = wrongText.replace(silverRegex, \"blue\"); // Returns \"The sky is blue.\"// console.log(wrongText);// search for multiple patterns using the alternation or OR operator: |let petString = \"James has a pet cat.\";let petRegex = /dog|cat|bird|fish/;result = petRegex.test(petString);// console.log(result);// ignore upper or lowercaselet myString1 = \"freeCodeCamp\";let fccRegex = /freeCodecamp/i; // flag iresult = fccRegex.test(myString1);// console.log(result);// Search or extract a pattern more than oncelet twinkleStar = \"Twinkle, twinkle, little star\";let starRegex = /Twinkle/gi; // a regex can have multiple flagsresult = twinkleStar.match(starRegex);// console.log(result);// The wildcard character . will match any character except new lines.let exampleStr = \"Let's have fun with regular expressions!\";let unRegex = /.un/;result = unRegex.test(exampleStr);result = unRegex.exec(exampleStr);result = exampleStr.match(unRegex);// console.log(result);// define the characters to match, in this example all the vowels in quoteSamplelet quoteSample = \"Beware of bugs in the above code; I have only proved it correct, not tried it.\";let vowelRegex = /[aeiou]/gi;result = quoteSample.match(vowelRegex);// console.log(result);// Match all the characters in quoteSample (between a and z)let quoteSample1 = \"The quick brown fox jumps over the lazy dog.\";let alphabetRegex = /[a-z]/gi;result = quoteSample1.match(alphabetRegex);console.log(result);// Match all the character between two characters and numberslet quoteSample2 = \"Blueberry 3.141592653s are delicious.\";let myRegex2 = /[h-s2-6]/gi;result = quoteSample2.match(myRegex2);console.log(result);// Match all that is not a number or a vowellet quoteSample3 = \"3 blind mice.\";let myRegex3 = /[^aeiou0-9]/gi;result = quoteSample3.match(myRegex3);console.log(result);// Match 1 or more occurrences of the previous character (* for 0 or more)let difficultSpelling = \"Mississippi\";let myRegex4 = /s+/g;result = difficultSpelling.match(myRegex4);console.log(result);// ? Match 0 or 1 occurrence of the previous character. Useful for Lazy matchinglet text = \"titanic\";// let myRegex5 = /t[a-z]*?i/;let myRegex5 = /t[a-z]*?i/g;result = text.match(myRegex5);console.log(result);// Search for patterns at the beginning of stringslet rickyAndCal = \"Cal and Ricky both like racing.\";let calRegex = /^Cal/;result = calRegex.test(rickyAndCal);console.log(result);// Search for patterns at the end of a stringlet caboose = \"The last car on a train is the caboose\";let lastRegex = /caboose$/;result = lastRegex.test(caboose);console.log(result);// \\w is equal to [A-Za-z0-9_]let quoteSample = \"The five boxing wizards jump quickly.\";let alphabetRegexV2 = /\\w/g;let result = quoteSample.match(alphabetRegexV2).length;// Match only 3 to 6 letter h's in the word \"Oh no\"let ohStr = \"Ohhh no\";let ohRegex = /Oh{3,6} no/;let result = ohRegex.test(ohStr);// Match both the American English (favorite) and the British English (favourite) version of the wordlet favWord = \"favorite\";let favRegex = /favou?rite/;let result = favRegex.test(favWord);// Groups () let you reuse patternslet repeatNum = \"42 42 42\";let reRegex = /^(\\d+)\\s\\1\\s\\1$/; // every 1 represent the group (\\d+)let result = reRegex.test(repeatNum);// Remove all the spaces at the beginning an end of a stringlet hello = \" Hello, World! \";let wsRegex = /^\\s+(.*\\S)\\s+$/;let result = hello.replace(wsRegex, \"$1\"); // returns 'Hello, World!' 面向对象1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465let duck = { name: \"aflac\", numLegs: 2, sayName() { console.log(this.name); }};duck.sayName();// constructorfunction Bird(name, color) { this.name = name; this.color = color; this.sayName = function() { return this.name; };}// create a new instance of Birdlet cardinal = new Bird(\"Bruce\", \"red\");let duck = new Bird(\"Donald\", \"blue\");// access and modify blueBird objectcardinal.name; // Brucecardinal.color; // redcardinal.color = green;cardinal.color; // green// check if an object is an instance of a constructorcardinal instanceof Bird; // truecrow instanceof Bird; // false// check an objects own (name, color, numLegs) propertiescardinal.hasOwnProperty(\"color\"); // truecardinal.hasOwnProperty(\"age\"); // false//check an objects properties with the constructor propertycardinal.constructor === Bird; // true// use constructor.prototype to add new properties to object constructorsBird.prototype.cute = true;cardinal.cute; // truecrow.cute; // true// add more than one property and method to a constructorBird.prototype = { constructor: Bird, // specify the constructor numLegs: 2, // new property eat: function() { // new method console.log(\"nom nom nom\"); }, describe: function() { // new method console.log(\"My name is \" + this.name); }};let chicken = new Bird(\"Dinner\", \"brown\");chicken.numLegs; // 2chicken.eat(); // nom nom nomchicken.describe(); // My name is Dinner 继承 12345678910111213141516171819202122232425262728function Animal() {}Animal.prototype.eat = function() { console.log(\"nom nom nom\");};// Dog constructorfunction Dog() {}// make the Gog constructor inherit the eat function from AnimalDog.prototype = Object.create(Animal.prototype);Dog.prototype.constructor = Dog;Dog.prototype.bark = function() { console.log(\"wof wof!\");};// the new object will have both, the inherited eat() and its own bark() methodlet beagle = new Dog();beagle.eat(); // \"nom nom nom\"beagle.bark(); // \"Woof!\"// override an inherited methodDog.prototype.eat = function() { return \"nice meeeeat!\";};let doberman = new Dog();doberman.eat(); // nice meeeeat! Mixins 1234567891011121314151617181920212223let bird = { name: \"Donald\", numLegs: 2};let boat = { name: \"Warrior\", type: \"race-boat\"};// this mixin contain the glide methodconst glideMixin = function(obj) { obj.glide = function() { console.log(\"gliding...\"); };};// the object is passed to the mixin and the glide method is assignedglideMixin(bird);glideMixin(boat);bird.glide(); // \"gliding...\"boat.glide(); // \"gliding...\" Closures to Protect Properties 12345678910111213function Bird() { // instead of this.hatchedEgg... let hatchedEgg = 10; // private property this.getHatchedEggCount = function() { // publicly available method that a bird object can use return hatchedEgg; };}let ducky = new Bird();ducky.hatchedEgg = 2; // nothing happensducky.getHatchedEggCount; // 10 Modules 12345678910111213141516171819202122let funModule = (function() { return { isCuteMixin: function(obj) { obj.isCute = function() { return true; }; }, singMixin: function(obj) { obj.sing = function() { console.log(\"Singing to an awesome tune\"); }; } };})();function Dog() {}let goodBoy = new Dog();// assign the singMixin method to the goodBoy objectfunModule.singMixin(goodBoy);goodBoy.sing(); // Singing to an awesome tune ES6 面向对象1234567891011121314151617181920class Book { constructor(title, author, year) { this.title = title; this.author = author; this.year = year; } getSummary() { return `${this.title} was written by ${this.author} in ${this.year}`; } getAge() { const years = new Date().getFullYear() - this.year; return `${this.title} is ${years} years old`; }}book = new Book(\"Book One\", \"John Doe\", 2016);book.getSummary(); // Book One was written by John Doe in 2016book.getAge(); // Book One is 3 years old getters and setters 1234567891011121314151617class Book { constructor(author) { this._author = author; } // getter get writer() { return this._author; } // setter set writer(updatedAuthor) { this._author = updatedAuthor; }}const lol = new Book(\"anonymous\");console.log(lol.writer); // anonymouslol.writer = \"wut\";console.log(lol.writer); // wut Statics Methods 12345678910111213class Book { constructor(title, author, year) { this.title = title; this.author = author; this.year = year; } static sayHi() { return \"Hi!\"; }}Book.sayHi(); // Hi! Inheritance 1234567891011121314151617181920212223242526class Book { constructor(title, author, year) { this.title = title; this.author = author; this.year = year; } getSummary() { return `${this.title} was written by ${this.author} in ${this.year}`; }}class Magazine extends Book { constructor(title, author, year, month) { super(title, author, year); this.month = month; } sayHi() { return \"Hi!\"; }}mag = new Magazine(\"Mag\", \"People\", 2019, \"jan\");mag.getSummary(); // Mag was written by People in 2019mag.sayHi(); // Hi! 函数式编程 map filter reduce 1234567891011121314let nums = [1, 2, 3, 4, 5, 6, 7, 8];console.log(nums);// mapnums = nums.map(num =&gt; num + 1);console.log(nums);// filternums = nums.filter(num =&gt; num % 2 == 0);console.log(nums);// reducelet sum = nums.reduce((a, b) =&gt; a + b);console.log(sum); ES6 import and export import 123456// we can choose which parts of a module or file to load into a given file.import { function } from \"file_path\";// We can also import variables the same way!// Import Everything from a Fileimport * as name_of_your_choice from \"file_path\"; export 123456789101112131415161718192021const capitalizeString = string =&gt; { return string.charAt(0).toUpperCase() + string.slice(1);};export { capitalizeString }; //How to export functions.export const foo = \"bar\"; //How to export variables.// Alternatively, if you would like to compact all your export statements into one line, you can take this approachconst capitalizeString = string =&gt; { return string.charAt(0).toUpperCase() + string.slice(1);};const foo = \"bar\";export { capitalizeString, foo };// use export default if only one value is being exported from a file.// It is also used to create a fallback value for a file or moduleexport default function add(x, y) { return x + y;}// and to importimport add from \"math_functions\";add(5, 4); //Will return 9 查看类型 type 客户端存储 cookie Local Storage 1234567891011121314151617let map = new Map();map.set(360, [{ a: 1 }, { b: 2 }]);map.set(94, [{ c: 1 }, { d: 2 }]);let mapString = JSON.stringify(Array.from(map));localStorage.setItem(\"map\", mapString);map = new Map(JSON.parse(localStorage.getItem(\"map\")));for (const key of map.keys()) { console.log(key); console.log(typeof key); console.log(map.get(key));}map.get(360).push({ e: 5 });console.log(map);mapString = JSON.stringify(Array.from(map));","link":"/2020/01/10/20200113/"},{"title":"css cheat sheet","text":"- demodemo Selectors Universal Selector * {} Type Selector h1, h2 ,h3 {} Child Selector ul &gt; li {} Descendant Selector p a {} Class Selector .class {} ID Selector #id {} Adjacent Sibling Selector h1 + p {} General Sibling Selector h1 ~ p {} Attribute Selector [attribute=&quot;SomeValue&quot;] {} Pseudo Selectors &amp; Elements Mouse Over Selector a:hover {} Active Link Selector a:active {} Focus Selector input:focus {} Visited Links Selector a:visited {} Link Selector .class:link {} First Line Selector p::first-line {} First Letter Selector p::first-letter {} First Child Selector p:first-child {} Last Child Selector p:last-child {} Only Child Selector p:only-child {} :nth-child Selector p:nth-child() {} First Element of its Parent Selector p:first-of-type {} Checked elements selector input:checked {} Disabled elements selector input:disabled {} Enabled elements selector input:enabled {} Elements that have no Children Selector (including text nodes) p:empty {} Not a Specified Element Selector :not(p) {} Before Element .class::before {} After Element .class::after {} Text Styling Font Family font-family: 'Open Sans', sans-serif Font Size font-size: 12px | 0.8em | 80% Font Weight font-weight: normal | bold | bolder | lighter | 100 - 900 text color color: #333333 Line Height line-height: normal | 3em | 34% Font style font-style: normal | italic | oblique Text Decoration text-decoration: none | underline | overline | line-through Font Variant font-variant: normal | small-caps Vertical Alignment vertical-align: baseline | 10px | sub | super | top | text-top | middle | bottom | text-bottom | initial Text Transform text-transform: capitalise | lowercase | uppercase Space Between Characters letter-spacing: normal | 4px Horizontal Alignment text-align: left | right | center | justify Text Align Last text-align-last: auto | left | right | center | justify | start | end | initial | inherit Indent First Line text-indent: 25px Text Justify text-justify: auto | inter-word | inter-character | none | initial | inherit Text Overflow text-overflow: clip | ellipsis | string | initial | inherit Text Shadow text-shadow: h-shadow v-shadow blur-radius color | none | initial | inherit Position Position position: static | relative | absolute | fixed | sticky Position Properties top | right | bottom | left Float Element float: left | right | none Clear Floating Elements clear: none | left | right | both Z Index z-index: 3 | auto | inherit Background Background Color background-color: #2AA9E0 Background Image background-image: url() Background Repeat background-repeat: repeat-x | repeat-y | repeat | space | round | no-repeat Background Position background-position: top | right | bottom | left | center Background Attachment background-attachment: scroll | fixed | local | initial | inherit Box properties Width width: 80% Height height: 80% Margin margin: 2px 4px 6px 8px | 0 auto Padding padding: 2px 4px 6px 8px Box Sizing box-sizing: border-box | content-box Border Color border-color: #2AA9E0 Border Style border-style: none | hidden | dotted | dashed | solid | double | groove | ridge | inset | outset Border Width border-width: 10px List Styling List Type list-style-type: disc | circle | square | none List Position list-style-position: inside | outside List Image list-style-image: url() Flexbox Flex Direction flex-direction: row | row-reverse | column | column-reverse Flex Wrap flex-wrap: nowrap | wrap | wrap-reverse Justify Content justify-content: flex-start | flex-end | center | space-between | space-around | space-evenly Align Items align-items: flex-start | flex-end | center | baseline | stretch Align Content align-content: flex-start | flex-end | center | space-between | space-around | stretch Order order: 0 Flex Grow flex-grow: 0 Flex Shrink flex-shrink: 1 Flex Basis flex-basis: 3px | auto Align Self align-self: auto | flex-start | flex-end | center | baseline | stretch CSS Grid Grid Template Columns grid-template-columns: 40px 50px auto 50px 40px Grid Template Rows grid-template-rows: 25% 100px auto Grid Template Areas grid-template-areas: &quot;a b c&quot; | none Grid Template grid-template: &quot;a a a&quot; 20% &quot;b b b&quot; auto | 100px 1fr / 50px 1fr Grid Column Gap grid-column-gap: 10px Grid Row Gap grid-row-gap: 10px Justify Items justify-items: start | end | center | stretch Align Items align-items: start | end | center | stretch Justify Content justify-content: flex-start | flex-end | center | space-between | space-around | space-evenly Align Content align-content: flex-start | flex-end | center | space-between | space-around | stretch Grid Auto Columns grid-auto-columns: 100px | max-content | min-content Grid Auto Rows grid-auto-rows: 100px | max-content | min-content Grid Auto Flow grid-auto-flow: row | column | row dense | column dense Grid Column Start grid-column-start: 2 | areaname | span 2 | span areaname | auto Grid Column End grid-column-end: 2 | areaname | span 2 | span areaname | auto Grid Row Start grid-row-start: 2 | areaname | span 2 | span areaname | auto Grid Row End grid-row-end: 2 | areaname | span 2 | span areaname | auto Grid Column grid-column: 3 / span 2 Grid Row grid-row: 3 / span 2 Justify Self justify-self: start | end | center | stretch Align Self align-self: start | end | center | stretch Dynamic Content CSS Variable --variable-name: value Variable Usage var(--variable-name) Counter Reset counter-reset: name-of-counter Counter Increment counter-increment: name-of-counter Counter Dynamic Value content: counter(name-of-counter) Attribute Dynamic Value content: attr(name-of-attribute)","link":"/2020/01/14/20200114/"},{"title":"html cheat sheet","text":"- Document Summary &lt;!DOCTYPE html&gt; - Tells the browser that HTML5 version of HTML to be recognized by the browser &lt;html lang=&quot;en&quot;&gt;&lt;/html&gt; - The HTML lang attribute is used to identify the language of text content on the web. This information helps search engines return language specific results &lt;head&gt;&lt;/head&gt; - Contains Information specific to the page like title, styles and scripts &lt;title&gt;&lt;/title&gt; - Title for the page that shows up in the browser title bar &lt;body&gt;&lt;/body&gt;- Content that the user will see Document Information &lt;base /&gt;- Usefull for specifying relative links in a document &lt;style&gt;&lt;/style&gt; - Contains styles for the html document &lt;meta /&gt; - Contains additional information about the page, author, page description and other hidden page info &lt;script&gt;&lt;/script&gt; - Contains all scripts internal or external &lt;link /&gt; - Used to create relationships with external pages and stylesheets Document Structure &lt;h1&gt;&lt;/h1&gt; &lt;h6&gt;&lt;/h6&gt; - All six levels of heading with 1 being the most promiment and 6 being the least prominent &lt;p&gt;&lt;/p&gt; - Used to organize paragraph text &lt;div&gt;&lt;/div&gt; - A generic container used to denote a page section &lt;span&gt;&lt;/span&gt; - Inline section or block container used for creating inline style elements &lt;br /&gt; - Creates a line-break &lt;hr /&gt; - Creates a sectional break into HTML Text Formatting &lt;strong&gt;&lt;/strong&gt; and &lt;b&gt;&lt;/b&gt; - Makes text contained in the tag as bold &lt;em&gt;&lt;/em&gt; and &lt;i&gt;&lt;/i&gt; - Alternative way to make the text contained in the tag as italic &lt;strike&gt;&lt;/strike&gt; - Creates a strike through the text element &lt;pre&gt;&lt;/pre&gt; - Preformatted monospace text block with some spacing intact &lt;blockquote&gt;&lt;/blockquote&gt; - Contains long paragraphs of quotations often cited &lt;abbr&gt;&lt;/abbr&gt; - Contains abbreviations while also making the full form avaialable &lt;address&gt;&lt;/address&gt; - Used to display contact information &lt;code&gt;&lt;/code&gt; - Used to display inline code snippets Links Formatting &lt;a href=&quot;url&quot;&gt;&lt;/a&gt;- Used to link to external or internal pages of a wbesite &lt;a href=&quot;mailto:email@example.com&quot;&gt;&lt;/a&gt;- Used to link to an email address &lt;a href=&quot;name&quot;&gt;&lt;/a&gt;- Used to link to a document element &lt;a href=&quot;#name&quot;&gt;&lt;/a&gt;- Used to link to specific div element &lt;a href=&quot;tel://####-####-##&quot;&gt;&lt;/a&gt;- Used to display phone numbers and make them clickable &lt;a href=&quot;url&quot; target=&quot;_blank&quot;&gt;&lt;/a&gt;- Open Link in New Tab Image Formatting &lt;img src=&quot;url&quot; alt=&quot;text&quot; /&gt;- Used to display images in a webpage where src=”url” contains the link to the image source and alt=”” contains an alternative text to display when the image is not displayed List Formatting &lt;ol&gt;&lt;/ol&gt;- Used to create ordered lists with numbers in the items &lt;ul&gt;&lt;/ul&gt;- Used to display unordered lists with numbers in the items &lt;li&gt;&lt;/li&gt;- Contains list items inside ordered and unordered lists &lt;dl&gt;&lt;/dl&gt;- Contains list item definitions &lt;dt&gt;&lt;/dt&gt;- Definition of single term inline with body content &lt;dd&gt;&lt;/dd&gt;- The descrpition of the defined term Forms Formatting and Attributes &lt;form action=&quot;url&quot;&gt;&lt;/form&gt; - Form element creates a form and action=”” specifies where the data is to be sent to when the - visitor submits the form method=”somefunction()” - Contains the type of request (GET, POST… etc) which dictates how to send the data of the form enctype=”” - Dictates how the data is to be encoded when the data is sent to the web server. autocomplete=”” - Specifies if the autocomplete functionality is enabled or not novalidate Dictates if the form will be validated or not accept-charset=”” - Identifies the character encoding upon form submission target=”” - Tell where to display the information upon form submission. Possible values: ‘_blank’, ‘_self’, ‘_parent’, ‘_top’ &lt;fieldset disabled=&quot;disabled&quot;&gt;&lt;/fieldset&gt; - Identifies the group of all fields in the form &lt;label for=&quot;&quot;&gt;&lt;/label&gt; - A simple field label telling the user what to type in the field &lt;legend&gt;&lt;/legend&gt; - The form legend acts as a caption for the fieldset element &lt;input type=&quot;text/email/number/color/date&quot; /&gt; - Input is the input field where the user can input various types of data name=”” - Describes the name of the form width=”” - Specifies the width of an input field value=”” - Describes the value of the input information field size=”” - Specifies the input element width in characters maxlength=”” - Specifies the maximum input character numbers required=”” - Specifies if the input field is required to fill in before submitting the form step=”” - Identifies the legal number intervals of the input field &lt;textarea name=&quot;&quot; id=&quot;&quot; cols=&quot;30&quot; rows=&quot;10&quot;&gt;&lt;/textarea&gt; - Specifies a large input text field for longer messages &lt;select name=&quot;&quot;&gt;&lt;/select&gt; - Describes a dropdown box for users to select from variety of choices name=”” - The name for a dropdown combination box size=”” - Specifies the number of available options multiple - Allows for multiple option selections required - Requires that a value is selected before submitting the form autofocus - Specifies that the dropdown automatically comes to focus once the page loads &lt;optgroup&gt;&lt;/optgroup&gt; - Specifies the entire grouping of available options &lt;option value=&quot;&quot;&gt;&lt;/option&gt; - Defines one of the avaialble option from the dropdown list &lt;button&gt;&lt;/button&gt; - A clickable button to submit the form Tables Formatting &lt;table&gt;&lt;/table&gt; - Defines and contains all table related content &lt;caption&gt;&lt;/caption&gt; - A description of what table is and what it contains - The table headers contain the type of information defined in each column underneath &lt;tbody&gt;&lt;/tbody&gt; - Contains the tables data or information &lt;tfoot&gt;&lt;/tfoot&gt; - Defines table footer &lt;tr&gt;&lt;/tr&gt; - Contains the information to be included in a table row &lt;th&gt;&lt;/th&gt; - Contains the information to be included in a single table header &lt;td&gt;&lt;/td&gt; - Contains actual information in a table cell &lt;colgroup&gt;&lt;/colgroup&gt; - Groups a single or multiple columns for formatting purposes &lt;col /&gt; - Defines a single column of information inside a table Objects and iFrames &lt;object data=&quot;&quot;&gt;&lt;/object&gt; - Describes and embed file type including audio, video, PDF’s, images type=”” - Describes the type of media embedded height=”” - Describes the height of the object in pixels width=”” - Describes the width of the object in pixels usemap=”” - This is the name of the client-side image map in the object &lt;iframe src=&quot;&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt; - Contains an inline frame that allows to embed external information &lt;embed src=&quot;&quot; type=&quot;&quot; /&gt; - Acts as a container for external application or plug-in src=”” - The source of the external file you’re embedding width=”” - Describes the width of the iframe in pixels HTML5 New Tags &lt;header&gt;&lt;/header&gt; - Defines the header block for a document or a section &lt;footer&gt;&lt;/footer&gt; - Defines the footer block for a document or a section &lt;main&gt;&lt;/main&gt; - Describes the main content of a document &lt;article&gt;&lt;/article&gt; - Identifies an article inside a document &lt;aside&gt;&lt;/aside&gt; - Specifies content contained in a document sidebar &lt;section&gt;&lt;/section&gt; - Defines a section of a document &lt;details&gt;&lt;/details&gt; - Describes additonal information that user can view or hide &lt;dialog&gt;&lt;/dialog&gt; - A dialog box or a window &lt;figure&gt;&lt;/figure&gt; - An independent content block featuring images, diagrams or illustrations &lt;figcaption&gt;&lt;/figcaption&gt; - Caption that describe a figure &lt;mark&gt;&lt;/mark&gt; - Displays a portion of highlighted text with in a page content &lt;nav&gt;&lt;/nav&gt; - Navigation links for the user in a document &lt;menuitem&gt;&lt;/menuitem&gt; - The specific menu item that a usrr can raise from a pop up menu &lt;meter&gt;&lt;/meter&gt; - Describes the scalar measurement with in a known array &lt;progress&gt;&lt;/progress&gt; - Displays the progress of a task usually a progress bar &lt;rp&gt;&lt;/rp&gt; - Describes text within the browsers that do not support ruby notations &lt;rt&gt;&lt;/rt&gt; - Displays east asian typography character details &lt;ruby&gt;&lt;/ruby&gt; - Describes annotations for east asian typography &lt;summary&gt;&lt;/summary&gt; - Contains a visible heading for details element &lt;bdi&gt;&lt;/bdi&gt; - Helps you format parts of text in a different direction than other text &lt;time&gt;&lt;/time&gt; - Identifies the time and date &lt;wbr /&gt; - A line break within the content Collective Character Obejcts &amp;#34; &amp;quot; Quotation Marks - “ &amp;#38; &amp;amp; Ampersand - &amp; &amp;#60; &amp;lt; Less than sign - &lt; &amp;#62; &amp;gt; Greater than sign - &gt; &amp;#160; &amp;nbsp; Non-breaking space &amp;#169; &amp;copy; Copyright Symbol - © &amp;#64; &amp;Uuml; @ symbol - @ &amp;#149; &amp;ouml; Small bullet - . &amp;#153; &amp;ucirc; Trademark Symbol - ™ referencehtml","link":"/2020/01/20/20200120/"},{"title":"html & css demo","text":"- demo1 css code cheat sheet demo2 css code navbar demo3 css code nav flexbox","link":"/2020/01/23/20200123-2/"},{"title":"mac 常用快捷键、命令","text":"- 终端查看端口占用 lsof -i:3000 kill 进程 kill -9 PID 通用打开 dock 应用 Snap 打开软件设置 cmd + , 显示启动台 ctrl + space show desktop f11 重命名 enter 应用开机自启动 用户与群组 &gt; 登陆项 更改某一个文件的默认打开方式 右键单击该文件。 按下 Option 键，你会看到「打开方式」选项变成了「始终以此方式打开」。 选择「始终以此方式打开」列表内的某一个应用程序。 finder进入文件夹 cmd + down-arrow 返回文件夹上一层 cmd + up-arrow 剪切 cmd + c cmd + shift + v 新建窗口 cmd + n 全局新建窗口 cmd + alt + space : 曲线相当于 Windows 中win + d 新建文件夹 cmd + shift + n 当前路径下打开 finder open . The Quickest Way to Show/Hide Hidden Files cmd + shift + . 截图自选区域保存到桌面 cmd + shift + 4 保存到剪切板 cmd + shift + ctrl + 4 选择窗口 cmd + shift + ctrl + 4 + 空格 chrome刷新 cmd + r 新建标签页 cmd + t 历史访问记录 cmd + y focus on the Address Bar cmd + l iterm2全局唤醒 alt + space 在 finder 当前路径下打开 iterm2 ctrl + i","link":"/2020/01/23/20200123-3/"},{"title":"vscode 常用插件","text":"- common Blueprint Path Intellisense Code Spell Checker Code Runner Project Manager Gremlins tracker Bracket Pair Colorizer Settings Sync Todo Tree Better Comments Prettier Polacode Remote development Docker theme Ayu Material Theme Icons formatter ESLint front end Live Server cdnjs Live Sass Compiler CodeMetrics Node Exec back end snippet user snippet vetur git GitLens","link":"/2020/01/23/20200123/"},{"title":"vscode remote development","text":"- container install docker vscode install Remote Development open a project &gt; Remote-containers: Add Access host database from a docker container mysql://host.docker.internal:3306/my_awesome_database errorcommand ‘java.execute.workspaceCommand’ not found Please install plugin {Lombok Annotations Support for VS Code}https://github.com/Microsoft/vscode-java-pack/issues/42","link":"/2020/01/27/20200127/"},{"title":"mac top apps","text":"- Itsycal for MacItsycal is a tiny menu bar calendar. https://www.mowglii.com/itsycal/ IINAThe modern media player for mac https://iina.io/ EncryptoProtect files with AES-256 encryption https://macpaw.com/encrypto Hocus FocusKeep your desktop clutter free with Hocus Focus, a Mac menu bar utility that hides your inactive windows. http://hocusfoc.us/ FolxFolx is a free download manager for macOS with a true Mac-style interface. It offers convenient downloads managing, flexible settings, etc. Folx has a unique system of sorting and keeping the downloaded content. https://mac.eltima.com/download-manager.html MagnetMagnet keeps your workspace organized. https://magnet.crowdcafe.com/ Amphetaminethe most awesome keep-awake utility ever created for macOS https://apps.apple.com/cn/app/amphetamine/id937984704?mt=12&amp;ign-mpt=uo%3D4 AnotherRedisDesktopManagerFaster, better and more stable redis desktop manager, compatible with Linux, windows, mac. https://www.electronjs.org/apps/anotherredisdesktopmanager snapLaunch an app in a snap. Ridiculously easy shortcut management for the Mac. https://www.electronjs.org/apps/anotherredisdesktopmanager","link":"/2020/02/03/2020020301/"},{"title":"Add a Directory to PATH in Linux","text":"- What is $PATH in LinuxThe $PATH environmental variable is a colon-delimited list of directories that tells the shell which directories to search for executable files. 12 ✘ gecheng@A ~ echo $PATH/Users/gecheng/.jenv/shims:/Users/gecheng/.jenv/bin:/Users/gecheng/.jenv/shims:/Users/gecheng/.jenv/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin Adding a Directory to your $PATHTo make the change permanent, you need to define the $PATH variable in the shell configuration files. In most Linux distributions when you start a new session, environment variables are read from the following files: Global shell specific configuration files such as /etc/environment and /etc/profile. Use this file if you want the new directory to be added to all system users $PATH. Per-user shell specific configuration files. For example, if you are using Bash, you can set the $PATH variable in the ~/.bashrc file and if you are using Zsh the file name is ~/.zshrc. 1export PATH=\"$HOME/.local/bin:$PATH\" Save the file and load the new $PATH into the current shell session using the source command: 1source ~/.bashrc","link":"/2020/02/08/2020020801/"},{"title":"ThreadLocal","text":"- What is Thread Local?Thread Local can be considered as a scope of access, like a request scope or session scope. It’s a thread scope. You can set any object in Thread Local and this object will be global and local to the specific thread which is accessing this object. Global and local!!? Let me explain: Values stored in Thread Local are global to the thread, meaning that they can be accessed from anywhere inside that thread. If a thread calls methods from several classes, then all the methods can see the Thread Local variable set by other methods (because they are executing in same thread). The value need not be passed explicitly. It’s like how you use global variables.Values stored in Thread Local are local to the thread, meaning that each thread will have it’s own Thread Local variable. One thread can not access/modify other thread’s Thread Local variables. When to use ThreadLocalThreadLocal is a simple way to have per-thread data that cannot be accessed concurrently by other threads, without requiring great effort or design compromises. One possible (and common) use is when you have some object that is not thread-safe, but you want to avoid synchronizing access to that object . Instead, give each thread its own instance of the object. Since a ThreadLocal is a reference to data within a given Thread, you can end up with classloading leaks when using ThreadLocals in application servers using thread pools. You need to be very careful about cleaning up any ThreadLocals you get() or set() by using the ThreadLocal’s remove() method. ThreadLocal Class get() : Returns the value in the current thread’s copy of this thread-local variable. initialValue() : Returns the current thread’s “initial value” for this thread-local variable. remove() : Removes the current thread’s value for this thread-local variable. set(T value) : Sets the current thread’s copy of this thread-local variable to the specified value. demoContext1234public class Context { private String transactionId = null; /* getters and setters here */} MyThreadLocal12345678910111213141516public class MyThreadLocal { public static final ThreadLocal userThreadLocal = new ThreadLocal(); public static void set(Context user) { userThreadLocal.set(user); } public static void unset() { userThreadLocal.remove(); } public static Context get() { return userThreadLocal.get(); }} ThreadLocalDemo1234567891011121314151617181920212223242526public class ThreadLocalDemo extends Thread { public static void main(String args[]) { Thread threadOne = new ThreadLocalDemo(); threadOne.start(); Thread threadTwo = new ThreadLocalDemo(); threadTwo.start(); } @Override public void run() { // sample code to simulate transaction id Context context = new Context(); context.setTransactionId(getName()); // set the context object in thread local to access it somewhere else MyThreadLocal.set(context); /* note that we are not explicitly passing the transaction id */ new BusinessService().businessMethod(); MyThreadLocal.unset(); }} BusinessService1234567public class BusinessService { public void businessMethod() { // get the context from thread local Context context = MyThreadLocal.get(); System.out.println(context.getTransactionId()); }}","link":"/2020/02/11/2020021101/"},{"title":"filter","text":"add a filter in Spring Boot IntroductionFilters as the name suggest used to perform filtering on either the request to a resource or on the response from a resource, or both. Spring Boot provides few options to register custom filters in the Spring Boot application. Define Spring Boot Filter1234567891011121314151617181920212223242526272829303132public class CustomURLFilter implements Filter { private static final Logger LOGGER = LoggerFactory.getLogger(CustomURLFilter.class); @Override public void init(FilterConfig filterConfig) throws ServletException { LOGGER.info(\"########## Initiating Custom filter ##########\"); } @Override public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain) throws IOException, ServletException { HttpServletRequest request = (HttpServletRequest) servletRequest; HttpServletResponse response = (HttpServletResponse) servletResponse; LOGGER.info(\"Logging Request {} : {}\", request.getMethod(), request.getRequestURI()); // call next filter in the filter chain filterChain.doFilter(request, response); System.out.println(response.getOutputStream()); LOGGER.info(\"Logging Response :{}\", response.getContentType()); } @Override public void destroy() { LOGGER.info(\"destroy\"); }} Register the custom Filter using FilterRegistrationBean.1234567891011121314@Configurationpublic class AppConfig { @Bean public FilterRegistrationBean&lt;CustomURLFilter&gt; filterRegistrationBean() { FilterRegistrationBean&lt;CustomURLFilter&gt; registrationBean = new FilterRegistrationBean(); CustomURLFilter customURLFilter = new CustomURLFilter(); registrationBean.setFilter(customURLFilter); registrationBean.addUrlPatterns(\"/test/*\"); registrationBean.setOrder(2); // set precedence return registrationBean; }}","link":"/2020/02/14/2020021401/"},{"title":"Class PathPattern","text":"org.springframework.web.util.pattern PathPattern matches URL paths rules ? — matches one character - — matches zero or more characters within a path segment ** — matches zero or more path segments until the end of the path {spring} — matches a path segment and captures it as a variable named “spring” {spring:[a-z]+} — matches the regexp [a-z]+ as a path variable named “spring” {_spring} — matches zero or more path segments until the end of the path and captures it as a variable named “spring” Examples /pages/t?st.html — matches /pages/test.html but also /pages/tast.html but not /pages/toast.html /resources/_.png — matches all .png files in the resources directory /resources/** — matches all files underneath the /resources/ path, including /resources/image.png and /resources/css/spring.css /resources/{*path} — matches all files underneath the /resources/ path and captures their relative path in a variable named “path”; /resources/image.png will match with “spring” -&gt; “/image.png”, and /resources/css/spring.css will match with “spring” -&gt; “/css/spring.css” /resources/{filename:\\w+}.dat — matches /resources/spring.dat and assign the value “spring” to the filename variable","link":"/2020/02/17/2020021801/"},{"title":"interceptor","text":"add an interceptor in Spring Boot IntroductionSpring Interceptors are similar to Servlet Filters but they acts in Spring Context so are many powerful to manage HTTP Request and Response but they can implement more sofisticated behaviour because can access to all Spring context. Define Spring Boot Filter Interceptor1234567891011121314151617181920212223public class TestInterceptor implements HandlerInterceptor { private final Logger logger = LoggerFactory.getLogger(TestInterceptor.class); @Override public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception { logger.info(\"TestInterceptor preHandle controller 执行之前\"); return true; } @Override public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView) throws Exception { logger.info(\"TestInterceptor postHandle controller 执行之后,渲染视图之前\"); } @Override public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) throws Exception { logger.info(\"TestInterceptor afterCompletion 渲染视图之后\"); }} Register the custom Interceptor12345678910@Configurationpublic class WebMvcConfig implements WebMvcConfigurer { @Override public void addInterceptors(InterceptorRegistry registry) { TestInterceptor testInterceptor = new TestInterceptor(); registry.addInterceptor(testInterceptor).addPathPatterns(\"/test/**\"); }} filter vs interceptor http://www.mkjava.com/tutorial/filter-vs-interceptor/ https://www.jianshu.com/p/5f5e5211bbdb","link":"/2020/02/17/2020021802/"},{"title":"aspect","text":"add an aspect in Spring Boot Maven1234&lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-aop&lt;/artifactId&gt;&lt;/dependency&gt; Enable/disable auto configuration property.properties 1spring.aop.auto = true //'false' disables the auto configuration Creating aspects with @Aspect123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131package com.uuzu.newbasys.aspect;import java.io.BufferedReader;import java.lang.reflect.Method;import javax.servlet.http.HttpServletRequest;import com.uuzu.newbasys.annotation.LogAPIAccessAnnotation;import com.uuzu.newbasys.mapper.ba.log.LogAPIAccessMapper;import com.uuzu.newbasys.model.log.LogAPIAccessModel;import org.aspectj.lang.ProceedingJoinPoint;import org.aspectj.lang.annotation.AfterReturning;import org.aspectj.lang.annotation.Around;import org.aspectj.lang.annotation.Aspect;import org.aspectj.lang.reflect.MethodSignature;import org.json.JSONObject;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.security.core.context.SecurityContextHolder;import org.springframework.security.core.userdetails.UserDetails;import org.springframework.stereotype.Component;import org.slf4j.Logger;import org.slf4j.LoggerFactory;@Aspect@Componentpublic class LogAPIAccessAspect { private static final Logger logger = LoggerFactory.getLogger(LogAPIAccessAspect.class); @Autowired private LogAPIAccessMapper mapper; @Autowired private HttpServletRequest request; ThreadLocal&lt;LogAPIAccessModel&gt; logModelTh = new ThreadLocal&lt;&gt;(); @Around(\"@annotation(com.uuzu.newbasys.annotation.LogAPIAccessAnnotation)\") public Object logAPIAccess(ProceedingJoinPoint joinPoint) throws Throwable { LogAPIAccessModel logModel = new LogAPIAccessModel(); logModelTh.set(logModel); // username String userName = \"anonymous\"; if (SecurityContextHolder.getContext().getAuthentication() != null) { UserDetails userDetails = (UserDetails) SecurityContextHolder.getContext().getAuthentication() .getPrincipal(); userName = userDetails.getUsername(); } // 记录下请求内容 String url = request.getRequestURL().toString(); String httpMethod = request.getMethod(); String ip = request.getRemoteAddr(); MethodSignature methodSignature = (MethodSignature) joinPoint.getSignature(); Method method = methodSignature.getMethod(); // 类名 String className = methodSignature.getDeclaringTypeName(); // 方法名 String methodName = methodSignature.getName(); // 路径参数 JSONObject params = new JSONObject(request.getParameterMap()); // requestBody StringBuilder sb = new StringBuilder(); BufferedReader reader = request.getReader(); try { String line; while ((line = reader.readLine()) != null) { sb.append(line).append('\\n'); } } finally { reader.close(); } String requestBody = null; if (sb.toString().length() &gt; 0) { requestBody = sb.toString(); } long start = System.currentTimeMillis(); Object proceed = joinPoint.proceed(); // 执行时间 long executionTime = System.currentTimeMillis() - start; // 注解上的描述信息 LogAPIAccessAnnotation logAnnotation = method.getAnnotation(LogAPIAccessAnnotation.class); String logAnnotationValue = \"-\"; if (logAnnotation != null) { logAnnotationValue = logAnnotation.value(); } String[] logAnnotationValueArray = logAnnotationValue.split(\"-\"); logModel.setUserName(userName); logModel.setProject(logAnnotationValueArray[0]); logModel.setPage(logAnnotationValueArray[1]); logModel.setDetail(logAnnotationValueArray[2]); logModel.setHttpMethod(httpMethod); logModel.setUrl(url); logModel.setExecutionTime(executionTime); logModel.setParams(params.toString()); logModel.setRequestBody(requestBody); logModel.setClassName(className); logModel.setMethodName(methodName); logModel.setIp(ip); return proceed; } @AfterReturning(pointcut = \"@annotation(com.uuzu.newbasys.annotation.LogAPIAccessAnnotation)\", returning = \"response\") public void doAfterReturning(Object response) throws Throwable { // 处理完请求，返回内容 LogAPIAccessModel logModel = logModelTh.get(); logModel.setResponse(response.toString()); try { mapper.save(logModel); } catch (Exception e) { logger.error(\"接口统计报错！\"); logger.error(e.getMessage()); } finally { logModelTh.remove(); } }} create annotation1234567891011121314package com.uuzu.newbasys.annotation;import java.lang.annotation.Retention;import java.lang.annotation.Target;import java.lang.annotation.ElementType;import java.lang.annotation.RetentionPolicy;@Target(ElementType.METHOD)@Retention(RetentionPolicy.RUNTIME)public @interface LogAPIAccessAnnotation { // value 格式为 page-detail // 实时运营商-搜索 String value() default \"\";} test1234567@PostMapping(\"/logPostMethodTest\")@LogAPIAccessAnnotation(\"yoobi-test-log\")public Map&lt;String, Object&gt; logPostMethodTest(@RequestBody Map&lt;String, Object&gt; requestBody,@RequestParam(\"name\") String name,@RequestParam(\"age\") int age) { return requestBody;}","link":"/2020/02/18/2020021803/"},{"title":"iterm2 colors","text":"颜色配置 .itermcolors color1 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339340341342343344&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"&gt;&lt;plist version=\"1.0\"&gt;&lt;dict&gt; &lt;key&gt;Ansi 0 Color&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Alpha Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Blue Component&lt;/key&gt; &lt;real&gt;0.0&lt;/real&gt; &lt;key&gt;Color Space&lt;/key&gt; &lt;string&gt;sRGB&lt;/string&gt; &lt;key&gt;Green Component&lt;/key&gt; &lt;real&gt;0.57810515165328979&lt;/real&gt; &lt;key&gt;Red Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;/dict&gt; &lt;key&gt;Ansi 1 Color&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Alpha Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Blue Component&lt;/key&gt; &lt;real&gt;0.3188166618347168&lt;/real&gt; &lt;key&gt;Color Space&lt;/key&gt; &lt;string&gt;sRGB&lt;/string&gt; &lt;key&gt;Green Component&lt;/key&gt; &lt;real&gt;0.56284224987030029&lt;/real&gt; &lt;key&gt;Red Component&lt;/key&gt; &lt;real&gt;0.0&lt;/real&gt; &lt;/dict&gt; &lt;key&gt;Ansi 10 Color&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Alpha Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Blue Component&lt;/key&gt; &lt;real&gt;0.58712184429168701&lt;/real&gt; &lt;key&gt;Color Space&lt;/key&gt; &lt;string&gt;sRGB&lt;/string&gt; &lt;key&gt;Green Component&lt;/key&gt; &lt;real&gt;0.98577767610549927&lt;/real&gt; &lt;key&gt;Red Component&lt;/key&gt; &lt;real&gt;0.93205028772354126&lt;/real&gt; &lt;/dict&gt; &lt;key&gt;Ansi 11 Color&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Alpha Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Blue Component&lt;/key&gt; &lt;real&gt;0.54596829414367676&lt;/real&gt; &lt;key&gt;Color Space&lt;/key&gt; &lt;string&gt;sRGB&lt;/string&gt; &lt;key&gt;Green Component&lt;/key&gt; &lt;real&gt;0.96540826559066772&lt;/real&gt; &lt;key&gt;Red Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;/dict&gt; &lt;key&gt;Ansi 12 Color&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Alpha Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Blue Component&lt;/key&gt; &lt;real&gt;0.48356723785400391&lt;/real&gt; &lt;key&gt;Color Space&lt;/key&gt; &lt;string&gt;sRGB&lt;/string&gt; &lt;key&gt;Green Component&lt;/key&gt; &lt;real&gt;0.43602043390274048&lt;/real&gt; &lt;key&gt;Red Component&lt;/key&gt; &lt;real&gt;0.30320537090301514&lt;/real&gt; &lt;/dict&gt; &lt;key&gt;Ansi 13 Color&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Alpha Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Blue Component&lt;/key&gt; &lt;real&gt;0.72279053926467896&lt;/real&gt; &lt;key&gt;Color Space&lt;/key&gt; &lt;string&gt;sRGB&lt;/string&gt; &lt;key&gt;Green Component&lt;/key&gt; &lt;real&gt;0.70750737190246582&lt;/real&gt; &lt;key&gt;Red Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;/dict&gt; &lt;key&gt;Ansi 14 Color&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Alpha Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Blue Component&lt;/key&gt; &lt;real&gt;0.3913709819316864&lt;/real&gt; &lt;key&gt;Color Space&lt;/key&gt; &lt;string&gt;sRGB&lt;/string&gt; &lt;key&gt;Green Component&lt;/key&gt; &lt;real&gt;0.6548423171043396&lt;/real&gt; &lt;key&gt;Red Component&lt;/key&gt; &lt;real&gt;0.99998325109481812&lt;/real&gt; &lt;/dict&gt; &lt;key&gt;Ansi 15 Color&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Alpha Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Blue Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Color Space&lt;/key&gt; &lt;string&gt;sRGB&lt;/string&gt; &lt;key&gt;Green Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Red Component&lt;/key&gt; &lt;real&gt;0.99999600648880005&lt;/real&gt; &lt;/dict&gt; &lt;key&gt;Ansi 2 Color&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Alpha Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Blue Component&lt;/key&gt; &lt;real&gt;0.31863921880722046&lt;/real&gt; &lt;key&gt;Color Space&lt;/key&gt; &lt;string&gt;sRGB&lt;/string&gt; &lt;key&gt;Green Component&lt;/key&gt; &lt;real&gt;0.088427625596523285&lt;/real&gt; &lt;key&gt;Red Component&lt;/key&gt; &lt;real&gt;0.58081901073455811&lt;/real&gt; &lt;/dict&gt; &lt;key&gt;Ansi 3 Color&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Alpha Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Blue Component&lt;/key&gt; &lt;real&gt;0.34589937329292297&lt;/real&gt; &lt;key&gt;Color Space&lt;/key&gt; &lt;string&gt;sRGB&lt;/string&gt; &lt;key&gt;Green Component&lt;/key&gt; &lt;real&gt;0.80673152208328247&lt;/real&gt; &lt;key&gt;Red Component&lt;/key&gt; &lt;real&gt;0.92684400081634521&lt;/real&gt; &lt;/dict&gt; &lt;key&gt;Ansi 4 Color&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Alpha Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Blue Component&lt;/key&gt; &lt;real&gt;0.12984395027160645&lt;/real&gt; &lt;key&gt;Color Space&lt;/key&gt; &lt;string&gt;sRGB&lt;/string&gt; &lt;key&gt;Green Component&lt;/key&gt; &lt;real&gt;0.12984612584114075&lt;/real&gt; &lt;key&gt;Red Component&lt;/key&gt; &lt;real&gt;0.12984204292297363&lt;/real&gt; &lt;/dict&gt; &lt;key&gt;Ansi 5 Color&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Alpha Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Blue Component&lt;/key&gt; &lt;real&gt;0.54336923360824585&lt;/real&gt; &lt;key&gt;Color Space&lt;/key&gt; &lt;string&gt;sRGB&lt;/string&gt; &lt;key&gt;Green Component&lt;/key&gt; &lt;real&gt;0.53200650215148926&lt;/real&gt; &lt;key&gt;Red Component&lt;/key&gt; &lt;real&gt;0.96095067262649536&lt;/real&gt; &lt;/dict&gt; &lt;key&gt;Ansi 6 Color&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Alpha Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Blue Component&lt;/key&gt; &lt;real&gt;0.83428877592086792&lt;/real&gt; &lt;key&gt;Color Space&lt;/key&gt; &lt;string&gt;sRGB&lt;/string&gt; &lt;key&gt;Green Component&lt;/key&gt; &lt;real&gt;0.91446685791015625&lt;/real&gt; &lt;key&gt;Red Component&lt;/key&gt; &lt;real&gt;0.64103472232818604&lt;/real&gt; &lt;/dict&gt; &lt;key&gt;Ansi 7 Color&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Alpha Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Blue Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Color Space&lt;/key&gt; &lt;string&gt;sRGB&lt;/string&gt; &lt;key&gt;Green Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Red Component&lt;/key&gt; &lt;real&gt;0.99999600648880005&lt;/real&gt; &lt;/dict&gt; &lt;key&gt;Ansi 8 Color&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Alpha Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Blue Component&lt;/key&gt; &lt;real&gt;0.25586915016174316&lt;/real&gt; &lt;key&gt;Color Space&lt;/key&gt; &lt;string&gt;sRGB&lt;/string&gt; &lt;key&gt;Green Component&lt;/key&gt; &lt;real&gt;0.25587284564971924&lt;/real&gt; &lt;key&gt;Red Component&lt;/key&gt; &lt;real&gt;0.25586599111557007&lt;/real&gt; &lt;/dict&gt; &lt;key&gt;Ansi 9 Color&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Alpha Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Blue Component&lt;/key&gt; &lt;real&gt;0.47006773948669434&lt;/real&gt; &lt;key&gt;Color Space&lt;/key&gt; &lt;string&gt;sRGB&lt;/string&gt; &lt;key&gt;Green Component&lt;/key&gt; &lt;real&gt;0.48961412906646729&lt;/real&gt; &lt;key&gt;Red Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;/dict&gt; &lt;key&gt;Background Color&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Alpha Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Blue Component&lt;/key&gt; &lt;real&gt;0.0&lt;/real&gt; &lt;key&gt;Color Space&lt;/key&gt; &lt;string&gt;sRGB&lt;/string&gt; &lt;key&gt;Green Component&lt;/key&gt; &lt;real&gt;0.0&lt;/real&gt; &lt;key&gt;Red Component&lt;/key&gt; &lt;real&gt;0.0&lt;/real&gt; &lt;/dict&gt; &lt;key&gt;Badge Color&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Alpha Component&lt;/key&gt; &lt;real&gt;0.5&lt;/real&gt; &lt;key&gt;Blue Component&lt;/key&gt; &lt;real&gt;0.0&lt;/real&gt; &lt;key&gt;Color Space&lt;/key&gt; &lt;string&gt;sRGB&lt;/string&gt; &lt;key&gt;Green Component&lt;/key&gt; &lt;real&gt;0.1491314172744751&lt;/real&gt; &lt;key&gt;Red Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;/dict&gt; &lt;key&gt;Bold Color&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Alpha Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Blue Component&lt;/key&gt; &lt;real&gt;0.84702622890472412&lt;/real&gt; &lt;key&gt;Color Space&lt;/key&gt; &lt;string&gt;sRGB&lt;/string&gt; &lt;key&gt;Green Component&lt;/key&gt; &lt;real&gt;0.90398252010345459&lt;/real&gt; &lt;key&gt;Red Component&lt;/key&gt; &lt;real&gt;0.92175871133804321&lt;/real&gt; &lt;/dict&gt; &lt;key&gt;Cursor Color&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Alpha Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Blue Component&lt;/key&gt; &lt;real&gt;0.11260946840047836&lt;/real&gt; &lt;key&gt;Color Space&lt;/key&gt; &lt;string&gt;sRGB&lt;/string&gt; &lt;key&gt;Green Component&lt;/key&gt; &lt;real&gt;0.65555733442306519&lt;/real&gt; &lt;key&gt;Red Component&lt;/key&gt; &lt;real&gt;0.96525377035140991&lt;/real&gt; &lt;/dict&gt; &lt;key&gt;Cursor Guide Color&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Alpha Component&lt;/key&gt; &lt;real&gt;0.18783967391304349&lt;/real&gt; &lt;key&gt;Blue Component&lt;/key&gt; &lt;real&gt;0.64362198114395142&lt;/real&gt; &lt;key&gt;Color Space&lt;/key&gt; &lt;string&gt;sRGB&lt;/string&gt; &lt;key&gt;Green Component&lt;/key&gt; &lt;real&gt;0.76386874914169312&lt;/real&gt; &lt;key&gt;Red Component&lt;/key&gt; &lt;real&gt;0.0&lt;/real&gt; &lt;/dict&gt; &lt;key&gt;Cursor Text Color&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Alpha Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Blue Component&lt;/key&gt; &lt;real&gt;0.123550646007061&lt;/real&gt; &lt;key&gt;Color Space&lt;/key&gt; &lt;string&gt;sRGB&lt;/string&gt; &lt;key&gt;Green Component&lt;/key&gt; &lt;real&gt;0.12358016520738602&lt;/real&gt; &lt;key&gt;Red Component&lt;/key&gt; &lt;real&gt;0.12355593591928482&lt;/real&gt; &lt;/dict&gt; &lt;key&gt;Foreground Color&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Alpha Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Blue Component&lt;/key&gt; &lt;real&gt;0.73139464855194092&lt;/real&gt; &lt;key&gt;Color Space&lt;/key&gt; &lt;string&gt;sRGB&lt;/string&gt; &lt;key&gt;Green Component&lt;/key&gt; &lt;real&gt;0.73152464628219604&lt;/real&gt; &lt;key&gt;Red Component&lt;/key&gt; &lt;real&gt;0.7314179539680481&lt;/real&gt; &lt;/dict&gt; &lt;key&gt;Link Color&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Alpha Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Blue Component&lt;/key&gt; &lt;real&gt;0.3188166618347168&lt;/real&gt; &lt;key&gt;Color Space&lt;/key&gt; &lt;string&gt;sRGB&lt;/string&gt; &lt;key&gt;Green Component&lt;/key&gt; &lt;real&gt;0.56284224987030029&lt;/real&gt; &lt;key&gt;Red Component&lt;/key&gt; &lt;real&gt;0.0&lt;/real&gt; &lt;/dict&gt; &lt;key&gt;Selected Text Color&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Alpha Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Blue Component&lt;/key&gt; &lt;real&gt;0.84702622890472412&lt;/real&gt; &lt;key&gt;Color Space&lt;/key&gt; &lt;string&gt;sRGB&lt;/string&gt; &lt;key&gt;Green Component&lt;/key&gt; &lt;real&gt;0.90398252010345459&lt;/real&gt; &lt;key&gt;Red Component&lt;/key&gt; &lt;real&gt;0.92175871133804321&lt;/real&gt; &lt;/dict&gt; &lt;key&gt;Selection Color&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Alpha Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Blue Component&lt;/key&gt; &lt;real&gt;0.31934511661529541&lt;/real&gt; &lt;key&gt;Color Space&lt;/key&gt; &lt;string&gt;sRGB&lt;/string&gt; &lt;key&gt;Green Component&lt;/key&gt; &lt;real&gt;0.26156574487686157&lt;/real&gt; &lt;key&gt;Red Component&lt;/key&gt; &lt;real&gt;0.19109529256820679&lt;/real&gt; &lt;/dict&gt;&lt;/dict&gt;&lt;/plist&gt; color2 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339340341342343344&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"&gt;&lt;plist version=\"1.0\"&gt;&lt;dict&gt; &lt;key&gt;Ansi 0 Color&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Alpha Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Blue Component&lt;/key&gt; &lt;real&gt;0.00025352611555717885&lt;/real&gt; &lt;key&gt;Color Space&lt;/key&gt; &lt;string&gt;sRGB&lt;/string&gt; &lt;key&gt;Green Component&lt;/key&gt; &lt;real&gt;0.2684633731842041&lt;/real&gt; &lt;key&gt;Red Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;/dict&gt; &lt;key&gt;Ansi 1 Color&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Alpha Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Blue Component&lt;/key&gt; &lt;real&gt;0.92144101858139038&lt;/real&gt; &lt;key&gt;Color Space&lt;/key&gt; &lt;string&gt;sRGB&lt;/string&gt; &lt;key&gt;Green Component&lt;/key&gt; &lt;real&gt;0.92145264148712158&lt;/real&gt; &lt;key&gt;Red Component&lt;/key&gt; &lt;real&gt;0.92143100500106812&lt;/real&gt; &lt;/dict&gt; &lt;key&gt;Ansi 10 Color&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Alpha Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Blue Component&lt;/key&gt; &lt;real&gt;0.1867164671421051&lt;/real&gt; &lt;key&gt;Color Space&lt;/key&gt; &lt;string&gt;sRGB&lt;/string&gt; &lt;key&gt;Green Component&lt;/key&gt; &lt;real&gt;0.39551311731338501&lt;/real&gt; &lt;key&gt;Red Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;/dict&gt; &lt;key&gt;Ansi 11 Color&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Alpha Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Blue Component&lt;/key&gt; &lt;real&gt;0.66423153877258301&lt;/real&gt; &lt;key&gt;Color Space&lt;/key&gt; &lt;string&gt;sRGB&lt;/string&gt; &lt;key&gt;Green Component&lt;/key&gt; &lt;real&gt;0.66424006223678589&lt;/real&gt; &lt;key&gt;Red Component&lt;/key&gt; &lt;real&gt;0.66422420740127563&lt;/real&gt; &lt;/dict&gt; &lt;key&gt;Ansi 12 Color&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Alpha Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Blue Component&lt;/key&gt; &lt;real&gt;0.48356723785400391&lt;/real&gt; &lt;key&gt;Color Space&lt;/key&gt; &lt;string&gt;sRGB&lt;/string&gt; &lt;key&gt;Green Component&lt;/key&gt; &lt;real&gt;0.43602043390274048&lt;/real&gt; &lt;key&gt;Red Component&lt;/key&gt; &lt;real&gt;0.30320537090301514&lt;/real&gt; &lt;/dict&gt; &lt;key&gt;Ansi 13 Color&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Alpha Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Blue Component&lt;/key&gt; &lt;real&gt;0.3913709819316864&lt;/real&gt; &lt;key&gt;Color Space&lt;/key&gt; &lt;string&gt;sRGB&lt;/string&gt; &lt;key&gt;Green Component&lt;/key&gt; &lt;real&gt;0.6548423171043396&lt;/real&gt; &lt;key&gt;Red Component&lt;/key&gt; &lt;real&gt;0.99998325109481812&lt;/real&gt; &lt;/dict&gt; &lt;key&gt;Ansi 14 Color&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Alpha Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Blue Component&lt;/key&gt; &lt;real&gt;0.1867164671421051&lt;/real&gt; &lt;key&gt;Color Space&lt;/key&gt; &lt;string&gt;sRGB&lt;/string&gt; &lt;key&gt;Green Component&lt;/key&gt; &lt;real&gt;0.39551311731338501&lt;/real&gt; &lt;key&gt;Red Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;/dict&gt; &lt;key&gt;Ansi 15 Color&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Alpha Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Blue Component&lt;/key&gt; &lt;real&gt;0.3913709819316864&lt;/real&gt; &lt;key&gt;Color Space&lt;/key&gt; &lt;string&gt;sRGB&lt;/string&gt; &lt;key&gt;Green Component&lt;/key&gt; &lt;real&gt;0.6548423171043396&lt;/real&gt; &lt;key&gt;Red Component&lt;/key&gt; &lt;real&gt;0.99998325109481812&lt;/real&gt; &lt;/dict&gt; &lt;key&gt;Ansi 2 Color&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Alpha Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Blue Component&lt;/key&gt; &lt;real&gt;0.66423153877258301&lt;/real&gt; &lt;key&gt;Color Space&lt;/key&gt; &lt;string&gt;sRGB&lt;/string&gt; &lt;key&gt;Green Component&lt;/key&gt; &lt;real&gt;0.66424006223678589&lt;/real&gt; &lt;key&gt;Red Component&lt;/key&gt; &lt;real&gt;0.66422420740127563&lt;/real&gt; &lt;/dict&gt; &lt;key&gt;Ansi 3 Color&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Alpha Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Blue Component&lt;/key&gt; &lt;real&gt;0.66423153877258301&lt;/real&gt; &lt;key&gt;Color Space&lt;/key&gt; &lt;string&gt;sRGB&lt;/string&gt; &lt;key&gt;Green Component&lt;/key&gt; &lt;real&gt;0.66424006223678589&lt;/real&gt; &lt;key&gt;Red Component&lt;/key&gt; &lt;real&gt;0.66422420740127563&lt;/real&gt; &lt;/dict&gt; &lt;key&gt;Ansi 4 Color&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Alpha Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Blue Component&lt;/key&gt; &lt;real&gt;0.12984395027160645&lt;/real&gt; &lt;key&gt;Color Space&lt;/key&gt; &lt;string&gt;sRGB&lt;/string&gt; &lt;key&gt;Green Component&lt;/key&gt; &lt;real&gt;0.12984612584114075&lt;/real&gt; &lt;key&gt;Red Component&lt;/key&gt; &lt;real&gt;0.12984204292297363&lt;/real&gt; &lt;/dict&gt; &lt;key&gt;Ansi 5 Color&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Alpha Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Blue Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Color Space&lt;/key&gt; &lt;string&gt;sRGB&lt;/string&gt; &lt;key&gt;Green Component&lt;/key&gt; &lt;real&gt;0.8382837176322937&lt;/real&gt; &lt;key&gt;Red Component&lt;/key&gt; &lt;real&gt;0.46202266216278076&lt;/real&gt; &lt;/dict&gt; &lt;key&gt;Ansi 6 Color&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Alpha Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Blue Component&lt;/key&gt; &lt;real&gt;0.0&lt;/real&gt; &lt;key&gt;Color Space&lt;/key&gt; &lt;string&gt;sRGB&lt;/string&gt; &lt;key&gt;Green Component&lt;/key&gt; &lt;real&gt;0.57810515165328979&lt;/real&gt; &lt;key&gt;Red Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;/dict&gt; &lt;key&gt;Ansi 7 Color&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Alpha Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Blue Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Color Space&lt;/key&gt; &lt;string&gt;sRGB&lt;/string&gt; &lt;key&gt;Green Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Red Component&lt;/key&gt; &lt;real&gt;0.99999600648880005&lt;/real&gt; &lt;/dict&gt; &lt;key&gt;Ansi 8 Color&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Alpha Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Blue Component&lt;/key&gt; &lt;real&gt;0.25586915016174316&lt;/real&gt; &lt;key&gt;Color Space&lt;/key&gt; &lt;string&gt;sRGB&lt;/string&gt; &lt;key&gt;Green Component&lt;/key&gt; &lt;real&gt;0.25587284564971924&lt;/real&gt; &lt;key&gt;Red Component&lt;/key&gt; &lt;real&gt;0.25586599111557007&lt;/real&gt; &lt;/dict&gt; &lt;key&gt;Ansi 9 Color&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Alpha Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Blue Component&lt;/key&gt; &lt;real&gt;0.92144101858139038&lt;/real&gt; &lt;key&gt;Color Space&lt;/key&gt; &lt;string&gt;sRGB&lt;/string&gt; &lt;key&gt;Green Component&lt;/key&gt; &lt;real&gt;0.92145264148712158&lt;/real&gt; &lt;key&gt;Red Component&lt;/key&gt; &lt;real&gt;0.92143100500106812&lt;/real&gt; &lt;/dict&gt; &lt;key&gt;Background Color&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Alpha Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Blue Component&lt;/key&gt; &lt;real&gt;0.0&lt;/real&gt; &lt;key&gt;Color Space&lt;/key&gt; &lt;string&gt;sRGB&lt;/string&gt; &lt;key&gt;Green Component&lt;/key&gt; &lt;real&gt;0.0&lt;/real&gt; &lt;key&gt;Red Component&lt;/key&gt; &lt;real&gt;0.0&lt;/real&gt; &lt;/dict&gt; &lt;key&gt;Badge Color&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Alpha Component&lt;/key&gt; &lt;real&gt;0.5&lt;/real&gt; &lt;key&gt;Blue Component&lt;/key&gt; &lt;real&gt;0.0&lt;/real&gt; &lt;key&gt;Color Space&lt;/key&gt; &lt;string&gt;sRGB&lt;/string&gt; &lt;key&gt;Green Component&lt;/key&gt; &lt;real&gt;0.1491314172744751&lt;/real&gt; &lt;key&gt;Red Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;/dict&gt; &lt;key&gt;Bold Color&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Alpha Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Blue Component&lt;/key&gt; &lt;real&gt;0.84702622890472412&lt;/real&gt; &lt;key&gt;Color Space&lt;/key&gt; &lt;string&gt;sRGB&lt;/string&gt; &lt;key&gt;Green Component&lt;/key&gt; &lt;real&gt;0.90398252010345459&lt;/real&gt; &lt;key&gt;Red Component&lt;/key&gt; &lt;real&gt;0.92175871133804321&lt;/real&gt; &lt;/dict&gt; &lt;key&gt;Cursor Color&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Alpha Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Blue Component&lt;/key&gt; &lt;real&gt;0.00025352611555717885&lt;/real&gt; &lt;key&gt;Color Space&lt;/key&gt; &lt;string&gt;sRGB&lt;/string&gt; &lt;key&gt;Green Component&lt;/key&gt; &lt;real&gt;0.2684633731842041&lt;/real&gt; &lt;key&gt;Red Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;/dict&gt; &lt;key&gt;Cursor Guide Color&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Alpha Component&lt;/key&gt; &lt;real&gt;0.18783967391304349&lt;/real&gt; &lt;key&gt;Blue Component&lt;/key&gt; &lt;real&gt;0.64362198114395142&lt;/real&gt; &lt;key&gt;Color Space&lt;/key&gt; &lt;string&gt;sRGB&lt;/string&gt; &lt;key&gt;Green Component&lt;/key&gt; &lt;real&gt;0.76386874914169312&lt;/real&gt; &lt;key&gt;Red Component&lt;/key&gt; &lt;real&gt;0.0&lt;/real&gt; &lt;/dict&gt; &lt;key&gt;Cursor Text Color&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Alpha Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Blue Component&lt;/key&gt; &lt;real&gt;0.123550646007061&lt;/real&gt; &lt;key&gt;Color Space&lt;/key&gt; &lt;string&gt;sRGB&lt;/string&gt; &lt;key&gt;Green Component&lt;/key&gt; &lt;real&gt;0.12358016520738602&lt;/real&gt; &lt;key&gt;Red Component&lt;/key&gt; &lt;real&gt;0.12355593591928482&lt;/real&gt; &lt;/dict&gt; &lt;key&gt;Foreground Color&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Alpha Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Blue Component&lt;/key&gt; &lt;real&gt;0.73139464855194092&lt;/real&gt; &lt;key&gt;Color Space&lt;/key&gt; &lt;string&gt;sRGB&lt;/string&gt; &lt;key&gt;Green Component&lt;/key&gt; &lt;real&gt;0.73152464628219604&lt;/real&gt; &lt;key&gt;Red Component&lt;/key&gt; &lt;real&gt;0.7314179539680481&lt;/real&gt; &lt;/dict&gt; &lt;key&gt;Link Color&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Alpha Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Blue Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Color Space&lt;/key&gt; &lt;string&gt;sRGB&lt;/string&gt; &lt;key&gt;Green Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Red Component&lt;/key&gt; &lt;real&gt;0.99999600648880005&lt;/real&gt; &lt;/dict&gt; &lt;key&gt;Selected Text Color&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Alpha Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Blue Component&lt;/key&gt; &lt;real&gt;0.84702622890472412&lt;/real&gt; &lt;key&gt;Color Space&lt;/key&gt; &lt;string&gt;sRGB&lt;/string&gt; &lt;key&gt;Green Component&lt;/key&gt; &lt;real&gt;0.90398252010345459&lt;/real&gt; &lt;key&gt;Red Component&lt;/key&gt; &lt;real&gt;0.92175871133804321&lt;/real&gt; &lt;/dict&gt; &lt;key&gt;Selection Color&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Alpha Component&lt;/key&gt; &lt;real&gt;1&lt;/real&gt; &lt;key&gt;Blue Component&lt;/key&gt; &lt;real&gt;0.31934511661529541&lt;/real&gt; &lt;key&gt;Color Space&lt;/key&gt; &lt;string&gt;sRGB&lt;/string&gt; &lt;key&gt;Green Component&lt;/key&gt; &lt;real&gt;0.26156574487686157&lt;/real&gt; &lt;key&gt;Red Component&lt;/key&gt; &lt;real&gt;0.19109529256820679&lt;/real&gt; &lt;/dict&gt;&lt;/dict&gt;&lt;/plist&gt;","link":"/2020/02/22/2020022201/"},{"title":"Spring Data Annotations","text":"- IntroductionSpring Data provides an abstraction over data storage technologies. Common Spring Data Annotations@Transactional@NoRepositoryBean@Param12@Query(\"FROM Person p WHERE p.name = :name\")Person findByName(@Param(\"name\") String name); @Id@Id marks a field in a model class as the primary key 12345class Person { @Id Long id;} @TransientWe can use this annotation to mark a field in a model class as transient. Hence the data store engine won’t read or write this field’s value 12345class Person { @Transient int age;} @CreatedBy, @LastModifiedBy, @CreatedDate, @LastModifiedDateWith these annotations, we can audit our model classes: Spring automatically populates the annotated fields with the principal who created the object, last modified it, and the date of creation, and last modification: Note, that if we want Spring to populate the principals, we need to use Spring Security as well. 1234567891011121314151617public class Person { @CreatedBy User creator; @LastModifiedBy User modifier; @CreatedDate Date createdAt; @LastModifiedDate Date modifiedAt; // ...} Spring Data JPA Annotations@Query@Procedure@LockWe can configure the lock mode when we execute a repository query method READ WRITE OPTIMISTIC OPTIMISTIC_FORCE_INCREMENT PESSIMISTIC_READ PESSIMISTIC_WRITE PESSIMISTIC_FORCE_INCREMENT NONE 123@Lock(LockModeType.NONE)@Query(\"SELECT COUNT(*) FROM Person p\")long getPersonCount(); @Modifying123@Modifying@Query(\"UPDATE Person p SET p.name = :name WHERE p.id = :id\")void changeName(@Param(\"id\") long id, @Param(\"name\") String name); @EnableJpaRepositories123@Configuration@EnableJpaRepositories(basePackages = \"org.baeldung.persistence.dao\")class PersistenceJPAConfig {}","link":"/2020/02/23/2020022301/"},{"title":"Reading application.properties in Spring Boot","text":"- Environment object@Value123456789101112131415@SpringBootTestpublic class AppPropertiesTests { @Autowired private Environment env; @Value(\"${test.hello}\") private String hello; @Test public void test() { System.out.println(env.getProperty(\"spring.profiles.active\")); System.out.println(hello); }} @ConfigurationPropertiesapplication-local.yml123456789101112131415161718192021222324test: hello: helloapp: url: www.test.com mail: #Simple properties hostname: mailer@mail.com port: 9000 from: mailer@mail.com #List properties defaultRecipients: - admin@mail.com - owner@mail.com #Map Properties additionalHeaders: redelivery: true secure: true #Object properties credentials: username: john password: password authMethod: SHA1 Mail.java123456789101112131415161718package com.example.demo.model;import java.util.List;import java.util.Map;import lombok.Data;@Datapublic class Mail { private String host; private int port; private String from; private List&lt;String&gt; defaultRecipients; private Map&lt;String, String&gt; additionalHeaders; private Credentials credentials; } AppProperties.java123456789101112131415161718192021222324252627282930package com.example.demo.config;import com.example.demo.model.Mail;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.boot.context.properties.ConfigurationProperties;import org.springframework.core.env.Environment;import org.springframework.stereotype.Component;import lombok.Data;/** * ConfigProperties */@Data@Component@ConfigurationProperties(prefix = \"app\")public class AppProperties { @Autowired private Environment env; private String url; private Mail mail; public String get(String key) { return env.getProperty(key); }} AppPropertiesTest.java123456789101112131415161718192021222324252627282930313233343536package com.example.demo.config;import org.junit.jupiter.api.Test;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.beans.factory.annotation.Value;import org.springframework.boot.test.context.SpringBootTest;import org.springframework.core.env.Environment;import com.example.demo.config.AppProperties;import static org.assertj.core.api.Assertions.assertThat;/** * ConfigPropertiesTests */@SpringBootTestpublic class AppPropertiesTest { @Autowired private AppProperties appProperties; @Autowired private Environment env; @Value(\"${test.hello}\") private String hello; @Test public void test() { assertThat(env.getProperty(\"spring.profiles.active\")).asString().isEqualTo(\"local\"); assertThat(appProperties.getUrl()).isEqualTo(\"www.test.com\"); assertThat(appProperties.getMail().getHost()).isEqualTo(\"mailer@mail.com\"); }}","link":"/2020/02/28/2020022901/"},{"title":"Best practices in MySQL","text":"- - Always use proper datatypeUse datatypes based on the nature of data. If you use irrelevant datatypes it may consume more space or may lead to errors.Example: Using varchar (20) to store date time values instead of DATETIME datatype will lead to errors during date time-related calculations and there is also a possible case of storing invalid data. Use CHAR (1) over VARCHAR(1)If you string a single character, use CHAR(1) instead of VARCHAR(1) because VARCHAR(1) will take extra byte to store information Use CHAR datatype to store only fixed length dataExample: Using char(1000) instead of varchar(1000) will consume more space if the length of data is less than 1000 Avoid using regional date formatsWhen you use DATETIME or DATE datatype always use YYYY-MM-DD date format or ISO date format that suits your SQL Engine. Other regional formats like DD-MM-YYY, MM-DD-YYYY will not be stored properly. Index key columnsMake sure to index the columns which are used in JOIN clauses so that the query returns the result fast.If you use UPDATE statement that involves more than one table make sure that all the columns which are used to join the tables are indexed Do not use functions over indexed columnsUsing functions over indexed columns defeats the purpose of the index. Suppose you want to get data where first two character of customer code is AK, do not writeSELECT columns FROM table WHERE left (customer_code,2)=’AK’but rewrite it usingSELECT columns FROM table WHERE customer_code like ‘AK%’which will make use of index which results in faster response time. Use SELECT * only if neededDo not just blindly use SELECT * in the code. If there are many columns in the table, all will get returned which will slow down the response time particularly if you send the result to a front-end application.Explicitly type out the column names which are actually needed. Use ORDER BY Clause only if neededIf you want to show the result in front-end application, let it ORDER the result set. Doing this in SQL may slow down the response time in the multi-user environment. Choose proper Database EngineIf you develop an application that reads data more often than writing (ex: search engine), choose MyISAM storage engine.If you develop an application that writes data more often than reading (ex: real-time bank transactions), choose INNODB storage engine.Choosing wrong storage engine will affect the performance Use EXISTS clause wherever neededIf you want to check the existence of data, do not useIf (SELECT count(*) from Table WHERE col=’some value’)&gt;0instead, use EXISTS clauseIf EXISTS(SELECT * from Table WHERE col=’some value’)which is faster in response time.","link":"/2020/03/12/2020031201/"},{"title":"springboot 监控","text":"- 依赖12345678&lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;&lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;io.micrometer&lt;/groupId&gt; &lt;artifactId&gt;micrometer-registry-prometheus&lt;/artifactId&gt;&lt;/dependency&gt; config12345678management: endpoints: web: exposure: include: \"prometheus\" metrics: tags: application: ${spring.application.name} test http://localhost:8000/actuator/prometheus 12345678# HELP jvm_threads_states_threads The current number of threads having NEW state# TYPE jvm_threads_states_threads gaugejvm_threads_states_threads{application=&quot;demo&quot;,state=&quot;waiting&quot;,} 11.0jvm_threads_states_threads{application=&quot;demo&quot;,state=&quot;blocked&quot;,} 0.0jvm_threads_states_threads{application=&quot;demo&quot;,state=&quot;timed-waiting&quot;,} 4.0jvm_threads_states_threads{application=&quot;demo&quot;,state=&quot;runnable&quot;,} 8.0jvm_threads_states_threads{application=&quot;demo&quot;,state=&quot;new&quot;,} 0.0jvm_threads_states_threads{application=&quot;demo&quot;,state=&quot;terminated&quot;,} 0.0 对接 prometheusprometheus 一款开源的监控 + 时序数据库 + 报警软件 prometheus.yml123456789101112scrape_configs: # 任意写，建议英文，不要包含特殊字符 - job_name: \"spring\" # 多久采集一次数据 scrape_interval: 15s # 采集时的超时时间 scrape_timeout: 10s # 采集的路径是啥 metrics_path: \"/actuator/prometheus\" # 采集服务的地址，设置成上面Spring Boot应用所在服务器的具体地址。 static_configs: - targets: [\"host.docker.internal:8000\"] 在prometheus.yml 文件所在目录执行如下命令，启动Prometheus123docker run -d -p 9090:9090 \\ -v $(pwd)/prometheus.yml:/etc/prometheus/prometheus.yml \\ prom/prometheus --config.file=/etc/prometheus/prometheus.yml test http://localhost:9090 Grafana可视化1docker run -d -p 3001:3000 grafana/grafana test http://localhost:3001/","link":"/2020/03/17/2020031801/"},{"title":"int[] <==> List<Integer>","text":"- How to convert List to int[] in Java?1int[] array = list.stream().mapToInt(i-&gt;i).toArray(); How to convert int[] into List in Java?12int[] ints = {1,2,3};List&lt;Integer&gt; list = Arrays.stream(ints).boxed().collect(Collectors.toList());","link":"/2020/05/04/2020050501/"},{"title":"Mac Terminal Commands","text":"- WORK WITH FILES AND FOLDERS cd Shows your home directory cd &lt;folder&gt; Change to a specific directory cd ~ Home directory, e.g. ‘cd ~/folder/’ cd / Root of drive ls Shows a listing of all files in the current directory ls -C Sort files or entries by size ls -lt List the files sorted by time modified (most recent first) ls -l Shows a long listing of all files in the current directory. ls -a Listing including hidden files ls -lh Long listing with human readable file sizes ( KB, MB, or GB) ls -R Shows the entire contents of folder recursively top Displays the active processes. Press q to quit q Exit clear Clear the screen touch &lt;file&gt; Create a new file with no extension pwd Full path to the working directory .. Parent directory ls -l .. Long listing of parent directory cd ../../ Move 2 levels up . Current folder cat The current folder rm &lt;file&gt; Remove a file rm -i &lt;file&gt; Remove with confirmation rm -r &lt;dir&gt; Remove a directory and its contents - Use with caution! rm -f &lt;file&gt; Force a removal without confirmation rm -i &lt;file&gt; Will display prompt before removal cp &lt;file&gt; &lt;newfile&gt; Copy a file to file cp &lt;file&gt; &lt;dir&gt; Copy a file to a directory mv &lt;file&gt; &lt;new filename&gt; Move/Rename a file mkdir &lt;dir&gt; Create new directory named &lt;dir&gt; mkdir &lt;dir&gt; &lt;dir2&gt; &lt;dir3&gt; Create multiple directories at once mkdir -p &lt;dir&gt;/&lt;dir&gt; Create nested directories rmdir &lt;dir&gt; Remove an entire directory ( only works on empty directories ) find &lt;dir&gt; -name &lt;“file&quot;&gt; Find all files named &lt;file&gt; inside &lt;dir&gt;. Use wildcards (*) to search for partial filenames SPECIAL COMMANDS sudo &lt;command&gt; Run a command with the security privileges of super user nano &lt;file&gt; Opens the Terminal editor open &lt;file&gt; Opens a file &lt;command&gt; -h Show help about a command man &lt;command&gt; Show the help manual of the command CONTROL PERMISSIONS ls -ld Display the default permission for a home directory ls -ld/&lt;dir&gt; Display the read, write, and access permission of a particular folder chmod 755 &lt;file&gt; Change the permission of a file to 755 chmod -R 600 &lt;dir&gt; Change the permission of a folder (and its contents) to 600 chown &lt;user&gt;:&lt;group&gt; &lt;file&gt; Change the ownership of a file to user and group. Add -R to include folder contents NETWORK AND SERVER COMMANDS ping &lt;host&gt; Ping a host and display its status whois &lt;domain&gt; Output WHOIS information about a domain curl -O &lt;url/to/file&gt; Download a file via HTTP, HTTPS, or FTP ssh &lt;username&gt;@&lt;host&gt; Establish an SSH connection to &lt;host&gt; with user &lt;username&gt; scp &lt;file&gt;&lt;user&gt;@&lt;host&gt;:/remote/path Copy a &lt;file&gt; to a remote &lt;host&gt; Develop pkill -9 -f tomcat","link":"/2020/05/06/2020050601/"},{"title":"Better Mac Terminal Experience","text":"- Choosing a Shell Application iterm2 vscode 自带 Installing Your Unix Shell: zsh Zsh Installation: brew install zsh zsh-completions Verify installation: zsh --version Make zsh your system’s default shell: chsh -s $(which zsh) Verify that it worked: echo $SHELL Choosing a Framework :oh-my-zsh And Configplugins git npm autojump zsh-autosuggestions zsh-syntax-highlighting extract themes ZSH_THEME=”spaceship” ZSH_THEME=”powerlevel9k/powerlevel9k” alias alias gs=”git status” zsh cheat sheet exec zsh Apply changes made to zshrc tabs Create a new tab in the current directory (macOS - requires enabling access for assistive devices under - System Preferences). take Create a new directory and change to it, will create intermediate directories as required. .. cd .. … cd ../.. …. cd ../../.. ….. cd ../../../.. l ls -lah la ls -lAh ll ls -lh / cd / ~ cd ~ md mkdir -p rd rmdir d dirs -v (lists last used directories) alias list all aliases x / extract Extract an archive (supported types: tar.{bz2,gz,xz,lzma}, bz2, rar, gz, tar, tbz2, tgz, zip, Z, 7z). zsh_stats Get a list of the top 20 commands and how many times they have been run. upgrade_oh_my_zsh Upgrade Oh-my-zsh. uninstall_oh_my_zsh Uninstall Oh-my-zsh. 输入 grep 然后用上下箭头可以翻阅你执行过的所有 grep 命令 目录浏览和跳转:输入 d，即可列出你在这个会话里访问的目录列表，输入列表前的序号，即可直接跳转","link":"/2020/05/09/2020050901/"},{"title":"maven in action","text":"- Choosing a Shell Application","link":"/2020/05/09/2020050902/"},{"title":"top homebrew packages","text":"- caskhtop","link":"/2020/05/10/2020051001/"},{"title":"Spring Boot - Loading Initial Data","text":"- schema.sql src/main/resources 12345678DROP TABLE IF EXISTS USERS;CREATE TABLE USERS( ID int NOT NULL AUTO_INCREMENT, NAME varchar(100) NOT NULL, STATUS int, PRIMARY KEY (ID)); data.sql12345678INSERT INTO usersVALUES (1, 'Alex', 1), (2, 'Bob', 1), (3, 'John', 0), (4, 'Harry', 0), (5, 'Smith', 1); note Spring boot 2, database initialization only works for embedded databases (H2, HSQLDB, …) If you want to use it for other databases as well, you need to change the spring.datasource.initialization-mode property 1spring.datasource.initialization-mode=always If you’re using multiple database vendors, you can name your file data-h2.sql or data-mysql.sql depending on which database platform you want to use.To make that work, you’ll have to configure the spring.datasource.platform property though: 1spring.datasource.platform=h2","link":"/2020/05/13/2020051301/"},{"title":"Maven Failed to read artifact descriptor","text":"- mvn -U clean installYou can always try mvn -U clean install -U forces a check for updated releases and snapshots on remote repositories. run mvn install from the parent directoryThis problem can occur if you have some child projects that refer to a parent pom and you have not installed from the parent pom directory (run mvn install from the parent directory). One of the child projects may depend on a sibling project and when it goes to read the pom of the sibling, it will fail with the error mentioned in the question unless you have installed from the parent pom directory at least once. I just ran into this problem when moving a project to a new computer. I was in the habit of running commands from the child project and didn’t run install on the parent.","link":"/2020/05/17/2020051801/"},{"title":"SpringBoot no main manifest attribute (maven)","text":"- mvn package spring-boot:repackagepom123456789101112131415&lt;plugin&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt; &lt;configuration&gt; &lt;mainClass&gt;com.places.Main&lt;/mainClass&gt; &lt;/configuration&gt; &lt;executions&gt; &lt;execution&gt; &lt;goals&gt; &lt;goal&gt;repackage&lt;/goal&gt; &lt;/goals&gt; &lt;/execution&gt; &lt;/executions&gt;&lt;/plugin&gt;","link":"/2020/05/18/2020051802/"},{"title":"Difference between sh and bash","text":"- sh (or the Shell Command Language) is a programming language described by the POSIX standard. It has many implementations (ksh88, dash, …). bash can also be considered an implementation of sh (see below). Because sh is a specification, not an implementation, /bin/sh is a symlink (or a hard link) to an actual implementation on most POSIX systems.","link":"/2020/05/18/2020051901/"},{"title":"k8s cheat sheet","text":"- Cluster version kubectl version Cluster details kubectl cluster-info kubectl get nodes kubectl get deployments kubectl proxy kubectl get pods kubectl describe pods kubectl logs $POD_NAME 配置文件 ~/.kube/config 查看配置 kubectl config view 查看集群列表 kubectl config get-clusters 查看 Context 列表 kubectl config get-contexts 设置当前 Context kubectl config use-context dev Dashboard部署 kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0/aio/deploy/recommended.yaml 访问 kubectl proxy http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/#/overview?namespace=default 部署应用build image docker build -t dalufanjiadan/springcloud-payment8002 . docker push dalufanjiadan/springcloud-payment8002 创建 deployment使用本地镜像 kubectl create deployment springcloud-eureka –image=dalufanjiadan/springcloud-eureka –port=7001 使用 docker hub 镜像 kubectl create deployment springcloud-eureka –image=docker.io/dalufanjiadan/springcloud-eureka 创建 service kubectl expose deployment/springcloud-eureka –type=LoadBalancer –name=springcloud-eureka –port=7001 缩扩容手动 kubectl scale deployments/springcloud-eureka –replicas=4 自动 更新、发布、回滚","link":"/2020/05/19/2020052001/"},{"title":"Linux Commands Cheat Sheet","text":"- top tail -f file less -N file htop scp grep SYSTEM INFORMATION uname -a - Display Linux system information uname -r - Display kernel release information cat /etc/redhat-release - Show which version of redhat installed uptime - Show how long the system has been running + load hostname - Show system host name hostname -I - Display the IP addresses of the host last reboot - Show system reboot history date - Show the current date and time cal - Show this month’s calendar w - Display who is online whoami - Who you are logged in as HARDWARE INFORMATION dmesg - Display messages in kernel ring buffer cat /proc/cpuinfo - Display CPU information cat /proc/meminfo - Display memory information free -h - Display free and used memory ( -h for human readable, -m for MB, -g for GB.) lspci -tv - Display PCI devices lsusb -tv - Display USB devices dmidecode - Display DMI/SMBIOS (hardware info) from the BIOS hdparm -i /dev/sda - Show info about disk sda hdparm -tT /dev/sda - Perform a read speed test on disk sda badblocks -s /dev/sda - Test for unreadable blocks on disk sda PERFORMANCE MONITORING AND STATISTICS top - Display and manage the top processes htop - Interactive process viewer (top alternative) mpstat 1 - Display processor related statistics vmstat 1 - Display virtual memory statistics iostat 1 - Display I/O statistics tail 100 /var/log/messages - Display the last 100 syslog messages (Use /var/log/syslog for Debian based systems.) tcpdump -i eth0 - Capture and display all packets on interface eth0 tcpdump -i eth0 'port 80' - Monitor all traffic on port 80 ( HTTP ) lsof - List all open files on the system lsof -u user - List files opened by user free -h - Display free and used memory ( -h for human readable, -m for MB, -g for GB.) watch df -h - Execute “df -h”, showing periodic update USER INFORMATION AND MANAGEMENT id - Display the user and group ids of your current user. last - Display the last users who have logged onto the system. who - Show who is logged into the system. w - Show who is logged in and what they are doing. groupadd test - Create a group named “test”. useradd -c &quot;John Smith&quot; -m john - Create an account named john, with a comment of “John Smith” and create the user’s home directory. userdel john - Delete the john account. usermod -aG sales john - Add the john account to the sales group FILE AND DIRECTORY COMMANDS ls -al - List all files in a long listing (detailed) format pwd - Display the present working directory mkdir directory - Create a directory rm file - Remove (delete) file rm -r directory - Remove the directory and its contents recursively rm -f file - Force removal of file without prompting for confirmation rm -rf directory - Forcefully remove directory recursively cp file1 file2 - Copy file1 to file2 cp -r source_directory destination - Copy source_directory recursively to destination. If destination exists, copy source_directory into destination, otherwise create destination with the contents of source_directory mv file1 file2 - Rename or move file1 to file2. If file2 is an existing directory, move file1 into directory file2 ln -s /path/to/file linkname - Create symbolic link to linkname touch file - Create an empty file or update the access and modification times of file. cat file - View the contents of file less file - Browse through a text file head file - Display the first 10 lines of file tail file - Display the last 10 lines of file tail -f file - Display the last 10 lines of file and “follow” the file as it grows. PROCESS MANAGEMENT ps - Display your currently running processes ps -ef - Display all the currently running processes on the system. ps -ef | grep processname - Display process information for processname top - Display and manage the top processes htop - Interactive process viewer (top alternative) kill pid - Kill process with process ID of pid killall processname - Kill all processes named processname program &amp; - Start program in the background bg - Display stopped or background jobs fg - Brings the most recent background job to foreground fg n - Brings job n to the foreground NETWORKING ifconfig -a - Display all network interfaces and ip address ifconfig eth0 - Display eth0 address and details ethtool eth0 - Query or control network driver and hardware settings ping host - Send ICMP echo request to host whois domain - Display whois information for domain dig domain - Display DNS information for domain dig -x IP_ADDRESS - Reverse lookup of IP_ADDRESS host domain - Display DNS ip address for domain hostname -i - Display the network address of the host name. hostname -I - Display all local ip addresses wget http://domain.com/file - Download http://domain.com/file netstat -nutlp - Display listening tcp and udp ports and corresponding programs ARCHIVES (TAR FILES) tar cf archive.tar directory - Create tar named archive.tar containing directory. tar xf archive.tar - Extract the contents from archive.tar. tar czf archive.tar.gz directory - Create a gzip compressed tar file name archive.tar.gz. tar xzf archive.tar.gz - Extract a gzip compressed tar file. tar cjf archive.tar.bz2 directory - Create a tar file with bzip2 compression tar xjf archive.tar.bz2 - Extract a bzip2 compressed tar file. INSTALLING PACKAGES yum search keyword - Search for a package by keyword. yum install package - Install package. yum info package - Display description and summary information about package. rpm -i package.rpm - Install package from local file named package.rpm yum remove package - Remove/uninstall package. Install software from source code. tar zxvf sourcecode.tar.gz cd sourcecode ./configure make make install SEARCH grep pattern file - Search for pattern in file grep -r pattern directory - Search recursively for pattern in directory locate name - Find files and directories by name find /home/john -name 'prefix*' - Find files in /home/john that start with “prefix”. find /home -size +100M - Find files larger than 100MB in /home SSH LOGINS ssh host - Connect to host as your local username. ssh user@host - Connect to host as user ssh -p port user@host - Connect to host using port FILE TRANSFERS scp file.txt server:/tmp Secure copy file.txt to the /tmp folder on server scp server:/var/www/*.html /tmp Copy *.html files from server to the local /tmp folder. scp -r server:/var/www /tmp Copy all files and directories recursively from server to the current system’s /tmp folder. rsync -a /home /backups/ Synchronize /home to /backups/home rsync -avz /home server:/backups/ Synchronize files/directories between the local and remote system with compression enabled DISK USAGE df -h - Show free and used space on mounted filesystems df -i - Show free and used inodes on mounted filesystems fdisk -l - Display disks partitions sizes and types du -ah - Display disk usage for all files and directories in human readable format du -sh - Display total disk usage off the current directory DIRECTORY NAVIGATION To go up one level of the directory tree. (Change into the parent directory.) Go to the $HOME directory Change to the /etc directory","link":"/2020/08/23/2020082301/"},{"title":"Dockerfile cheat sheet","text":"- FROMUsage: FROM FROM : FROM @ Information: FROM must be the first non-comment instruction in the Dockerfile. FROM can appear multiple times within a single Dockerfile in order to create multiple images. Simply make a note of the last image ID output by the commit before each new FROM command. The tag or digest values are optional. If you omit either of them, the builder assumes a latest by default. The builder returns an error if it cannot match the tag value. MAINTAINERUsage: MAINTAINER The MAINTAINER instruction allows you to set the Author field of the generated images. RUNUsage: RUN (shell form, the command is run in a shell, which by default is /bin/sh -c on Linux or cmd /S /C on Windows) RUN [““, ““, ““] (exec form) Information: The exec form makes it possible to avoid shell string munging, and to RUN commands using a base image that does not contain the specified shell executable. The default shell for the shell form can be changed using the SHELL command. Normal shell processing does not occur when using the exec form. For example, RUN [“echo”, “$HOME”] will not do variable substitution on $HOME. CMDUsage: CMD [““,”“,”“] (exec form, this is the preferred form) CMD [““,”“] (as default parameters to ENTRYPOINT) CMD (shell form) Information: The main purpose of a CMD is to provide defaults for an executing container. These defaults can include an executable, or they can omit the executable, in which case you must specify an ENTRYPOINT instruction as well. There can only be one CMD instruction in a Dockerfile. If you list more than one CMD then only the last CMD will take effect. If CMD is used to provide default arguments for the ENTRYPOINT instruction, both the CMD and ENTRYPOINT instructions should be specified with the JSON array format. If the user specifies arguments to docker run then they will override the default specified in CMD.Normal shell processing does not occur when using the exec form. For example, CMD [“echo”, “$HOME”] will not do variable substitution on $HOME. LABELUsage: LABEL = [= …] Information: The LABEL instruction adds metadata to an image. To include spaces within a LABEL value, use quotes and backslashes as you would in command-line parsing. Labels are additive including LABELs in FROM images. If Docker encounters a label/key that already exists, the new value overrides any previous labels with identical keys. To view an image’s labels, use the docker inspect command. They will be under the “Labels” JSON attribute. EXPOSEUsage: EXPOSE [ …] Information: Informs Docker that the container listens on the specified network port(s) at runtime. EXPOSE does not make the ports of the container accessible to the host. ENVUsage: ENV ENV = [= …] Information: The ENV instruction sets the environment variable to the value . The value will be in the environment of all “descendant” Dockerfile commands and can be replaced inline as well. The environment variables set using ENV will persist when a container is run from the resulting image. The first form will set a single variable to a value with the entire string after the first space being treated as the - including characters such as spaces and quotes. ADDUsage: ADD [ …] ADD [““, … ““] (this form is required for paths containing whitespace) Information: Copies new files, directories, or remote file URLs from and adds them to the filesystem of the image at the path . may contain wildcards and matching will be done using Go’s filepath.Match rules. If is a file or directory, then they must be relative to the source directory that is being built (the context of the build). is an absolute path, or a path relative to WORKDIR. If doesn’t exist, it is created along with all missing directories in its path. COPYUsage: COPY [ …] COPY [““, … ““] (this form is required for paths containing whitespace) Information: Copies new files or directories from and adds them to the filesystem of the image at the path . may contain wildcards and matching will be done using Go’s filepath.Match rules. must be relative to the source directory that is being built (the context of the build). is an absolute path, or a path relative to WORKDIR. If doesn’t exist, it is created along with all missing directories in its path. ENTRYPOINTUsage: ENTRYPOINT [““, ““, ““] (exec form, preferred) ENTRYPOINT (shell form) Information: Allows you to configure a container that will run as an executable. Command line arguments to docker run will be appended after all elements in an exec form ENTRYPOINT and will override all elements specified using CMD. The shell form prevents any CMD or run command line arguments from being used, but the ENTRYPOINT will start via the shell. This means the executable will not be PID 1 nor will it receive UNIX signals. Prepend exec to get around this drawback. Only the last ENTRYPOINT instruction in the Dockerfile will have an effect. VOLUMEUsage: VOLUME [““, …] VOLUME [ …] Creates a mount point with the specified name and marks it as holding externally mounted volumes from native host or other containers. USERUsage: USER &lt;username | UID&gt; The USER instruction sets the user name or UID to use when running the image and for any RUN, CMD and ENTRYPOINT instructions that follow it in the Dockerfile. WORKDIRUsage: WORKDIR &lt;/path/to/workdir&gt; Information: Sets the working directory for any RUN, CMD, ENTRYPOINT, COPY, and ADD instructions that follow it. It can be used multiple times in the one Dockerfile. If a relative path is provided, it will be relative to the path of the previous WORKDIR instruction. ARGUsage: ARG [=] Information: Defines a variable that users can pass at build-time to the builder with the docker build command using the –build-arg = flag.Multiple variables may be defined by specifying ARG multiple times. It is not recommended to use build-time variables for passing secrets like github keys, user credentials, etc. Build-time variable values are visible to any user of the image with the docker history command. Environment variables defined using the ENV instruction always override an ARG instruction of the same name. Docker has a set of predefined ARG variables that you can use without a corresponding ARG instruction in the Dockerfile.HTTP_PROXY and http_proxyHTTPS_PROXY and https_proxyFTP_PROXY and ftp_proxyNO_PROXY and no_proxyReference ONBUILDUsage: ONBUILD Information: Adds to the image a trigger instruction to be executed at a later time, when the image is used as the base for another build. The trigger will be executed in the context of the downstream build, as if it had been inserted immediately after the FROM instruction in the downstream Dockerfile.Any build instruction can be registered as a trigger.Triggers are inherited by the “child” build only. In other words, they are not inherited by “grand-children” builds.The ONBUILD instruction may not trigger FROM, MAINTAINER, or ONBUILD instructions.Reference - Best Practices STOPSIGNALUsage: STOPSIGNAL The STOPSIGNAL instruction sets the system call signal that will be sent to the container to exit. This signal can be a valid unsigned number that matches a position in the kernel’s syscall table, for instance 9, or a signal name in the format SIGNAME, for instance SIGKILL. HEALTHCHECKUsage: HEALTHCHECK [] CMD (check container health by running a command inside the container) HEALTHCHECK NONE (disable any healthcheck inherited from the base image) SHELLUsage: SHELL [““, ““, ““] Information: Allows the default shell used for the shell form of commands to be overridden. Each SHELL instruction overrides all previous SHELL instructions, and affects all subsequent instructions. Allows an alternate shell be used such as zsh, csh, tcsh, powershell, and others.","link":"/2020/08/31/2020083101/"},{"title":"gitlab cicd","text":"- 创建 container runnerdockerfile123456789101112131415# See here for image contents: https://github.com/microsoft/vscode-dev-containers/tree/v0.134.1/containers/ubuntu/.devcontainer/base.DockerfileARG VARIANT=\"focal\"FROM mcr.microsoft.com/vscode/devcontainers/base:0-${VARIANT}# [Optional] Uncomment this section to install additional OS packages.# RUN apt-get update &amp;&amp; export DEBIAN_FRONTEND=noninteractive \\# &amp;&amp; apt-get -y install --no-install-recommends &lt;your-package-list-here&gt;RUN curl -L https://packages.gitlab.com/install/repositories/runner/gitlab-ci-multi-runner/script.deb.sh | sudo bashRUN yes | sudo apt-get install gitlab-ci-multi-runnerRUN printf 'https://gitlab.uuzu.com/\\nAMJJgESUzDLumCZgSU5y\\nrunner\\nrunner\\nshell\\n' | sudo gitlab-ci-multi-runner registerRUN gitlab-ci-multi-runner startRUN yes | apt-get install rsyncRUN yes | ssh-keygen -t rsa -C \"$(whoami)@$(hostname)-$(date -I)\" Install GitLab Runner Specify the following URL during the Runner setup: https://gitlab.uuzu.com/ Use the following registration token during setup: AMJJgESUzDLumCZgSU5y Start the Runner! gitlab-ci-multi-runner start 查看 runner list sudo gitlab-runner list .gitlab-ci.yml123456789101112stages: - build_QA# 测试build_QA: script: - echo \"hello\" - rsync -rve ssh test.txt /workspaces/gitlab-runner stage: build_QA only: - /release/ gitlab 项目配置VariablesSSH_PRIVATE_KEY：把本机（runner所在机器）的私钥复制过来：~/.ssh/id_rsa runner","link":"/2020/09/03/2020090301/"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2020/05/20/hello-world/"}],"tags":[{"name":"hexo","slug":"hexo","link":"/tags/hexo/"},{"name":"software","slug":"software","link":"/tags/software/"},{"name":"springboot","slug":"springboot","link":"/tags/springboot/"},{"name":"cookie","slug":"cookie","link":"/tags/cookie/"},{"name":"webclient","slug":"webclient","link":"/tags/webclient/"},{"name":"vscode","slug":"vscode","link":"/tags/vscode/"},{"name":"mybatis","slug":"mybatis","link":"/tags/mybatis/"},{"name":"mysql","slug":"mysql","link":"/tags/mysql/"},{"name":"ubuntu","slug":"ubuntu","link":"/tags/ubuntu/"},{"name":"git","slug":"git","link":"/tags/git/"},{"name":"jackson","slug":"jackson","link":"/tags/jackson/"},{"name":"swagger","slug":"swagger","link":"/tags/swagger/"},{"name":"win","slug":"win","link":"/tags/win/"},{"name":"resttemplate","slug":"resttemplate","link":"/tags/resttemplate/"},{"name":"设计模式","slug":"设计模式","link":"/tags/设计模式/"},{"name":"docker","slug":"docker","link":"/tags/docker/"},{"name":"java","slug":"java","link":"/tags/java/"},{"name":"arraylist","slug":"arraylist","link":"/tags/arraylist/"},{"name":"double","slug":"double","link":"/tags/double/"},{"name":"github","slug":"github","link":"/tags/github/"},{"name":"jpa","slug":"jpa","link":"/tags/jpa/"},{"name":"date","slug":"date","link":"/tags/date/"},{"name":"interceptor","slug":"interceptor","link":"/tags/interceptor/"},{"name":"javascript","slug":"javascript","link":"/tags/javascript/"},{"name":"css","slug":"css","link":"/tags/css/"},{"name":"html","slug":"html","link":"/tags/html/"},{"name":"demo","slug":"demo","link":"/tags/demo/"},{"name":"mac","slug":"mac","link":"/tags/mac/"},{"name":"linux","slug":"linux","link":"/tags/linux/"},{"name":"thread local","slug":"thread-local","link":"/tags/thread-local/"},{"name":"filter","slug":"filter","link":"/tags/filter/"},{"name":"spring","slug":"spring","link":"/tags/spring/"},{"name":"aspect","slug":"aspect","link":"/tags/aspect/"},{"name":"iterm2","slug":"iterm2","link":"/tags/iterm2/"},{"name":"actuator","slug":"actuator","link":"/tags/actuator/"},{"name":"zsh","slug":"zsh","link":"/tags/zsh/"},{"name":"maven","slug":"maven","link":"/tags/maven/"},{"name":"brew","slug":"brew","link":"/tags/brew/"},{"name":"shell","slug":"shell","link":"/tags/shell/"},{"name":"bash","slug":"bash","link":"/tags/bash/"},{"name":"k8s","slug":"k8s","link":"/tags/k8s/"}],"categories":[{"name":"hexo","slug":"hexo","link":"/categories/hexo/"},{"name":"win","slug":"win","link":"/categories/win/"},{"name":"springboot","slug":"springboot","link":"/categories/springboot/"},{"name":"写作","slug":"hexo/写作","link":"/categories/hexo/写作/"},{"name":"software","slug":"win/software","link":"/categories/win/software/"},{"name":"mysql","slug":"mysql","link":"/categories/mysql/"},{"name":"ubuntu","slug":"ubuntu","link":"/categories/ubuntu/"},{"name":"software","slug":"software","link":"/categories/software/"},{"name":"resttemplate","slug":"springboot/resttemplate","link":"/categories/springboot/resttemplate/"},{"name":"设计模式","slug":"设计模式","link":"/categories/设计模式/"},{"name":"docker","slug":"docker","link":"/categories/docker/"},{"name":"java","slug":"java","link":"/categories/java/"},{"name":"git","slug":"git","link":"/categories/git/"},{"name":"arraylist","slug":"java/arraylist","link":"/categories/java/arraylist/"},{"name":"github","slug":"github","link":"/categories/github/"},{"name":"double","slug":"java/double","link":"/categories/java/double/"},{"name":"javascript","slug":"javascript","link":"/categories/javascript/"},{"name":"css","slug":"css","link":"/categories/css/"},{"name":"html","slug":"html","link":"/categories/html/"},{"name":"mac","slug":"mac","link":"/categories/mac/"},{"name":"vscode","slug":"vscode","link":"/categories/vscode/"},{"name":"linux","slug":"linux","link":"/categories/linux/"},{"name":"spring","slug":"spring","link":"/categories/spring/"},{"name":"数组","slug":"java/数组","link":"/categories/java/数组/"},{"name":"zsh","slug":"zsh","link":"/categories/zsh/"},{"name":"maven","slug":"maven","link":"/categories/maven/"},{"name":"k8s","slug":"k8s","link":"/categories/k8s/"}]}